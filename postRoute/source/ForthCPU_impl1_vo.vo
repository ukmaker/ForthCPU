
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.12.1.454

// ldbanno -n Verilog -o ForthCPU_impl1_vo.vo -w -neg -gui -msgset C:/Users/Duncan/git/ForthCPU/promote.xml ForthCPU_impl1.ncd 
// Netlist created on Fri Dec 15 18:56:22 2023
// Netlist written on Fri Dec 15 22:43:02 2023
// Design is for device LCMXO3L-6900C
// Design is for package CABGA256
// Design is for performance grade 5

`timescale 1 ns / 1 ps

module mcu ( PIN_CLK_X1, PIN_RESETN, PIN_STOPPEDN, PIN_FETCHN, PIN_DECODEN, 
             PIN_EXECUTEN, PIN_COMMITN, PIN_ADDR_BUS, PIN_DATA_BUS, PIN_INT0, 
             PIN_INT1, PIN_INT2, PIN_INT3, PIN_INT4, PIN_INT5, PIN_INT6, 
             PIN_RDN, PIN_WR0N, PIN_WR1N, PIN_RXD, PIN_TXD, PIN_DIPSW, PIN_LED, 
             PIN_DEBUG_DATA, PIN_DEBUG_WRN, PIN_DEBUG_RDN, PIN_DEBUG_ADDR, 
             PIN_DEBUG_STOP, PIN_DIN_GPIO, PIN_RDN_GPIO, PIN_WRN_GPIO, 
             PIN_ADDR_GPIO );
  input  PIN_CLK_X1, PIN_RESETN, PIN_INT0, PIN_INT1, PIN_INT2, PIN_INT3, 
         PIN_INT4, PIN_INT5, PIN_INT6, PIN_RXD;
  input  [3:0] PIN_DIPSW;
  input  PIN_DEBUG_WRN, PIN_DEBUG_RDN;
  input  [2:0] PIN_DEBUG_ADDR;
  input  [15:0] PIN_DIN_GPIO;
  output PIN_STOPPEDN, PIN_FETCHN, PIN_DECODEN, PIN_EXECUTEN, PIN_COMMITN;
  output [15:0] PIN_ADDR_BUS;
  output [15:0] PIN_DATA_BUS;
  output PIN_RDN, PIN_WR0N, PIN_WR1N, PIN_TXD;
  output [7:0] PIN_LED;
  output PIN_DEBUG_STOP, PIN_RDN_GPIO, PIN_WRN_GPIO, PIN_ADDR_GPIO;
  inout  [7:0] PIN_DEBUG_DATA;
  wire   \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_cry , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_16 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[15] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_15 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_14 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[14] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_14 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[13] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_13 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_12 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[12] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_12 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[11] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_11 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_10 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[10] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_10 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[9] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_9 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_8 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[8] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_8 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[7] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_7 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_6 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[6] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_6 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_5 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[5] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_4 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[4] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_4 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[3] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_3 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_2 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[2] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_2 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[1] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_1 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_0 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[0] , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[0] , 
         \mcuResourcesInst/UARTInst/uartTxInst/TX_CLK_DIV_i[0] , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[15] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_14 , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[14] , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[13] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_12 , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[12] , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[11] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_10 , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[10] , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[9] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_8 , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[8] , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[7] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_6 , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[6] , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[5] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_4 , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[4] , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[3] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_2 , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[2] , 
         \mcuResourcesInst/UARTInst/TX_CLK_DIV[1] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_0 , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[15] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_0_RNIBNIL , 
         PIN_CLK_X1_c, 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_14 , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[14] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[13] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_12 , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[12] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[11] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_10 , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[10] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[9] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_8 , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[8] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[7] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_6 , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[6] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[5] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_4 , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[4] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[3] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_2 , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[2] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[1] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_0 , 
         RESET_i, \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[0] , 
         \mcuResourcesInst/UARTInst/TX_ACTIVE , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_I_51_cry , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_I_51_0_S0 , 
         \mcuResourcesInst/UARTInst/TX_ACTIVE_R , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT[17] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[15] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_15 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[14] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_16 , \DOUT[7] , 
         \DOUT[6] , \mcuResourcesInst/UARTInst/TX_CLK_DIV_1_sqmuxa , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_data_tmp[6] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_14 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[12] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[13] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_13 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[11] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[10] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_12 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_11 , \DOUT[1] , 
         N_338_i, 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_data_tmp[4] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_10 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[9] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_9 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[8] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_7 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_8 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[6] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[7] , N_189_i, 
         N_270_i, 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_data_tmp[2] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[4] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_6 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[5] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_5 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[3] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_3 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_4 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[2] , \DOUT[5] , 
         \DOUT[4] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_data_tmp[0] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[0] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_1 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[1] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_2 , \DOUT[3] , 
         \DOUT[2] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_16_cry , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_14 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_12 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_10 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_8 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_6 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_4 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_2 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_0 , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[0] , 
         \mcuResourcesInst/UARTInst/uartRXInst/RX_CLK_DIV_i[0] , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_16 , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[15] , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_14 , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[14] , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[13] , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_12 , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[12] , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[11] , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_10 , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[10] , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[9] , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_8 , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[8] , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[7] , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_6 , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[6] , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[5] , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_4 , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[4] , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[3] , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_2 , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[2] , 
         \mcuResourcesInst/UARTInst/RX_CLK_DIV[1] , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_0 , 
         PIN_RXD_c, \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[6] , 
         \mcuResourcesInst/UARTInst/RX_BYTE[6] , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_14 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_s_15_0_S0 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_12 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_13_0_S0 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_13_0_S1 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_10 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_11_0_S0 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_11_0_S1 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_8 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_9_0_S0 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_9_0_S1 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_6 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_7_0_S0 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_7_0_S1 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_4 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_5_0_S0 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_5_0_S1 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_2 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_3_0_S0 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_3_0_S1 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_0 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_1_0_S0 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_1_0_S1 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_SM_Main_5_i , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_0_0_S1 , 
         \coreInst/PC_A[1] , \coreInst/un1_HERE_cry_0 , \coreInst/PC_A[15] , 
         \coreInst/PC_A[14] , \coreInst/programCounterInst/un2_HERE_cry_13 , 
         \coreInst/HERE[14] , \coreInst/HERE[15] , \coreInst/PC_A[13] , 
         \coreInst/PC_A[12] , \coreInst/programCounterInst/un2_HERE_cry_11 , 
         \coreInst/HERE[12] , \coreInst/HERE[13] , \coreInst/PC_A[11] , 
         \coreInst/PC_A[10] , \coreInst/programCounterInst/un2_HERE_cry_9 , 
         \coreInst/HERE[10] , \coreInst/HERE[11] , \coreInst/PC_A[9] , 
         \coreInst/PC_A[8] , \coreInst/programCounterInst/un2_HERE_cry_7 , 
         \coreInst/HERE[8] , \coreInst/HERE[9] , \coreInst/PC_A[7] , 
         \coreInst/PC_A[6] , \coreInst/programCounterInst/un2_HERE_cry_5 , 
         \coreInst/HERE[6] , \coreInst/HERE[7] , \coreInst/PC_A[5] , 
         \coreInst/PC_A[4] , \coreInst/programCounterInst/un2_HERE_cry_3 , 
         \coreInst/HERE[4] , \coreInst/HERE[5] , \coreInst/PC_A[3] , 
         \coreInst/PC_A[2] , \coreInst/programCounterInst/un2_HERE_cry_1 , 
         \coreInst/HERE[2] , \coreInst/HERE[3] , 
         \coreInst/programCounterInst/N_481 , \CPU_DIN[15] , 
         \coreInst/programCounterInst/ARGB[15] , 
         \coreInst/programCounterInst/SUM[15] , 
         \coreInst/programCounterInst/SUM[0] , 
         \coreInst/programCounterInst/N_290_i , 
         \coreInst/programCounterInst/SUM_cry_14 , 
         \coreInst/programCounterInst/INTR1[15] , 
         \coreInst/programCounterInst/INTR1[0] , \CPU_DIN[14] , 
         \coreInst/programCounterInst/ARGB[14] , 
         \coreInst/programCounterInst/ARGB[13] , \CPU_DIN[13] , 
         \coreInst/programCounterInst/SUM[14] , 
         \coreInst/programCounterInst/SUM[13] , 
         \coreInst/programCounterInst/SUM_cry_12 , 
         \coreInst/programCounterInst/INTR1[13] , 
         \coreInst/programCounterInst/INTR1[14] , 
         \coreInst/programCounterInst/ARGB[12] , \CPU_DIN[12] , 
         \coreInst/programCounterInst/ARGB[11] , \CPU_DIN[11] , 
         \coreInst/programCounterInst/SUM[12] , 
         \coreInst/programCounterInst/SUM[11] , 
         \coreInst/programCounterInst/SUM_cry_10 , 
         \coreInst/programCounterInst/INTR1[11] , 
         \coreInst/programCounterInst/INTR1[12] , 
         \coreInst/programCounterInst/ARGB[10] , \CPU_DIN[10] , \CPU_DIN[9] , 
         \coreInst/programCounterInst/ARGB[9] , 
         \coreInst/programCounterInst/SUM[10] , 
         \coreInst/programCounterInst/SUM[9] , 
         \coreInst/programCounterInst/SUM_cry_8 , 
         \coreInst/programCounterInst/INTR1[9] , 
         \coreInst/programCounterInst/INTR1[10] , 
         \coreInst/programCounterInst/ARGB[8] , \coreInst/CPU_DIN[8] , 
         \coreInst/programCounterInst/ARGB[7] , \CPU_DIN[7] , 
         \coreInst/programCounterInst/SUM[8] , 
         \coreInst/programCounterInst/SUM[7] , 
         \coreInst/programCounterInst/SUM_cry_6 , 
         \coreInst/programCounterInst/INTR1[7] , 
         \coreInst/programCounterInst/INTR1[8] , 
         \coreInst/programCounterInst/ARGB[6] , \CPU_DIN[6] , 
         \coreInst/programCounterInst/ARGB[5] , \CPU_DIN[5] , 
         \coreInst/programCounterInst/SUM[6] , 
         \coreInst/programCounterInst/SUM[5] , 
         \coreInst/programCounterInst/SUM_cry_4 , 
         \coreInst/programCounterInst/INTR1[5] , 
         \coreInst/programCounterInst/INTR1[6] , 
         \coreInst/programCounterInst/ARGB[4] , \CPU_DIN[4] , 
         \coreInst/programCounterInst/ARGB[3] , \CPU_DIN[3] , 
         \coreInst/programCounterInst/SUM[4] , 
         \coreInst/programCounterInst/SUM[3] , 
         \coreInst/programCounterInst/SUM_cry_2 , 
         \coreInst/programCounterInst/INTR1[3] , 
         \coreInst/programCounterInst/INTR1[4] , 
         \coreInst/programCounterInst/N_201 , 
         \coreInst/programCounterInst/N_630 , 
         \coreInst/programCounterInst/N_631 , 
         \coreInst/programCounterInst/ARGA_0_iv_i_a0[1] , 
         \coreInst/programCounterInst/ARGA_0_iv_i_0_2[1] , 
         \coreInst/programCounterInst/ARGB[1] , 
         \coreInst/programCounterInst/SUM[2] , 
         \coreInst/programCounterInst/SUM[1] , 
         \coreInst/programCounterInst/SUM_cry_0 , 
         \coreInst/programCounterInst/INTR1[1] , 
         \coreInst/programCounterInst/INTR1[2] , 
         \coreInst/programCounterInst/ARGA_i_0_2[0] , 
         \coreInst/programCounterInst/SUM , 
         \coreInst/programCounterInst/ARGA_i_0_3[0] , 
         \coreInst/fullALUInst/aluInst/madd_11[31] , 
         \coreInst/fullALUInst/aluInst/madd_14_cry_22 , 
         \coreInst/fullALUInst/aluInst/madd_14[31] , 
         \coreInst/fullALUInst/aluInst/madd_11[30] , 
         \coreInst/fullALUInst/aluInst/madd_11[29] , 
         \coreInst/fullALUInst/aluInst/madd_14_cry_20 , 
         \coreInst/fullALUInst/aluInst/madd_14[29] , 
         \coreInst/fullALUInst/aluInst/madd_14[30] , 
         \coreInst/fullALUInst/aluInst/madd_11[28] , 
         \coreInst/fullALUInst/aluInst/madd_11[27] , 
         \coreInst/fullALUInst/aluInst/madd_14_cry_18 , 
         \coreInst/fullALUInst/aluInst/madd_14[27] , 
         \coreInst/fullALUInst/aluInst/madd_14[28] , 
         \coreInst/fullALUInst/aluInst/madd_11[26] , 
         \coreInst/fullALUInst/aluInst/madd_11[25] , 
         \coreInst/fullALUInst/aluInst/madd_14_cry_16 , 
         \coreInst/fullALUInst/aluInst/madd_14[25] , 
         \coreInst/fullALUInst/aluInst/madd_14[26] , 
         \coreInst/fullALUInst/aluInst/madd_11[24] , 
         \coreInst/fullALUInst/aluInst/madd_12[24] , 
         \coreInst/fullALUInst/aluInst/madd_11[23] , 
         \coreInst/fullALUInst/aluInst/madd_12[23] , 
         \coreInst/fullALUInst/aluInst/madd_14_cry_14 , 
         \coreInst/fullALUInst/aluInst/madd_14[23] , 
         \coreInst/fullALUInst/aluInst/madd_14[24] , 
         \coreInst/fullALUInst/aluInst/madd_12[22] , 
         \coreInst/fullALUInst/aluInst/madd_11[22] , 
         \coreInst/fullALUInst/aluInst/madd_12[21] , 
         \coreInst/fullALUInst/aluInst/madd_11[21] , 
         \coreInst/fullALUInst/aluInst/madd_14_cry_12 , 
         \coreInst/fullALUInst/aluInst/madd_14[21] , 
         \coreInst/fullALUInst/aluInst/madd_14[22] , 
         \coreInst/fullALUInst/aluInst/madd_12[20] , 
         \coreInst/fullALUInst/aluInst/madd_11[20] , 
         \coreInst/fullALUInst/aluInst/madd_11[19] , 
         \coreInst/fullALUInst/aluInst/madd_12[19] , 
         \coreInst/fullALUInst/aluInst/madd_14_cry_10 , 
         \coreInst/fullALUInst/aluInst/madd_14[19] , 
         \coreInst/fullALUInst/aluInst/madd_14[20] , 
         \coreInst/fullALUInst/aluInst/madd_11[18] , 
         \coreInst/fullALUInst/aluInst/madd_12[18] , 
         \coreInst/fullALUInst/aluInst/madd_11[17] , 
         \coreInst/fullALUInst/aluInst/madd_12[17] , 
         \coreInst/fullALUInst/aluInst/madd_14_cry_8 , 
         \coreInst/fullALUInst/aluInst/madd_14[17] , 
         \coreInst/fullALUInst/aluInst/madd_14[18] , 
         \coreInst/fullALUInst/aluInst/madd_11[16] , 
         \coreInst/fullALUInst/aluInst/madd_12[16] , 
         \coreInst/fullALUInst/aluInst/madd_11[15] , 
         \coreInst/fullALUInst/aluInst/madd_12[15] , 
         \coreInst/fullALUInst/aluInst/madd_14_cry_6 , \coreInst/madd_14[15] , 
         \coreInst/fullALUInst/aluInst/madd_14[16] , 
         \coreInst/fullALUInst/aluInst/madd_12[14] , 
         \coreInst/fullALUInst/aluInst/madd_13[14] , 
         \coreInst/fullALUInst/aluInst/madd_12[13] , 
         \coreInst/fullALUInst/aluInst/madd_13[13] , 
         \coreInst/fullALUInst/aluInst/madd_14_cry_4 , 
         \coreInst.fullALUInst.aluInst.un21_RESULT[13] , 
         \coreInst/un21_RESULT[14] , 
         \coreInst/fullALUInst/aluInst/madd_12[12] , 
         \coreInst/fullALUInst/aluInst/madd_10[12] , 
         \coreInst/fullALUInst/aluInst/madd_13 , 
         \coreInst/fullALUInst/aluInst/madd_10[11] , 
         \coreInst/fullALUInst/aluInst/madd_12[11] , 
         \coreInst/fullALUInst/aluInst/madd_14_cry_2 , 
         \coreInst/un21_RESULT[11] , \coreInst/un21_RESULT[12] , 
         \coreInst/fullALUInst/aluInst/madd_12[10] , 
         \coreInst/fullALUInst/aluInst/madd_0[10] , 
         \coreInst/fullALUInst/aluInst/madd_10 , 
         \coreInst/fullALUInst/aluInst/madd_12[9] , 
         \coreInst/fullALUInst/aluInst/madd_2[9] , 
         \coreInst/fullALUInst/aluInst/madd_14_cry_0 , 
         \coreInst/un21_RESULT[9] , \coreInst/un21_RESULT[10] , 
         \coreInst/fullALUInst/aluInst/madd_14 , 
         \coreInst/fullALUInst/aluInst/madd_12[8] , 
         \coreInst/fullALUInst/aluInst/madd_7[31] , 
         \coreInst/fullALUInst/aluInst/madd_13_cry_22 , 
         \coreInst/fullALUInst/aluInst/madd_13[31] , 
         \coreInst/fullALUInst/aluInst/madd_7[30] , 
         \coreInst/fullALUInst/aluInst/madd_7[29] , 
         \coreInst/fullALUInst/aluInst/madd_13_cry_20 , 
         \coreInst/fullALUInst/aluInst/madd_13[29] , 
         \coreInst/fullALUInst/aluInst/madd_13[30] , 
         \coreInst/fullALUInst/aluInst/madd_7[28] , 
         \coreInst/fullALUInst/aluInst/madd_10[27] , 
         \coreInst/fullALUInst/aluInst/madd_6[27] , 
         \coreInst/fullALUInst/aluInst/madd_13_cry_18 , 
         \coreInst/fullALUInst/aluInst/madd_13[27] , 
         \coreInst/fullALUInst/aluInst/madd_13[28] , 
         \coreInst/fullALUInst/aluInst/madd_10[26] , 
         \coreInst/fullALUInst/aluInst/madd_5[26] , 
         \coreInst/fullALUInst/aluInst/madd_10[25] , 
         \coreInst/fullALUInst/aluInst/madd_5[25] , 
         \coreInst/fullALUInst/aluInst/madd_13_cry_16 , 
         \coreInst/fullALUInst/aluInst/madd_13[25] , 
         \coreInst/fullALUInst/aluInst/madd_13[26] , 
         \coreInst/fullALUInst/aluInst/madd_10[24] , 
         \coreInst/fullALUInst/aluInst/madd_4[24] , 
         \coreInst/fullALUInst/aluInst/madd_10[23] , 
         \coreInst/fullALUInst/aluInst/madd_9[23] , 
         \coreInst/fullALUInst/aluInst/madd_13_cry_14 , 
         \coreInst/fullALUInst/aluInst/madd_13[23] , 
         \coreInst/fullALUInst/aluInst/madd_13[24] , 
         \coreInst/fullALUInst/aluInst/madd_9[22] , 
         \coreInst/fullALUInst/aluInst/madd_10[22] , 
         \coreInst/fullALUInst/aluInst/madd_9[21] , 
         \coreInst/fullALUInst/aluInst/madd_10[21] , 
         \coreInst/fullALUInst/aluInst/madd_13_cry_12 , 
         \coreInst/fullALUInst/aluInst/madd_13[21] , 
         \coreInst/fullALUInst/aluInst/madd_13[22] , 
         \coreInst/fullALUInst/aluInst/madd_10[20] , 
         \coreInst/fullALUInst/aluInst/madd_9[20] , 
         \coreInst/fullALUInst/aluInst/madd_10[19] , 
         \coreInst/fullALUInst/aluInst/madd_9[19] , 
         \coreInst/fullALUInst/aluInst/madd_13_cry_10 , 
         \coreInst/fullALUInst/aluInst/madd_13[19] , 
         \coreInst/fullALUInst/aluInst/madd_13[20] , 
         \coreInst/fullALUInst/aluInst/madd_10[18] , 
         \coreInst/fullALUInst/aluInst/madd_9[18] , 
         \coreInst/fullALUInst/aluInst/madd_10[17] , 
         \coreInst/fullALUInst/aluInst/madd_9[17] , 
         \coreInst/fullALUInst/aluInst/madd_13_cry_8 , 
         \coreInst/fullALUInst/aluInst/madd_13[17] , 
         \coreInst/fullALUInst/aluInst/madd_13[18] , 
         \coreInst/fullALUInst/aluInst/madd_9[16] , 
         \coreInst/fullALUInst/aluInst/madd_10[16] , 
         \coreInst/fullALUInst/aluInst/madd_10[15] , 
         \coreInst/fullALUInst/aluInst/madd_9[15] , 
         \coreInst/fullALUInst/aluInst/madd_13_cry_6 , 
         \coreInst/un21_RESULT_s1_i[15] , 
         \coreInst/fullALUInst/aluInst/madd_13[16] , 
         \coreInst/fullALUInst/aluInst/madd_10[14] , 
         \coreInst/fullALUInst/aluInst/madd_0[14] , 
         \coreInst/fullALUInst/aluInst/madd_11 , 
         \coreInst/fullALUInst/aluInst/madd_2[13] , 
         \coreInst/fullALUInst/aluInst/madd_10[13] , 
         \coreInst/fullALUInst/aluInst/madd_13_cry_4 , 
         \coreInst/fullALUInst/aluInst/madd_4[23] , 
         \coreInst/fullALUInst/aluInst/madd_12_cry_18 , 
         \coreInst/fullALUInst/aluInst/madd_3[22] , 
         \coreInst/fullALUInst/aluInst/madd_3[21] , 
         \coreInst/fullALUInst/aluInst/madd_12_cry_16 , 
         \coreInst/fullALUInst/aluInst/madd_2[20] , 
         \coreInst/fullALUInst/aluInst/madd_8[19] , 
         \coreInst/fullALUInst/aluInst/madd_2[19] , 
         \coreInst/fullALUInst/aluInst/madd_12_cry_14 , 
         \coreInst/fullALUInst/aluInst/madd_1[18] , 
         \coreInst/fullALUInst/aluInst/madd_8[18] , 
         \coreInst/fullALUInst/aluInst/madd_8[17] , 
         \coreInst/fullALUInst/aluInst/madd_2[17] , 
         \coreInst/fullALUInst/aluInst/madd_12_cry_12 , 
         \coreInst/fullALUInst/aluInst/madd_8[16] , 
         \coreInst/fullALUInst/aluInst/madd_1[16] , 
         \coreInst/fullALUInst/aluInst/madd_1[15] , 
         \coreInst/fullALUInst/aluInst/madd_8[15] , 
         \coreInst/fullALUInst/aluInst/madd_12_cry_10 , 
         \coreInst/fullALUInst/aluInst/madd_8[14] , 
         \coreInst/fullALUInst/aluInst/madd_9[14] , 
         \coreInst/fullALUInst/aluInst/madd_9[13] , 
         \coreInst/fullALUInst/aluInst/madd_8[13] , 
         \coreInst/fullALUInst/aluInst/madd_12_cry_8 , 
         \coreInst/fullALUInst/aluInst/madd_8[12] , 
         \coreInst/fullALUInst/aluInst/madd_1[12] , 
         \coreInst/fullALUInst/aluInst/madd_9[11] , 
         \coreInst/fullALUInst/aluInst/madd_8[11] , 
         \coreInst/fullALUInst/aluInst/madd_12_cry_6 , 
         \coreInst/fullALUInst/aluInst/madd_8[10] , 
         \coreInst/fullALUInst/aluInst/madd_9[10] , 
         \coreInst/fullALUInst/aluInst/madd_8[9] , 
         \coreInst/fullALUInst/aluInst/madd_9[9] , 
         \coreInst/fullALUInst/aluInst/madd_12_cry_4 , 
         \coreInst/fullALUInst/aluInst/madd_1[8] , 
         \coreInst/fullALUInst/aluInst/madd_8[8] , 
         \coreInst/fullALUInst/aluInst/madd_9[7] , 
         \coreInst/fullALUInst/aluInst/madd_8[7] , 
         \coreInst/fullALUInst/aluInst/madd_12_cry_2 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT[7] , 
         \coreInst/fullALUInst/aluInst/madd_8[6] , 
         \coreInst/fullALUInst/aluInst/madd_9 , 
         \coreInst/fullALUInst/aluInst/madd_0[6] , 
         \coreInst/fullALUInst/aluInst/madd_8[5] , 
         \coreInst/fullALUInst/aluInst/madd_12_cry_1_0_RNO , 
         \coreInst/fullALUInst/aluInst/madd_12_cry_1_0_RNO_0 , 
         \coreInst/fullALUInst/aluInst/madd_12_cry_0 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT[5] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT[6] , 
         \coreInst/fullALUInst/aluInst/madd_12 , 
         \coreInst/fullALUInst/aluInst/madd_8[4] , 
         \coreInst/fullALUInst/aluInst/madd_11_cry_18_cry , 
         \coreInst/fullALUInst/ALUA_DATA[15] , \coreInst/ALUB_DATA[15] , 
         \coreInst/fullALUInst/ALUA_DATA[14] , 
         \coreInst/fullALUInst/aluInst/madd_11_cry_16 , 
         \coreInst/fullALUInst/ALUA_DATA[13] , 
         \coreInst/fullALUInst/aluInst/madd_6[28] , 
         \coreInst/fullALUInst/ALUA_DATA[12] , 
         \coreInst/fullALUInst/aluInst/madd_7[27] , 
         \coreInst/fullALUInst/aluInst/madd_11_cry_14 , 
         \coreInst/fullALUInst/aluInst/madd_7[26] , 
         \coreInst/fullALUInst/aluInst/madd_6[26] , 
         \coreInst/fullALUInst/aluInst/madd_7[25] , 
         \coreInst/fullALUInst/aluInst/madd_6[25] , 
         \coreInst/fullALUInst/aluInst/madd_11_cry_12 , 
         \coreInst/fullALUInst/aluInst/madd_5[24] , 
         \coreInst/fullALUInst/aluInst/madd_7[24] , 
         \coreInst/fullALUInst/aluInst/madd_6[23] , 
         \coreInst/fullALUInst/aluInst/madd_5[23] , 
         \coreInst/fullALUInst/aluInst/madd_11_cry_10 , 
         \coreInst/fullALUInst/aluInst/madd_4[22] , 
         \coreInst/fullALUInst/aluInst/madd_5[22] , 
         \coreInst/fullALUInst/aluInst/madd_5[21] , 
         \coreInst/fullALUInst/aluInst/madd_4[21] , 
         \coreInst/fullALUInst/aluInst/madd_11_cry_8 , 
         \coreInst/fullALUInst/aluInst/madd_3[20] , 
         \coreInst/fullALUInst/aluInst/madd_4[20] , 
         \coreInst/fullALUInst/aluInst/madd_3[19] , 
         \coreInst/fullALUInst/aluInst/madd_4[19] , 
         \coreInst/fullALUInst/aluInst/madd_11_cry_6 , 
         \coreInst/fullALUInst/aluInst/madd_3[18] , 
         \coreInst/fullALUInst/aluInst/madd_2[18] , 
         \coreInst/fullALUInst/aluInst/madd_0[17] , 
         \coreInst/fullALUInst/aluInst/madd_1[17] , 
         \coreInst/fullALUInst/aluInst/madd_11_cry_4 , 
         \coreInst/fullALUInst/aluInst/madd_0[16] , 
         \coreInst/fullALUInst/aluInst/madd_2[16] , 
         \coreInst/fullALUInst/aluInst/madd_2[15] , 
         \coreInst/fullALUInst/aluInst/madd_0[15] , 
         \coreInst/fullALUInst/aluInst/madd_11_cry_2 , 
         \coreInst/fullALUInst/aluInst/madd_5_cry_15_cry , 
         \coreInst/fullALUInst/ALUA_DATA[11] , \coreInst/ALUB_DATA[14] , 
         \coreInst/fullALUInst/ALUA_DATA[10] , \coreInst/ALUB_DATA[13] , 
         \coreInst/fullALUInst/aluInst/madd_5_cry_13 , 
         \coreInst/ALUB_DATA[12] , \coreInst/ALUB_DATA[11] , 
         \coreInst/fullALUInst/aluInst/madd_5_cry_11 , 
         \coreInst/ALUB_DATA[10] , \coreInst/ALUB_DATA[9] , 
         \coreInst/fullALUInst/aluInst/madd_5_cry_9 , 
         \coreInst/fullALUInst/aluInst/madd_5[20] , \coreInst/ALUB_DATA[8] , 
         \coreInst/ALUB_DATA[7] , \coreInst/fullALUInst/aluInst/madd_5_cry_7 , 
         \coreInst/fullALUInst/aluInst/madd_5[18] , 
         \coreInst/fullALUInst/aluInst/madd_5[19] , \coreInst/ALUB_DATA[6] , 
         \coreInst/ALUB_DATA[5] , \coreInst/ALUB_DATA[4] , 
         \coreInst/fullALUInst/aluInst/madd_5_cry_5 , 
         \coreInst/fullALUInst/aluInst/madd_5[16] , 
         \coreInst/fullALUInst/aluInst/madd_5[17] , \coreInst/ALUB_DATA[3] , 
         \coreInst/fullALUInst/aluInst/madd_5_cry_3 , 
         \coreInst/fullALUInst/aluInst/madd_5[14] , 
         \coreInst/fullALUInst/aluInst/madd_5[15] , 
         \coreInst/fullALUInst/ALUB_DATA[2] , \coreInst/ALUB_DATA[1] , 
         \coreInst/fullALUInst/aluInst/madd_5_cry_1 , 
         \coreInst/fullALUInst/aluInst/madd_5[12] , 
         \coreInst/fullALUInst/aluInst/madd_5[13] , \coreInst/ALUB_DATA[0] , 
         \coreInst/fullALUInst/aluInst/madd_4_cry_15_cry , 
         \coreInst/fullALUInst/ALUA_DATA[9] , 
         \coreInst/fullALUInst/ALUA_DATA[8] , 
         \coreInst/fullALUInst/aluInst/madd_4_cry_13 , 
         \coreInst/fullALUInst/aluInst/madd_4_cry_11 , 
         \coreInst/fullALUInst/aluInst/madd_4_cry_9 , 
         \coreInst/fullALUInst/aluInst/madd_4[18] , 
         \coreInst/fullALUInst/aluInst/madd_4_cry_7 , 
         \coreInst/fullALUInst/aluInst/madd_4[16] , 
         \coreInst/fullALUInst/aluInst/madd_4[17] , 
         \coreInst/fullALUInst/aluInst/madd_4_cry_5 , 
         \coreInst/fullALUInst/aluInst/madd_4[14] , 
         \coreInst/fullALUInst/aluInst/madd_4[15] , 
         \coreInst/fullALUInst/aluInst/madd_4_cry_3 , 
         \coreInst/fullALUInst/aluInst/madd_4[12] , 
         \coreInst/fullALUInst/aluInst/madd_4[13] , 
         \coreInst/fullALUInst/aluInst/madd_4_cry_1 , 
         \coreInst/fullALUInst/aluInst/madd_4[10] , 
         \coreInst/fullALUInst/aluInst/madd_4[11] , 
         \coreInst/fullALUInst/aluInst/madd_9_cry_18_cry , 
         \coreInst/fullALUInst/ALUA_DATA[7] , 
         \coreInst/fullALUInst/ALUA_DATA[6] , 
         \coreInst/fullALUInst/aluInst/madd_9_cry_16 , 
         \coreInst/fullALUInst/ALUA_DATA[5] , 
         \coreInst/fullALUInst/aluInst/madd_6[20] , 
         \coreInst/fullALUInst/ALUA_DATA[4] , 
         \coreInst/fullALUInst/aluInst/madd_7[19] , 
         \coreInst/fullALUInst/aluInst/madd_9_cry_14 , 
         \coreInst/fullALUInst/aluInst/madd_6[18] , 
         \coreInst/fullALUInst/aluInst/madd_7[18] , 
         \coreInst/fullALUInst/aluInst/madd_6[17] , 
         \coreInst/fullALUInst/aluInst/madd_9_cry_12 , 
         \coreInst/fullALUInst/aluInst/madd_7[16] , 
         \coreInst/fullALUInst/aluInst/madd_6[15] , 
         \coreInst/fullALUInst/aluInst/madd_9_cry_10 , 
         \coreInst/fullALUInst/aluInst/madd_3[13] , 
         \coreInst/fullALUInst/aluInst/madd_9_cry_8 , 
         \coreInst/fullALUInst/aluInst/madd_3[12] , 
         \coreInst/fullALUInst/aluInst/madd_2[11] , 
         \coreInst/fullALUInst/aluInst/madd_3[11] , 
         \coreInst/fullALUInst/aluInst/madd_9_cry_6 , 
         \coreInst/fullALUInst/aluInst/madd_2[10] , 
         \coreInst/fullALUInst/aluInst/madd_3[10] , 
         \coreInst/fullALUInst/aluInst/madd_1[9] , 
         \coreInst/fullALUInst/aluInst/madd_0[9] , 
         \coreInst/fullALUInst/aluInst/madd_9_cry_4 , 
         \coreInst/fullALUInst/aluInst/madd_0[8] , 
         \coreInst/fullALUInst/aluInst/madd_2[8] , 
         \coreInst/fullALUInst/aluInst/madd_0[7] , 
         \coreInst/fullALUInst/aluInst/madd_1[7] , 
         \coreInst/fullALUInst/aluInst/madd_9_cry_2 , \coreInst/N_134 , 
         \coreInst/fullALUInst/N_48 , 
         \coreInst/fullALUInst/aluInst/madd_7_cry_15 , 
         \coreInst/fullALUInst/aluInst/madd_7_cry_13 , 
         \coreInst/fullALUInst/aluInst/madd_7_cry_11 , 
         \coreInst/fullALUInst/aluInst/madd_7_cry_9 , 
         \coreInst/fullALUInst/aluInst/madd_7_cry_7 , 
         \coreInst/fullALUInst/aluInst/madd_7[22] , 
         \coreInst/fullALUInst/aluInst/madd_7[23] , 
         \coreInst/fullALUInst/aluInst/madd_7_cry_5 , 
         \coreInst/fullALUInst/aluInst/madd_7[20] , 
         \coreInst/fullALUInst/aluInst/madd_7[21] , 
         \coreInst/fullALUInst/aluInst/madd_7_cry_3 , 
         \coreInst/fullALUInst/aluInst/madd_7_cry_2_0_RNO , 
         \coreInst/fullALUInst/aluInst/madd_7_cry_1 , 
         \coreInst/fullALUInst/aluInst/madd_7[17] , 
         \coreInst/fullALUInst/aluInst/madd_10_cry_18_cry , 
         \coreInst/fullALUInst/aluInst/madd_10_cry_16 , 
         \coreInst/fullALUInst/aluInst/madd_6[24] , 
         \coreInst/fullALUInst/aluInst/madd_10_cry_14 , 
         \coreInst/fullALUInst/aluInst/madd_6[22] , 
         \coreInst/fullALUInst/aluInst/madd_6[21] , 
         \coreInst/fullALUInst/aluInst/madd_10_cry_12 , 
         \coreInst/fullALUInst/aluInst/madd_6[19] , 
         \coreInst/fullALUInst/aluInst/madd_10_cry_10 , 
         \coreInst/fullALUInst/aluInst/madd_3[17] , 
         \coreInst/fullALUInst/aluInst/madd_10_cry_8 , 
         \coreInst/fullALUInst/aluInst/madd_3[16] , 
         \coreInst/fullALUInst/aluInst/madd_3[15] , 
         \coreInst/fullALUInst/aluInst/madd_10_cry_6 , 
         \coreInst/fullALUInst/aluInst/madd_2[14] , 
         \coreInst/fullALUInst/aluInst/madd_3[14] , 
         \coreInst/fullALUInst/aluInst/madd_0[13] , 
         \coreInst/fullALUInst/aluInst/madd_1[13] , 
         \coreInst/fullALUInst/aluInst/madd_10_cry_4 , 
         \coreInst/fullALUInst/aluInst/madd_0[12] , 
         \coreInst/fullALUInst/aluInst/madd_2[12] , 
         \coreInst/fullALUInst/aluInst/madd_0[11] , 
         \coreInst/fullALUInst/aluInst/madd_1[11] , 
         \coreInst/fullALUInst/aluInst/madd_10_cry_2 , 
         \coreInst/fullALUInst/aluInst/madd_6_cry_15_cry , 
         \coreInst/fullALUInst/aluInst/madd_6_cry_13 , 
         \coreInst/fullALUInst/aluInst/madd_6_cry_11 , 
         \coreInst/fullALUInst/aluInst/madd_6_cry_9 , 
         \coreInst/fullALUInst/aluInst/madd_6_cry_7 , 
         \coreInst/fullALUInst/aluInst/madd_6_cry_5 , 
         \coreInst/fullALUInst/aluInst/madd_6_cry_3 , 
         \coreInst/fullALUInst/aluInst/madd_6[16] , 
         \coreInst/fullALUInst/aluInst/madd_6_cry_1 , 
         \coreInst/fullALUInst/aluInst/madd_6[14] , 
         \coreInst/fullALUInst/aluInst/madd_3_cry_15_cry , 
         \coreInst/fullALUInst/aluInst/madd_3_cry_13 , 
         \coreInst/fullALUInst/aluInst/madd_3_cry_11 , 
         \coreInst/fullALUInst/aluInst/madd_3_cry_9 , 
         \coreInst/fullALUInst/aluInst/madd_3_cry_7 , 
         \coreInst/fullALUInst/aluInst/madd_3_cry_5 , 
         \coreInst/fullALUInst/aluInst/madd_3_cry_3 , 
         \coreInst/fullALUInst/aluInst/madd_3_cry_1 , 
         \coreInst/fullALUInst/aluInst/madd_3[8] , 
         \coreInst/fullALUInst/aluInst/madd_3[9] , 
         \coreInst/fullALUInst/aluInst/madd_2_cry_15_cry , 
         \coreInst/fullALUInst/aluInst/madd_2_cry_13 , 
         \coreInst/fullALUInst/aluInst/madd_2_cry_11 , 
         \coreInst/fullALUInst/aluInst/madd_2_cry_9 , 
         \coreInst/fullALUInst/aluInst/madd_2_cry_7 , 
         \coreInst/fullALUInst/aluInst/madd_2_cry_5 , 
         \coreInst/fullALUInst/aluInst/madd_2_cry_3 , 
         \coreInst/fullALUInst/aluInst/madd_2_cry_1 , 
         \coreInst/fullALUInst/aluInst/madd_2[6] , 
         \coreInst/fullALUInst/aluInst/madd_2[7] , 
         \coreInst/fullALUInst/ALUA_DATA[2] , 
         \coreInst/fullALUInst/aluInst/madd_0_cry_14 , 
         \coreInst/fullALUInst/ALUA_DATA[1] , 
         \coreInst/fullALUInst/ALUA_DATA[0] , 
         \coreInst/fullALUInst/aluInst/madd_0_cry_12 , 
         \coreInst/fullALUInst/aluInst/madd_0_cry_10 , 
         \coreInst/fullALUInst/aluInst/madd_0_cry_8 , 
         \coreInst/fullALUInst/aluInst/madd_0_cry_6 , 
         \coreInst/fullALUInst/aluInst/madd_0_cry_4 , 
         \coreInst/fullALUInst/aluInst/madd_0_cry_2 , 
         \coreInst/fullALUInst/aluInst/madd_0[4] , 
         \coreInst/fullALUInst/aluInst/madd_0[5] , 
         \coreInst/fullALUInst/aluInst/madd_0_cry_0 , 
         \coreInst/fullALUInst/aluInst/madd_0[2] , 
         \coreInst/fullALUInst/aluInst/madd_0[3] , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_16_cry , 
         \coreInst/fullALUInst/ALUA_DATA[3] , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_14 , 
         \coreInst/fullALUInst/aluInst/madd_7[15] , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_12 , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_11_0_RNO_0 , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_11_0_RNO , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_10 , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_9_0_RNO_0 , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_9_0_RNO , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_8 , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_7_0_RNO_0 , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_7_0_RNO , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_6 , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_5_0_RNO_0 , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_5_0_RNO , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_4 , 
         \coreInst/fullALUInst/aluInst/madd_1[5] , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_2 , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_1_0_RNO_0 , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_1_0_RNO , 
         \coreInst/fullALUInst/aluInst/madd_8_cry_0 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT[3] , 
         \coreInst/fullALUInst/aluInst/madd_1_cry_15_cry , 
         \coreInst/fullALUInst/aluInst/madd_1_cry_13 , 
         \coreInst/fullALUInst/aluInst/madd_1_cry_11 , 
         \coreInst/fullALUInst/aluInst/madd_1_cry_9 , 
         \coreInst/fullALUInst/aluInst/madd_1_cry_7 , 
         \coreInst/fullALUInst/aluInst/madd_1_cry_5 , 
         \coreInst/fullALUInst/aluInst/madd_1_cry_3 , 
         \coreInst/fullALUInst/aluInst/madd_1_cry_1 , N_459, \coreInst/N_497 , 
         \coreInst/fullALUInst/aluInst/un47_RESULT_cry_14 , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[15] , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[16] , 
         \coreInst/fullALUInst/N_47 , \coreInst/fullALUInst/N_46 , 
         \coreInst/fullALUInst/aluInst/un47_RESULT_cry_12 , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[13] , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[14] , 
         \coreInst/fullALUInst/N_45 , \coreInst/fullALUInst/N_44 , 
         \coreInst/fullALUInst/aluInst/un47_RESULT_cry_10 , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[11] , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[12] , 
         \coreInst/ALUB_DATA_0[8] , \coreInst/ALUB_DATA_0[10] , 
         \coreInst/ALUB_DATA_0[9] , 
         \coreInst/fullALUInst/aluInst/un47_RESULT_cry_8 , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[9] , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[10] , 
         \coreInst/ALUB_DATA_0_0[8] , \coreInst/N_40 , 
         \coreInst/fullALUInst/aluInst/un47_RESULT_cry_6 , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[7] , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[8] , \coreInst/N_39 , 
         \coreInst/N_38 , \coreInst/fullALUInst/aluInst/un47_RESULT_cry_4 , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[5] , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[6] , 
         \coreInst/fullALUInst/aluInst/N_255_i , 
         \coreInst/fullALUInst/aluInst/un47_RESULT_cry_2 , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[3] , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[4] , 
         \coreInst/fullALUInst/aluInst/un47_RESULT_cry_0 , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[1] , 
         \coreInst/fullALUInst/aluInst/un47_RESULT[2] , 
         \coreInst/fullALUInst/aluInst/N_226_i , 
         \coreInst/fullALUInst/aluInst/un1_RESULT_cry_14 , 
         \coreInst/fullALUInst/aluInst/un1_RESULT[15] , 
         \coreInst/fullALUInst/aluInst/un1_RESULT_cry_15_0_S1 , 
         \coreInst/fullALUInst/aluInst/un1_RESULT_cry_12 , 
         \coreInst/fullALUInst/aluInst/un1_RESULT[13] , 
         \coreInst/fullALUInst/aluInst/un1_RESULT[14] , 
         \coreInst/fullALUInst/aluInst/un1_RESULT_cry_10 , 
         \coreInst/fullALUInst/aluInst/un1_RESULT[11] , 
         \coreInst/fullALUInst/aluInst/un1_RESULT[12] , 
         \coreInst/fullALUInst/aluInst/un1_RESULT_cry_8 , 
         \coreInst/fullALUInst/aluInst/un1_RESULT[9] , 
         \coreInst/fullALUInst/aluInst/un1_RESULT[10] , 
         \coreInst/fullALUInst/aluInst/un1_RESULT_cry_6 , 
         \coreInst/fullALUInst/aluInst/un1_RESULT[7] , 
         \coreInst/fullALUInst/aluInst/un1_RESULT[8] , 
         \coreInst/fullALUInst/aluInst/un1_RESULT_cry_4 , 
         \coreInst/fullALUInst/aluInst/un1_RESULT[5] , 
         \coreInst/fullALUInst/aluInst/un1_RESULT[6] , 
         \coreInst/fullALUInst/aluInst/un1_RESULT_cry_2 , 
         \coreInst/fullALUInst/aluInst/un1_RESULT[3] , 
         \coreInst/fullALUInst/aluInst/un1_RESULT[4] , 
         \coreInst/fullALUInst/aluInst/un1_RESULT_cry_0 , 
         \coreInst/fullALUInst/aluInst/un1_RESULT[1] , 
         \coreInst/fullALUInst/aluInst/un1_RESULT[2] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT_cry_14 , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[15] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[16] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT_cry_12 , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[13] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[14] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT_cry_10 , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[11] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[12] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT_cry_8 , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[9] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[10] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT_cry_6 , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[7] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[8] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT_cry_4 , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[5] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[6] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT_cry_2 , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[3] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[4] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT_cry_0 , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[1] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT[2] , 
         \coreInst/fullALUInst/aluInst/madd_cry_15_s0 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s0[31] , 
         \coreInst/fullALUInst/aluInst/madd_cry_13_s0 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s0[29] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s0[30] , 
         \coreInst/fullALUInst/aluInst/madd_cry_11_s0 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s0[27] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s0[28] , 
         \coreInst/fullALUInst/aluInst/madd_cry_9_s0 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s0[25] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s0[26] , 
         \coreInst/fullALUInst/aluInst/madd_cry_7_s0 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s0[23] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s0[24] , 
         \coreInst/fullALUInst/aluInst/madd_cry_5_s0 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s0[21] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s0[22] , 
         \coreInst/fullALUInst/aluInst/madd_cry_3_s0 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s0[19] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s0[20] , 
         \coreInst/fullALUInst/aluInst/madd_cry_1_s0 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s0[17] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s0[18] , 
         \coreInst/fullALUInst/aluInst/madd_cry_14_s1 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[30] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[31] , 
         \coreInst/fullALUInst/aluInst/madd_cry_12_s1 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[28] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[29] , 
         \coreInst/fullALUInst/aluInst/madd_cry_10_s1 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[26] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[27] , 
         \coreInst/fullALUInst/aluInst/madd_cry_8_s1 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[24] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[25] , 
         \coreInst/fullALUInst/aluInst/madd_cry_6_s1 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[22] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[23] , 
         \coreInst/fullALUInst/aluInst/madd_cry_4_s1 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[20] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[21] , 
         \coreInst/fullALUInst/aluInst/madd_cry_2_s1 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[18] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[19] , 
         \coreInst/fullALUInst/aluInst/madd_cry_0_s1 , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[16] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT_s1[17] , 
         \coreInst/DEBUG_ADDR_OUT[15] , \coreInst/debugger/addrH/PL_i , 
         \coreInst/debugger/addrH/Q_PHI0[7] , \coreInst/debugger/addrH/Q_s[7] , 
         \coreInst/debugger/addrH/Qe , PIN_RESETN_c, 
         \coreInst/debugger/addrH/Q_cry[6] , \coreInst/DEBUG_ADDR_OUT[14] , 
         \coreInst/debugger/addrH/Q_PHI0[6] , \coreInst/DEBUG_ADDR_OUT[13] , 
         \coreInst/debugger/addrH/Q_PHI0[5] , \coreInst/debugger/addrH/Q_s[6] , 
         \coreInst/debugger/addrH/Q_s[5] , \coreInst/debugger/addrH/Q_cry[4] , 
         \coreInst/DEBUG_ADDR_OUT[12] , \coreInst/debugger/addrH/Q_PHI0[4] , 
         \coreInst/DEBUG_ADDR_OUT[11] , \coreInst/debugger/addrH/Q_PHI0[3] , 
         \coreInst/debugger/addrH/Q_s[4] , \coreInst/debugger/addrH/Q_s[3] , 
         \coreInst/debugger/addrH/Q_cry[2] , \coreInst/DEBUG_ADDR_OUT[10] , 
         \coreInst/debugger/addrH/Q_PHI0[2] , \coreInst/DEBUG_ADDR_OUT[9] , 
         \coreInst/debugger/addrH/Q_PHI0[1] , \coreInst/debugger/addrH/Q_s[2] , 
         \coreInst/debugger/addrH/Q_s[1] , \coreInst/debugger/addrH/Q_cry[0] , 
         \coreInst/DEBUG_ADDR_OUT[8] , \coreInst/debugger/addrH/Q_PHI0[0] , 
         \coreInst/debugger/addrH/Q_s[0] , \coreInst/DEBUG_ADDR_OUT[7] , 
         \coreInst/debugger/addrL/Q_PHI0[6] , \coreInst/debugger/addrL/PL_i , 
         \coreInst/DEBUG_ADDR_OUT[6] , \coreInst/debugger/addrL/Q_PHI0[5] , 
         \coreInst/debugger/addrL/Q_s[6] , \coreInst/debugger/addrL/Q_s[5] , 
         \coreInst/debugger/addrL/Qe , \coreInst/debugger/addrL/Q_cry[4] , 
         \coreInst/DEBUG_ADDR_OUT[5] , \coreInst/debugger/addrL/Q_PHI0[4] , 
         \coreInst/DEBUG_ADDR_OUT[4] , \coreInst/debugger/addrL/Q_PHI0[3] , 
         \coreInst/debugger/addrL/Q_s[4] , \coreInst/debugger/addrL/Q_s[3] , 
         \coreInst/debugger/addrL/Q_cry[2] , \coreInst/DEBUG_ADDR_OUT[3] , 
         \coreInst/debugger/addrL/Q_PHI0[2] , \coreInst/DEBUG_ADDR_OUT[2] , 
         \coreInst/debugger/addrL/Q_PHI0[1] , \coreInst/debugger/addrL/Q_s[2] , 
         \coreInst/debugger/addrL/Q_s[1] , \coreInst/debugger/addrL/Q_cry[0] , 
         \coreInst/DEBUG_ADDR_OUT[1] , \coreInst/debugger/addrL/Q_PHI0[0] , 
         \coreInst/debugger/addrL/Q_s[0] , \coreInst/un1_HERE_cry_12 , 
         \coreInst/un1_HERE_cry_13_0_S0 , \coreInst/un1_HERE_cry_13_0_S1 , 
         \coreInst/un1_HERE_cry_10 , \coreInst/un1_HERE_cry_11_0_S0 , 
         \coreInst/un1_HERE_cry_11_0_S1 , \coreInst/un1_HERE_cry_8 , 
         \coreInst/un1_HERE_cry_9_0_S0 , \coreInst/un1_HERE_cry_9_0_S1 , 
         \coreInst/un1_HERE_cry_6 , \coreInst/un1_HERE_cry_7_0_S0 , 
         \coreInst/un1_HERE_cry_7_0_S1 , \coreInst/un1_HERE_cry_4 , 
         \coreInst/un1_HERE[6] , \coreInst/un1_HERE[7] , 
         \coreInst/un1_HERE_cry_2 , \coreInst/un1_HERE[4] , 
         \coreInst/un1_HERE[5] , \coreInst/un1_HERE[2] , 
         \coreInst/un1_HERE[3] , 
         \mcuResourcesInst/interruptMaskRegisterInst/INTS[6] , 
         \mcuResourcesInst/interruptMaskRegisterInst/INTS[7] , 
         \mcuResourcesInst/interruptMaskRegisterInst/N_2 , 
         \mcuResourcesInst/interruptMaskRegisterInst/INTS[5] , 
         \mcuResourcesInst/interruptMaskRegisterInst/un24_PRI_i , INT1, 
         \coreInst/EXECUTE , \coreInst/COMMIT , \coreInst/BUS_SEQX[0] , 
         \coreInst/DECODE , \coreInst/BUS_SEQX[1] , 
         \coreInst/busControllerInst/sequencer/un1_DECODE_i , PIN_RDN_c, 
         \coreInst/generalGroupDecoderInst/EIX6 , 
         \coreInst/busControllerInst/sequencer/N_963 , 
         \coreInst/busControllerInst/N_439 , \coreInst/N_964 , 
         \coreInst/busControllerInst/sequencer/WRN1_BUF_3 , 
         \coreInst/busControllerInst/sequencer/WRN0_BUF_3 , PIN_WRN0, PIN_WRN1, 
         \coreInst.busControllerInst.DOUT_BUF_i_0[10] , \coreInst.ALU_R[10] , 
         \mcuResourcesInst.memoryMapperInst.INT_MAP , 
         \mcuResourcesInst/memoryMapperInst/N_55 , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li , 
         \mcuResourcesInst/memoryMapperInst/N_37 , 
         \mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 , 
         \coreInst/ALU_ALU_OPX[0] , N_338, 
         \mcuResourcesInst/memoryMapperInst/N_94 , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12] , N_340, 
         \coreInst/ALU_ALU_OPX[2] , \coreInst/ALU_ALU_OPX[3] , PIN_INT0_c, 
         \coreInst/CCL_ENRX , \coreInst/interruptStateMachineInst/EI , 
         \coreInst/interruptStateMachineInst/STATE[8] , 
         \coreInst/INT_PC_NEXTX[2] , 
         \coreInst/interruptStateMachineInst/N_888 , 
         \coreInst/interruptStateMachineInst/N_21 , 
         \coreInst/fullALUInst/aluInst/N_269 , 
         \coreInst/fullALUInst/aluInst/N_286 , \coreInst/RESULT_sn_N_9 , 
         \coreInst/fullALUInst/aluInst/OVFL , 
         \coreInst/fullALUInst/aluInst/arithmetic , 
         \coreInst/fullALUInst/aluInst/PARITY_2_12 , 
         \coreInst/fullALUInst/aluInst/PARITY_2_13 , 
         \coreInst/fullALUInst/CC_P , 
         \coreInst/fullALUInst/aluInst/PARITY_sn_N_2 , 
         \coreInst/fullALUInst/ccRegs/CC_RUN_REG_0_sqmuxa , 
         \coreInst/CC_RUN_REG[0] , 
         \coreInst/fullALUInst/aluInst/CARRY_sn_i2_mux , 
         \coreInst/fullALUInst/aluInst/CARRY_m0 , \coreInst/ALU_OPX[1] , 
         \coreInst/fullALUInst/aluInst/ZERO_8 , 
         \coreInst/fullALUInst/aluInst/ZERO_12 , \coreInst/ALU_R[14] , 
         \coreInst/ALU_R[15] , \coreInst/fullALUInst/CC_C , 
         \coreInst/fullALUInst/CC_Z , \coreInst/CC_RUN_REG[1] , 
         \coreInst/CC_RUN_REG[2] , 
         \coreInst/busControllerInst/DOUT_BUF_i_0[15] , 
         \coreInst/fullALUInst/aluInst/N_301 , 
         \coreInst/fullALUInst/aluInst/N_284 , \coreInst/CC_RUN_REG[3] , N_183, 
         \coreInst/instructionPhaseDecoderInst/PHASE_R[8] , 
         \coreInst/instructionPhaseDecoderInst/PHASE_R[3] , 
         \coreInst/instructionPhaseDecoderInst/N_81_i , COMMIT_2_i_a4, 
         \coreInst/DEBUG_ACK , \coreInst/DEBUG_INC_REQ , 
         \coreInst/instructionPhaseDecoderInst/PHASE_R[6] , 
         \coreInst/DEBUG_MODE_REQ , 
         \coreInst/instructionPhaseDecoderInst/PHASE_R_ns[10] , 
         \coreInst/debugger/requestGen/Q_R10 , \coreInst/DEBUG_OPX[1] , 
         \coreInst/DEBUG_OPX[2] , \coreInst/DEBUG_OPX[0] , \coreInst/N_544 , 
         \coreInst/DEBUG_OPX[3] , \coreInst/debugSequencerInst/N_256_i , 
         \coreInst/DEBUG_ADDR_INC_EN , \coreInst/debugSequencerInst/N_254_i , 
         \coreInst/DEBUG_LD_DATA_EN , \coreInst/debugger/N_449 , 
         \coreInst/instructionPhaseDecoderInst/PHASE_R_ns[2] , 
         \coreInst/instructionPhaseDecoderInst/PHASE_R[5] , 
         \coreInst/instructionPhaseDecoderInst/DECODE_2 , 
         \mcuResourcesInst.N_82 , \mcuResourcesInst.N_64 , 
         \mcuResourcesInst.interruptMaskRegisterInst.DOUT_i1_mux_i_0 , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_d[0] , \CPU_DIN[1] , 
         \CPU_DIN[0] , \coreInst/dinLatch/DOUT6 , \coreInst/DIN_LATCHED[0] , 
         \coreInst/DIN_LATCHED[1] , \mcuResourcesInst/RD_INT_0_sqmuxa , N_332, 
         \mcuResourcesInst.interruptMaskRegisterInst.PRI_REG[2] , 
         \mcuResourcesInst/memoryMapperInst/N_83 , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_2_d[2] , \CPU_DIN[2] , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_s[2] , 
         \coreInst/DIN_LATCHED[2] , 
         \mcuResourcesInst/memoryMapperInst/CPU_N_6 , \mcuResourcesInst/N_13 , 
         \mcuResourcesInst.memoryMapperInst.CPU_m7_e_1 , 
         \mcuResourcesInst/memoryMapperInst/N_48 , 
         \mcuResourcesInst/memoryMapperInst/N_30 , \coreInst/DIN_LATCHED[3] , 
         \mcuResourcesInst.memoryMapperInst.INT_MAP_11 , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_bm_RNO[4] , 
         \mcuResourcesInst/memoryMapperInst/CPU_m1_e_1 , 
         \mcuResourcesInst/memoryMapperInst/N_31 , 
         \mcuResourcesInst/memoryMapperInst/N_49 , \coreInst/DIN_LATCHED[4] , 
         \mcuResourcesInst/N_15 , \mcuResourcesInst/memoryMapperInst/N_50 , 
         \mcuResourcesInst/memoryMapperInst/N_32 , \coreInst/DIN_LATCHED[5] , 
         \mcuResourcesInst/N_16 , \mcuResourcesInst/memoryMapperInst/N_51 , 
         \mcuResourcesInst/memoryMapperInst/N_33 , \coreInst/DIN_LATCHED[6] , 
         \mcuResourcesInst/INTS_REG[7] , \mcuResourcesInst/MASK_REG[7] , 
         \coreInst.REGA_DOUT[7] , N_447, \coreInst.ALU_R[7] , 
         \mcuResourcesInst/memoryMapperInst/CPU_N_9_mux_0 , 
         \mcuResourcesInst/memoryMapperInst/N_70 , 
         \mcuResourcesInst/memoryMapperInst/N_88 , \coreInst/DIN_LATCHED[7] , 
         \coreInst/REGA_DOUT[8] , \coreInst/registerFileInst/regs/m68_i_o4_0 , 
         \PIN_DIN_GPIO_c[8] , \DOUT_RNIL8MT[8] , 
         \mcuResourcesInst.memoryMapperInst.GPIO_MAP , 
         \coreInst/DIN_LATCHED[8] , 
         \coreInst/busControllerInst/DOUT_BUF_i_0[9] , \coreInst/ALU_R[9] , 
         N_189, \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9] , 
         \coreInst/DIN_LATCHED[9] , \coreInst/DIN_LATCHED[10] , 
         \coreInst/ALU_R[11] , \coreInst/busControllerInst/DOUT_BUF_i_0[11] , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11] , N_342, 
         \coreInst/DIN_LATCHED[11] , \coreInst/DIN_LATCHED[12] , 
         \mcuResourcesInst/memoryMapperInst/N_96 , 
         \mcuResourcesInst/memoryMapperInst/N_95 , N_185, 
         \coreInst/DIN_LATCHED[14] , \coreInst/DIN_LATCHED[15] , 
         \coreInst/INSTRUCTION[9] , \coreInst/INSTRUCTION[8] , 
         \coreInst/N_476 , \coreInst/GROUPX[1] , \coreInst/GROUPX[0] , 
         \coreInst/generalGroupDecoderInst/DI , \coreInst/DIX , 
         \coreInst/N_987 , \coreInst/generalGroupDecoderInst/EI , 
         \coreInst/EIX , \coreInst/instructionPhaseDecoderInst/PHASE_R[7] , 
         \coreInst/instructionPhaseDecoderInst/PHASE_R[2] , 
         \coreInst/instructionPhaseDecoderInst/N_108_i , EXECUTE_2_0_i_a2, 
         \coreInst/instructionPhaseDecoderInst/PHASE_R_ns[1] , 
         \coreInst/instructionPhaseDecoderInst/PHASE_R[9] , 
         \coreInst/instructionPhaseDecoderInst/FETCH_2 , \coreInst/FETCH , 
         \coreInst.instructionPhaseDecoderInst.FETCH_2_i , 
         \coreInst/DEBUG_MODE , \coreInst/generalGroupDecoderInst/HALT , 
         \coreInst/HALTX , \coreInst/opxMultiplexerInst/N_543 , 
         \coreInst/interruptStateMachineInst/STATE[5] , \coreInst/RETIX , 
         \coreInst/interruptStateMachineInst/STATE[6] , 
         \coreInst/interruptStateMachineInst/STATE_ns[1] , 
         \coreInst/interruptStateMachineInst/PC_LD_INT0_NEXT , 
         \coreInst/interruptStateMachineInst/PC_NEXTX_NEXT[1] , 
         \coreInst/interruptStateMachineInst/PC_NEXTX_NEXT[0] , 
         \coreInst/INT_PC_NEXTX[0] , \coreInst/INT_PC_NEXTX[1] , 
         \coreInst/fullALUInst/ccRegs/CC_RUN_REG8 , \coreInst/STATE[4] , 
         \coreInst/PC_LD_INT1X , 
         \coreInst/interruptStateMachineInst/STATE_ns[7] , 
         \coreInst/fullALUInst/ccRegs/CC_INT1_REG_0_sqmuxa , \coreInst/PC_m3 , 
         \coreInst/ADDR_N_8 , \coreInst/N_429_i , 
         \coreInst/jumpGroupDecoderInst/N_132_i , \coreInst/JMP_BUS_SEQX[1] , 
         \coreInst/instructionPhaseDecoderInst/PHASE_R[4] , 
         \coreInst/programCounterInst/N_451 , 
         \coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[1] , 
         \coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[0] , 
         \coreInst/programCounterInst/N_402 , 
         \coreInst/programCounterInst/N_400 , 
         \coreInst/programCounterInst/HERE11 , \coreInst/PC_A[0] , 
         \coreInst/programCounterInst/N_700 , 
         \coreInst/programCounterInst/N_701 , 
         \coreInst/programCounterInst/N_973 , 
         \coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_3L3 , 
         \coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_4 , 
         \coreInst/programCounterInst/N_703 , 
         \coreInst/programCounterInst/N_277 , 
         \coreInst/programCounterInst/N_279 , 
         \coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[5] , 
         \coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[4] , 
         \coreInst/programCounterInst/N_406 , 
         \coreInst/programCounterInst/N_404 , 
         \coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[7] , 
         \coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[6] , 
         \coreInst/programCounterInst/N_410 , 
         \coreInst/programCounterInst/N_408 , 
         \coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_3 , 
         \coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[8] , 
         \coreInst/programCounterInst/N_414 , 
         \coreInst/programCounterInst/N_412 , 
         \coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_2 , 
         \coreInst/programCounterInst/PC_A_NEXT_6_0_0_N_2L1_0 , 
         \coreInst/programCounterInst/N_416 , 
         \coreInst/programCounterInst/PC_A_NEXT[10] , 
         \coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_0 , 
         \coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_1 , 
         \coreInst/programCounterInst/N_420 , 
         \coreInst/programCounterInst/N_418 , 
         \coreInst/programCounterInst/PC_A_NEXT_6_0_0_N_3L3 , 
         \coreInst/programCounterInst/PC_A_NEXT_6_0_0_RNO[15] , 
         \coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1 , 
         \coreInst/programCounterInst/PC_A_NEXT[15] , 
         \coreInst/programCounterInst/N_422 , 
         \coreInst/instructionPhaseDecoderInst/N_516 , 
         \coreInst/instructionPhaseDecoderInst/PC_STOP_0_a2_0_a2_2 , 
         \coreInst/DEBUG_STOP , 
         \coreInst/instructionPhaseDecoderInst/PC_STOP_i , \coreInst/PC_ENX , 
         \coreInst/interruptStateMachineInst/STATE[3] , 
         \coreInst/interruptStateMachineInst/STATE[2] , 
         \coreInst/interruptStateMachineInst/PC_NEXTX_NEXT_0_0_a2_3[0] , 
         \coreInst/interruptStateMachineInst/STATE[9] , \coreInst/PC_LD_INT0X , 
         \coreInst/DEBUG_MODE_rep1 , \coreInst/N_1011 , 
         \coreInst/busControllerInst/sequencer/ADDR_m10_i_m4_N_2L1 , 
         \coreInst/INSTRUCTION[7] , \coreInst/registerSequencerInst/N_827 , 
         \coreInst/N_437 , \coreInst/registerSequencerInst/REGA_EN_3_i_0_0 , 
         \coreInst/registerSequencerInst/N_356_i , \coreInst/REGA_EN , 
         \coreInst/registerSequencerInst/N_537 , 
         \coreInst/registerSequencerInst/N_830 , 
         \coreInst/registerSequencerInst/N_828 , 
         \coreInst/registerSequencerInst/REGA_WEN_3_i_3 , 
         \coreInst/registerSequencerInst/N_829 , 
         \coreInst/registerSequencerInst/N_354_i , \coreInst/REGA_WEN , 
         \coreInst/N_460 , \coreInst/registerSequencerInst/N_1019 , 
         \coreInst/registerSequencerInst/N_352_i , \coreInst/REGB_EN , 
         \coreInst/GROUPX_fast[1] , \coreInst/GROUPX_0_rep1 , \coreInst/N_455 , 
         \coreInst/registerSequencerInst/N_350_i , \coreInst/REGB_WEN , 
         \coreInst/N_454 , \coreInst/generalGroupDecoderInst/RETI , 
         \coreInst/interruptStateMachineInst/N_886 , 
         \coreInst/interruptStateMachineInst/STATE_ns[4] , 
         \coreInst/busControllerInst/sequencer/ADDR_BUSX_R_3_0_iv_i_2[1] , 
         \coreInst/N_1014 , \coreInst/busControllerInst/sequencer/N_595 , 
         \coreInst/N_168_1 , \coreInst/busControllerInst/sequencer/N_599 , 
         \coreInst/N_598 , \coreInst/busControllerInst/sequencer/N_166_i , 
         \coreInst/busControllerInst/sequencer/N_168_i , 
         \coreInst/busControllerInst/sequencer/N_1010_i , 
         \coreInst/busControllerInst/ADDR_BUSX_R[0] , 
         \coreInst/busControllerInst/ADDR_BUSX_R[1] , 
         \coreInst/busControllerInst/sequencer/N_129_i , 
         \coreInst/busControllerInst/ADDR_BUSX_R[2] , 
         \coreInst/debugger/addrL/RO_R6_0_a2_4 , 
         \coreInst/debugger/addrL/RO_R , \coreInst/debugger/addrL/PL_PHI0 , 
         \coreInst/debugger/AL_RO , \coreInst/debugger/addrL/PL , 
         \coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[9] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[9] , 
         \coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[8] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[8] , 
         \coreInst/debugger/dataR/N_304_i , \coreInst/debugger/dataR/N_146_i , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_H[0] , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_H[1] , 
         \coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[11] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[11] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[10] , 
         \coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[10] , 
         \coreInst/debugger/dataR/N_300_i , \coreInst/debugger/dataR/N_302_i , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_H[2] , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_H[3] , 
         \coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[13] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[13] , 
         \coreInst/DIN_LATCHED[13] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[12] , 
         \coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[12] , 
         \coreInst/debugger/dataR/N_296_i , \coreInst/debugger/dataR/N_298_i , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_H[4] , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_H[5] , 
         \coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[15] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[15] , 
         \coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[14] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[14] , 
         \coreInst/debugger/dataR/N_292_i , \coreInst/debugger/dataR/N_294_i , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_H[6] , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_H[7] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[1] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[1] , \coreInst/CC_ZERO , 
         \coreInst/debugger/N_488 , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[0] , \coreInst/CC_PARITY , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[0] , 
         \coreInst/debugger/dataR/N_152_i , \coreInst/debugger/dataR/N_154_i , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_L[0] , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_L[1] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[3] , \coreInst/CC_SIGN , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[3] , \coreInst/CC_CARRY , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[2] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[2] , 
         \coreInst/debugger/dataR/N_312_i , \coreInst/debugger/dataR/N_150_i , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_L[2] , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_L[3] , 
         \coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[5] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[5] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[4] , 
         \coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[4] , 
         \coreInst/debugger/dataR/N_148_i , \coreInst/debugger/dataR/N_310_i , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_L[4] , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_L[5] , 
         \coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[7] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[7] , 
         \coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[6] , 
         \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[6] , 
         \coreInst/debugger/dataR/N_306_i , \coreInst/debugger/dataR/N_308_i , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_L[6] , 
         \coreInst/debugger/DEBUG_READ_MUX_IN_L[7] , \PIN_DEBUG_ADDR_c[1] , 
         \PIN_DEBUG_ADDR_c[2] , \PIN_DEBUG_ADDR_c[0] , 
         \coreInst.debugger.EN_AH , PIN_DEBUG_WRN_c, 
         \coreInst/debugger/addrH/PL_R , \coreInst/debugger/EN_MODE , 
         \coreInst/debugger/EN_AL , \coreInst/debugger/addrL/PL_R , 
         \coreInst/debugger/EN_OP , 
         \coreInst/instructionPhaseDecoderInst/PHASE_R[0] , 
         \coreInst/instructionPhaseDecoderInst/N_117 , 
         \coreInst/instructionPhaseDecoderInst/PHASE_R_ns[0] , 
         \coreInst/instructionPhaseDecoderInst/PHASE_R[1] , 
         \coreInst.instructionPhaseDecoderInst.DECODE_2_i , 
         \coreInst/instructionPhaseDecoderInst/N_485 , \coreInst/DEBUG_REQ , 
         \coreInst/instructionPhaseDecoderInst/PHASE_R_ns[5] , 
         \coreInst/instructionPhaseDecoderInst/PHASE_R_ns[7] , 
         \coreInst/interruptStateMachineInst/EI_2 , 
         \coreInst/interruptStateMachineInst/N_56_i , 
         \coreInst/interruptStateMachineInst/N_54_i , 
         \coreInst/interruptStateMachineInst/STATE_ns[6] , 
         \coreInst/interruptStateMachineInst/STATE_ns[5] , 
         \coreInst/interruptStateMachineInst/STATE_ns[9] , 
         \coreInst/interruptStateMachineInst/STATE_ns[8] , 
         \coreInst/programCounterInst/N_977 , 
         \coreInst/programCounterInst/N_446 , 
         \coreInst/programCounterInst/INTR05 , 
         \coreInst/programCounterInst/INTR0[0] , 
         \coreInst/programCounterInst/INTR0[1] , 
         \mcuResourcesInst/UARTInst/N_125 , 
         \mcuResourcesInst.memoryMapperInst.UART_MAP , 
         \mcuResourcesInst/UARTInst/N_141 , 
         \mcuResourcesInst/UARTInst/N_131_i , 
         \mcuResourcesInst/UARTInst/N_132_i , \mcuResourcesInst.DIN_UART[0] , 
         \mcuResourcesInst.DIN_UART[1] , \mcuResourcesInst/UARTInst/N_140 , 
         \mcuResourcesInst/UARTInst/N_130_i , \mcuResourcesInst.DIN_UART[2] , 
         \mcuResourcesInst/RD_UART , 
         \mcuResourcesInst/interruptMaskRegisterInst/INTS[4] , 
         \mcuResourcesInst/interruptMaskRegisterInst/INTS[1] , 
         \mcuResourcesInst/interruptMaskRegisterInst/INTS[2] , 
         \mcuResourcesInst/interruptMaskRegisterInst/INTS[3] , PIN_INT2_c, 
         \mcuResourcesInst.interruptMaskRegisterInst.MASK_REG[2] , 
         \mcuResourcesInst.interruptMaskRegisterInst.INTS_REG[2] , RESET, 
         N_316, N_318, N_314, \coreInst/ALU_R[2] , \coreInst/REGA_DOUT[2] , 
         \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_0_sqmuxa , 
         \mcuResourcesInst/EN_RAM , 
         \mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[2] , 
         \mcuResourcesInst/UART_MAP_0_a2_RNIFEBT , 
         \mcuResourcesInst/UARTInst/DATA_AVAILABLE , 
         \mcuResourcesInst/UARTInst/N_179 , 
         \mcuResourcesInst/UARTInst/N_181_i , 
         \mcuResourcesInst/UARTInst/DATA_AVAILABLE_R_1_sqmuxa_i_0 , 
         \mcuResourcesInst/DATA_AVAILABLE_R , 
         \mcuResourcesInst/UARTInst/RX_BYTE[3] , 
         \mcuResourcesInst/UARTInst/DOUT_7[3] , N_330, 
         \mcuResourcesInst/UARTInst/DOUT_20 , \mcuResourcesInst/DIN_UART[3] , 
         \mcuResourcesInst/UARTInst/RX_BYTE[5] , 
         \mcuResourcesInst/UARTInst/DOUT_7_m_0_a2_0[5] , 
         \mcuResourcesInst/UARTInst/N_139 , 
         \mcuResourcesInst/UARTInst/DOUT_7[5] , 
         \mcuResourcesInst/UARTInst/N_129_i , \mcuResourcesInst/DIN_UART[4] , 
         \mcuResourcesInst/DIN_UART[5] , \mcuResourcesInst/UARTInst/N_23 , 
         \mcuResourcesInst/UARTInst/DOUT_7[6] , \mcuResourcesInst/DIN_UART[6] , 
         \mcuResourcesInst.UARTInst.RX_BYTE[7] , 
         \mcuResourcesInst/UARTInst/DOUT_7_m_0_a2_0[7] , 
         \mcuResourcesInst/UARTInst/DOUT_7[7] , \mcuResourcesInst/DIN_UART[7] , 
         \mcuResourcesInst/UARTInst/N_27 , \mcuResourcesInst/UARTInst/N_26 , 
         \mcuResourcesInst/UARTInst/DOUT_23 , \mcuResourcesInst/DIN_UART[9] , 
         \mcuResourcesInst/DIN_UART[10] , \mcuResourcesInst/UARTInst/N_29 , 
         \mcuResourcesInst/UARTInst/N_28 , \mcuResourcesInst/DIN_UART[11] , 
         \mcuResourcesInst/DIN_UART[12] , \mcuResourcesInst/UARTInst/N_31 , 
         \mcuResourcesInst/UARTInst/N_30 , \mcuResourcesInst/DIN_UART[13] , 
         \mcuResourcesInst/DIN_UART[14] , 
         \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[6] , 
         \mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[6] , 
         \mcuResourcesInst/UARTInst/N_32 , \mcuResourcesInst/DIN_UART[15] , 
         \mcuResourcesInst/TXI_R , \mcuResourcesInst/MASK_REG[4] , PIN_INT4_c, 
         \mcuResourcesInst/INTS_REG[4] , \coreInst/REGA_DOUT[4] , 
         \coreInst/ALU_R[4] , 
         \mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[1] , 
         \mcuResourcesInst/PRI_REG[1] , 
         \coreInst/busControllerInst/ADDR_BUF_i_1[5] , \coreInst/ALU_R[5] , 
         \coreInst/N_976 , \coreInst/busControllerInst/N_591 , 
         \coreInst/busControllerInst/ADDR_m4_e_0_2 , 
         \coreInst/RESULT_13_RNI4AK82[10] , 
         \coreInst/busControllerInst/ADDR_BUF_i_2[10] , N_156_i, 
         \mcuResourcesInst/RAMInst/addr10_ff , N_164_i, 
         \coreInst/busControllerInst/ADDR_m4_0_a2_2 , 
         \coreInst/busControllerInst/ADDR_BUF_i_2[9] , 
         \coreInst/RESULT_13_RNIR8583[9] , \coreInst/RESULT_13_RNIVG213[11] , 
         \coreInst/busControllerInst/ADDR_BUF_i_2[11] , N_322_i, 
         \mcuResourcesInst/RAMInst/addr11_ff , N_324_i, 
         \mcuResourcesInst/WRITE , 
         \mcuResourcesInst/UARTInst/TXI_R_0_sqmuxa_i , 
         \mcuResourcesInst/UARTInst/TXI_R_1_sqmuxa_i , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[0] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[2] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[1] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_RX_DV9_i_0 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_1_sqmuxa_2 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV_r , 
         \mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[3] , 
         \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[3] , 
         \mcuResourcesInst/UARTInst/N_25 , 
         \mcuResourcesInst/UARTInst/DIN_UART[8] , \coreInst/REGA_DOUT[1] , 
         \coreInst/ALU_R[1] , \coreInst/ALU_R[0] , \coreInst/REGA_DOUT[0] , 
         \DOUT[0] , \mcuResourcesInst/UARTInst/RX_CLK_DIV_1_sqmuxa , 
         \coreInst/REGA_DOUT[3] , \coreInst/ALU_R[3] , \coreInst/REGA_DOUT[6] , 
         \coreInst/ALU_R[6] , \coreInst/REGA_DOUT[5] , 
         \coreInst/busControllerInst/DOUT_BUF_i_0[8] , N_342_i, N_187_i, 
         \coreInst/ALU_R[13] , \coreInst/busControllerInst/DOUT_BUF_i_0[13] , 
         \coreInst/busControllerInst/DOUT_BUF_i_0[12] , \coreInst/ALU_R[12] , 
         N_340_i, \coreInst/busControllerInst/DOUT_BUF_i_0[14] , N_183_i, 
         N_185_i, \coreInst/PC_OFFSETX[1] , 
         \mcuResourcesInst/UARTInst/START_TX_1_sqmuxa , 
         \mcuResourcesInst/UARTInst/START_TX_1_sqmuxa_1_i , 
         \mcuResourcesInst/UARTInst/START_TX , 
         \coreInst/programCounterInst/ARGA_0_iv_i_a2_0[1] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[1] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_i[1] , 
         \mcuResourcesInst/UARTInst/uartTxInst/N_43_i , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_ns_0_a2_0_0[0] , GND, 
         \mcuResourcesInst/UARTInst/START_TX_1_sqmuxa_i , 
         \mcuResourcesInst/UARTInst/TX_COMPLETE_R_1_sqmuxa_i , 
         \mcuResourcesInst/UARTInst/TX_COMPLETE_R , WR_GPIO_i, 
         \mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[0] , 
         \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Active_1_sqmuxa , 
         \mcuResourcesInst/UARTInst/TX_DONE , 
         \mcuResourcesInst/UARTInst/uartRXInst/N_105 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[0] , 
         \mcuResourcesInst/UARTInst/uartRXInst/N_136 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[1] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index_5[1] , 
         \mcuResourcesInst/UARTInst/uartRXInst/N_135_i , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[2] , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_RX_Byte_1[3] , 
         \mcuResourcesInst/UARTInst/uartRXInst/CO0 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index_5[2] , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[1] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[0] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[3] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[2] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[5] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[4] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[7] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[6] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[9] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[8] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[11] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[10] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[13] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[12] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[15] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[14] , 
         \mcuResourcesInst/UARTInst/uartRXInst/N_155 , 
         \mcuResourcesInst/UARTInst/uartRXInst/N_164 , 
         \mcuResourcesInst/UARTInst/uartRXInst/N_165 , 
         \mcuResourcesInst.N_167 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_8[1] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_8[0] , 
         \mcuResourcesInst/UARTInst/uartTxInst/CO0 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[1] , 
         \mcuResourcesInst/UARTInst/uartTxInst/N_29_3 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[0] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index_RNO[1] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index_RNO[0] , 
         \mcuResourcesInst/UARTInst/uartTxInst/un1_r_TX_Data_0_sqmuxa_1 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[2] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index_RNO[2] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_ns_0_a2_1_1[0] , 
         \mcuResourcesInst/UARTInst/uartTxInst/N_26_i_i , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_ns[0] , 
         \coreInst/debugger/EN_DH , \coreInst/debugger/N_475 , 
         \coreInst/REGB_DOUT[1] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data_0_sqmuxa_1 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[0] , \DEBUG_DOUT[3] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[1] , PIN_DEBUG_RDN_c, 
         \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[2] , 
         \coreInst/debugger/requestGen/dhReqReg/un1_DEBUG_WRN_uclk , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[3] , 
         \coreInst/debugger/addrH/PL , 
         \coreInst/fullALUInst/aluInst/un21_RESULT[4] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[4] , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[5] , 
         \coreInst/fullALUInst/aluInst/OVER_i_1_a2_8 , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[6] , 
         \coreInst/fullALUInst/aluInst/PARITY_2_3_RNO , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[7] , PIN_INT3_c, 
         \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[1] , PIN_INT1_c, 
         \mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[1] , PIN_INT6_c, 
         PIN_INT5_c, \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[5] , 
         \mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[5] , 
         \coreInst/fullALUInst/aluInst/N_11_0 , 
         \coreInst/fullALUInst/aluInst/N_13_0 , \coreInst/N_1001 , 
         \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[0] , 
         \coreInst/fullALUInst/aluInst/N_27_0 , \PIN_DIN_GPIO_c[6] , 
         \mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[0] , 
         \mcuResourcesInst/interruptMaskRegisterInst/PRI_REG[0] , 
         \mcuResourcesInst/UARTInst/uartTxInst/N_124 , 
         \mcuResourcesInst/UARTInst/uartTxInst/N_121 , 
         \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2 , 
         \mcuResourcesInst/UARTInst/RX_BYTE[4] , 
         \mcuResourcesInst/UARTInst/RX_BYTE[2] , 
         \mcuResourcesInst/UARTInst/RX_BYTE[1] , 
         \mcuResourcesInst/UARTInst/RX_BYTE[0] , 
         \mcuResourcesInst/RAMInst/mdout0_2_16 , 
         \mcuResourcesInst/RAMInst/mdout0_3_16 , 
         \mcuResourcesInst/RAMInst/mdout0_0_16 , 
         \mcuResourcesInst/RAMInst/mdout0_1_16 , 
         \mcuResourcesInst/DIN_RAM[15] , \mcuResourcesInst/RAMInst/mdout0_3_0 , 
         \mcuResourcesInst/RAMInst/mdout0_2_0 , 
         \mcuResourcesInst/RAMInst/mdout0_1_0 , 
         \mcuResourcesInst/RAMInst/mdout0_0_0 , \mcuResourcesInst/DIN_RAM[0] , 
         \mcuResourcesInst/RAMInst/mdout0_3_1 , 
         \mcuResourcesInst/RAMInst/mdout0_2_1 , 
         \mcuResourcesInst/RAMInst/mdout0_0_1 , 
         \mcuResourcesInst/RAMInst/mdout0_1_1 , \mcuResourcesInst.DIN_RAM[1] , 
         \mcuResourcesInst/RAMInst/mdout0_2_2 , 
         \mcuResourcesInst/RAMInst/mdout0_3_2 , 
         \mcuResourcesInst/RAMInst/mdout0_1_2 , 
         \mcuResourcesInst/RAMInst/mdout0_0_2 , \mcuResourcesInst/DIN_RAM[2] , 
         \mcuResourcesInst/RAMInst/mdout0_3_3 , 
         \mcuResourcesInst/RAMInst/mdout0_2_3 , 
         \mcuResourcesInst/RAMInst/mdout0_1_3 , 
         \mcuResourcesInst/RAMInst/mdout0_0_3 , \mcuResourcesInst/DIN_RAM[3] , 
         \mcuResourcesInst/RAMInst/mdout0_2_4 , 
         \mcuResourcesInst/RAMInst/mdout0_3_4 , 
         \mcuResourcesInst/RAMInst/mdout0_0_4 , 
         \mcuResourcesInst/RAMInst/mdout0_1_4 , \mcuResourcesInst/DIN_RAM[4] , 
         \mcuResourcesInst/RAMInst/mdout0_3_5 , 
         \mcuResourcesInst/RAMInst/mdout0_2_5 , 
         \mcuResourcesInst/RAMInst/mdout0_0_5 , 
         \mcuResourcesInst/RAMInst/mdout0_1_5 , \mcuResourcesInst/DIN_RAM[5] , 
         \mcuResourcesInst/RAMInst/mdout0_3_6 , 
         \mcuResourcesInst/RAMInst/mdout0_2_6 , 
         \mcuResourcesInst/RAMInst/mdout0_0_6 , 
         \mcuResourcesInst/RAMInst/mdout0_1_6 , \mcuResourcesInst/DIN_RAM[6] , 
         \mcuResourcesInst/RAMInst/mdout0_2_7 , 
         \mcuResourcesInst/RAMInst/mdout0_3_7 , 
         \mcuResourcesInst/RAMInst/mdout0_1_7 , 
         \mcuResourcesInst/RAMInst/mdout0_0_7 , \mcuResourcesInst/DIN_RAM[7] , 
         \mcuResourcesInst/RAMInst/mdout0_3_9 , 
         \mcuResourcesInst/RAMInst/mdout0_2_9 , 
         \mcuResourcesInst/RAMInst/mdout0_0_9 , 
         \mcuResourcesInst/RAMInst/mdout0_1_9 , 
         \mcuResourcesInst/RAMInst/DIN_RAM[8] , 
         \mcuResourcesInst/RAMInst/mdout0_2_10 , 
         \mcuResourcesInst/RAMInst/mdout0_3_10 , 
         \mcuResourcesInst/RAMInst/mdout0_1_10 , 
         \mcuResourcesInst/RAMInst/mdout0_0_10 , \mcuResourcesInst/DIN_RAM[9] , 
         \mcuResourcesInst/RAMInst/mdout0_2_11 , 
         \mcuResourcesInst/RAMInst/mdout0_3_11 , 
         \mcuResourcesInst/RAMInst/mdout0_1_11 , 
         \mcuResourcesInst/RAMInst/mdout0_0_11 , 
         \mcuResourcesInst/DIN_RAM[10] , 
         \mcuResourcesInst/RAMInst/mdout0_2_12 , 
         \mcuResourcesInst/RAMInst/mdout0_3_12 , 
         \mcuResourcesInst/RAMInst/mdout0_1_12 , 
         \mcuResourcesInst/RAMInst/mdout0_0_12 , 
         \mcuResourcesInst/DIN_RAM[11] , 
         \mcuResourcesInst/RAMInst/mdout0_2_13 , 
         \mcuResourcesInst/RAMInst/mdout0_3_13 , 
         \mcuResourcesInst/RAMInst/mdout0_1_13 , 
         \mcuResourcesInst/RAMInst/mdout0_0_13 , 
         \mcuResourcesInst/DIN_RAM[12] , 
         \mcuResourcesInst/RAMInst/mdout0_2_14 , 
         \mcuResourcesInst/RAMInst/mdout0_3_14 , 
         \mcuResourcesInst/RAMInst/mdout0_1_14 , 
         \mcuResourcesInst/RAMInst/mdout0_0_14 , 
         \mcuResourcesInst/DIN_RAM[13] , 
         \mcuResourcesInst/RAMInst/mdout0_2_15 , 
         \mcuResourcesInst/RAMInst/mdout0_3_15 , 
         \mcuResourcesInst/RAMInst/mdout0_1_15 , 
         \mcuResourcesInst/RAMInst/mdout0_0_15 , 
         \mcuResourcesInst/DIN_RAM[14] , \mcuResourcesInst/DIN_ROM[11] , 
         \mcuResourcesInst.memoryMapperInst.un5_ROM_MAP , \PIN_DIN_GPIO_c[11] , 
         \mcuResourcesInst/DIN_ROM[12] , \PIN_DIN_GPIO_c[12] , 
         \mcuResourcesInst/memoryMapperInst/un5_ROM_MAP_1 , 
         \mcuResourcesInst/DIN_ROM[9] , \PIN_DIN_GPIO_c[9] , 
         \mcuResourcesInst/DIN_ROM[2] , \PIN_DIN_GPIO_c[2] , 
         \mcuResourcesInst/DIN_ROM[7] , \PIN_DIN_GPIO_c[7] , 
         \mcuResourcesInst.DIN_ROM[1] , \PIN_DIN_GPIO_c[1] , 
         \mcuResourcesInst/DIN_ROM[0] , \PIN_DIN_GPIO_c[0] , 
         \mcuResourcesInst/memoryMapperInst/N_81 , 
         \mcuResourcesInst/DIN_ROM[15] , \PIN_DIN_GPIO_c[15] , 
         \mcuResourcesInst/DIN_ROM[14] , \PIN_DIN_GPIO_c[14] , 
         \mcuResourcesInst/DIN_ROM[13] , \PIN_DIN_GPIO_c[13] , 
         \coreInst/ALUB_SRCX_ss0_i_0_i , \coreInst/d_m8_0_o4_0 , 
         \coreInst/REGB_ADDRX[0] , \coreInst/opxMultiplexerInst/N_3_i_0 , 
         \coreInst/N_444 , \coreInst/PC_OFFSETX[0] , \coreInst/i17_mux_4 , 
         \coreInst/i17_mux_0 , \coreInst/LDS_BYTEX , \coreInst/N_27 , 
         \coreInst/programCounterInst/r_m2_N_7 , 
         \coreInst.busControllerInst.ADDR_m4_e_2 , \coreInst/un3_sex[15] , 
         \ADDR_BUF_i_2_RNIQHDJ2[15] , 
         \coreInst/busControllerInst/ADDR_N_3_mux , \coreInst/i17_mux_6 , 
         \coreInst/i17_mux_2 , \coreInst/DEBUG_OPX_fast[3] , 
         \coreInst/DEBUG_OPX_fast[1] , \coreInst/DEBUG_OPX_fast[2] , 
         \coreInst/N_514 , \coreInst/N_263_1 , \coreInst/ARGB_X[0] , 
         \coreInst/N_267 , \coreInst/N_985 , \coreInst/N_487 , 
         \coreInst/N_513 , \coreInst/fullALUInst/aluInst/PARITY_2_0 , 
         \coreInst/fullALUInst/aluInst/PARITY_2_9 , 
         \coreInst/fullALUInst/aluInst/madd_cry_15_s1_0_RNI0P3P , 
         \coreInst/fullALUInst/aluInst/N_20_2 , 
         \coreInst/fullALUInst/aluInst/N_24_2 , 
         \coreInst/fullALUInst/aluInst/N_32_2 , 
         \coreInst/fullALUInst/aluInst/N_28_2 , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_105_0 , 
         \coreInst/fullALUInst/aluInst/N_18_2 , 
         \coreInst/fullALUInst/aluInst/N_22_2 , 
         \coreInst/fullALUInst/aluInst/N_26_2 , 
         \coreInst/fullALUInst/aluInst/N_30_2 , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_103_0 , 
         \coreInst/fullALUInst/aluInst/N_2_2 , 
         \coreInst/fullALUInst/aluInst/N_27_2 , 
         \coreInst/fullALUInst/aluInst/N_23_2 , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_100_0 , 
         \coreInst/fullALUInst/aluInst/RESULT_sn_N_8 , 
         \coreInst/fullALUInst/aluInst/N_232 , 
         \coreInst/fullALUInst/aluInst/N_216 , 
         \coreInst/fullALUInst/aluInst/N_134_0 , 
         \coreInst/fullALUInst/aluInst/RESULT_12_0_d[13] , 
         \coreInst/RESULT_12_0_s[14] , \coreInst/RESULT109_2 , 
         \coreInst/fullALUInst/aluInst/RESULT_10_d[10] , 
         \coreInst/fullALUInst/aluInst/N_197 , 
         \coreInst/fullALUInst/aluInst/N_77 , \coreInst/RESULT109_1 , 
         \coreInst/fullALUInst/aluInst/N_279 , \coreInst/ALU_OPX[3] , 
         \coreInst/fullALUInst/aluInst/N_211 , 
         \coreInst/fullALUInst/aluInst/N_227 , 
         \coreInst/fullALUInst/aluInst/N_243 , 
         \coreInst/fullALUInst/aluInst/N_259 , \coreInst/ALU_R[8] , 
         \coreInst/fullALUInst/aluInst/N_176 , 
         \coreInst/fullALUInst/aluInst/un3_tmp[6] , \coreInst/N_171 , 
         \coreInst/fullALUInst/aluInst/N_193 , 
         \coreInst/fullALUInst/aluInst/N_73 , 
         \coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6] , 
         \coreInst/fullALUInst/aluInst/N_173 , 
         \coreInst/fullALUInst/aluInst/N_124 , 
         \coreInst/fullALUInst/aluInst/N_190 , 
         \coreInst/fullALUInst/aluInst/N_70 , 
         \coreInst/fullALUInst/aluInst/N_272 , 
         \coreInst/fullALUInst/aluInst/un3_tmp[4] , 
         \coreInst/fullALUInst/aluInst/tmp_3[3] , 
         \coreInst/fullALUInst/aluInst/RESULT_10[0] , 
         \coreInst/fullALUInst/aluInst/N_239 , 
         \coreInst/fullALUInst/aluInst/N_255 , 
         \coreInst/fullALUInst/aluInst/N_273 , 
         \coreInst/fullALUInst/aluInst/RESULT_13_bm_1[15] , 
         \coreInst/fullALUInst/aluInst/un3_tmp[15] , \coreInst/ALU_OPX_i_1[0] , 
         \coreInst/fullALUInst/aluInst/N_100 , 
         \coreInst/fullALUInst/aluInst/N_168 , 
         \coreInst/fullALUInst/aluInst/un3_tmp[10] , 
         \coreInst/fullALUInst/aluInst/tmp_3_0[10] , 
         \coreInst/fullALUInst/aluInst/tmp_3_5[9] , 
         \coreInst/fullALUInst/aluInst/un3_tmp[2] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT[2] , 
         \coreInst/fullALUInst/aluInst/tmp_3[1] , 
         \coreInst/fullALUInst/aluInst/N_237 , 
         \coreInst/fullALUInst/aluInst/N_253 , 
         \coreInst/fullALUInst/aluInst/N_271 , 
         \coreInst.fullALUInst.aluInst.N_136 , 
         \coreInst/fullALUInst/aluInst/RESULT_11[0] , 
         \coreInst/fullALUInst/aluInst/N_82 , 
         \coreInst/fullALUInst/aluInst/N_202 , 
         \coreInst/fullALUInst/aluInst/un3_tmp[1] , 
         \coreInst/fullALUInst/aluInst/un21_RESULT[1] , 
         \coreInst/fullALUInst/aluInst/un3_tmp[0] , 
         \coreInst/fullALUInst/aluInst/N_236 , 
         \coreInst/fullALUInst/aluInst/N_252 , 
         \coreInst/fullALUInst/aluInst/N_270 , 
         \coreInst/fullALUInst/aluInst/RESULT_12[1] , 
         \coreInst/fullALUInst/aluInst/RESULT_sn_N_6 , 
         \coreInst/fullALUInst/aluInst/un3_tmp[7] , 
         \coreInst/fullALUInst/aluInst/RESULT_10[7] , 
         \coreInst/fullALUInst/aluInst/N_129_mux , 
         \coreInst/fullALUInst/aluInst/N_210 , 
         \coreInst/fullALUInst/aluInst/N_226 , 
         \coreInst/fullALUInst/aluInst/N_293 , 
         \coreInst/fullALUInst/aluInst/un53_RESULT[7] , 
         \coreInst/fullALUInst/aluInst/N_258 , 
         \coreInst/fullALUInst/aluInst/RESULT_12[2] , 
         \coreInst/fullALUInst/aluInst/RESULT_12[4] , 
         \coreInst/fullALUInst/aluInst/un53_RESULT[0] , 
         \coreInst/fullALUInst/aluInst/un10_RESULT_axb_0 , 
         \coreInst/fullALUInst/aluInst/N_251 , 
         \coreInst/fullALUInst/aluInst/un3_tmp[8] , 
         \coreInst/fullALUInst/aluInst/RESULT_10[8] , 
         \coreInst/fullALUInst/aluInst/N_130_mux , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_99_0 , 
         \coreInst/fullALUInst/aluInst/OVER_2 , 
         \coreInst/fullALUInst/aluInst/RESULT_7[8] , 
         \coreInst/fullALUInst/aluInst/un3_tmp[9] , 
         \coreInst/fullALUInst/aluInst/RESULT_10[9] , 
         \coreInst/fullALUInst/aluInst/N_131_mux , 
         \coreInst/fullALUInst/aluInst/N_212 , 
         \coreInst/fullALUInst/aluInst/N_228 , 
         \coreInst/fullALUInst/aluInst/N_295 , 
         \coreInst/fullALUInst/aluInst/RESULT_7[9] , 
         \coreInst/fullALUInst/aluInst/RESULT_10[10] , 
         \coreInst/fullALUInst/aluInst/N_132_mux , 
         \coreInst/fullALUInst/aluInst/N_213 , 
         \coreInst/fullALUInst/aluInst/N_229 , 
         \coreInst/fullALUInst/aluInst/N_296 , 
         \coreInst/fullALUInst/aluInst/RESULT_7[10] , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_101_0 , 
         \coreInst/fullALUInst/aluInst/RESULT_10[11] , 
         \coreInst/fullALUInst/aluInst/un3_tmp[11] , 
         \coreInst/fullALUInst/aluInst/N_133_mux , 
         \coreInst/fullALUInst/aluInst/N_214 , 
         \coreInst/fullALUInst/aluInst/N_230 , 
         \coreInst/fullALUInst/aluInst/N_297 , 
         \coreInst/fullALUInst/aluInst/RESULT_7[11] , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_102_0 , 
         \coreInst/fullALUInst/aluInst/RESULT_10[12] , 
         \coreInst/fullALUInst/aluInst/un3_tmp[12] , 
         \coreInst/fullALUInst/aluInst/N_134_mux , 
         \coreInst/fullALUInst/aluInst/N_215 , 
         \coreInst/fullALUInst/aluInst/N_231 , 
         \coreInst/fullALUInst/aluInst/N_298 , 
         \coreInst/fullALUInst/aluInst/RESULT_7[12] , 
         \coreInst/fullALUInst/aluInst/un3_tmp[14] , 
         \coreInst/fullALUInst/aluInst/RESULT_10[14] , 
         \coreInst/fullALUInst/aluInst/N_136_mux , 
         \coreInst/fullALUInst/aluInst/N_217 , 
         \coreInst/fullALUInst/aluInst/N_233 , 
         \coreInst/fullALUInst/aluInst/N_300 , 
         \coreInst/fullALUInst/aluInst/RESULT_7[14] , 
         \coreInst/fullALUInst/aluInst/RESULT_10[1] , 
         \coreInst/fullALUInst/aluInst/RESULT_11[1] , 
         \coreInst/fullALUInst/aluInst/N_204 , 
         \coreInst/fullALUInst/aluInst/N_220 , 
         \coreInst/fullALUInst/aluInst/N_287 , 
         \coreInst/fullALUInst/aluInst/RESULT_10[5] , 
         \coreInst/fullALUInst/aluInst/un3_tmp[5] , 
         \coreInst/fullALUInst/aluInst/RESULT_11[5] , 
         \coreInst/fullALUInst/aluInst/N_208 , 
         \coreInst/fullALUInst/aluInst/N_224 , 
         \coreInst/fullALUInst/aluInst/N_291 , 
         \coreInst/fullALUInst/aluInst/RESULT_10[2] , 
         \coreInst/fullALUInst/aluInst/RESULT_11[2] , 
         \coreInst/fullALUInst/aluInst/N_205 , 
         \coreInst/fullALUInst/aluInst/N_221 , 
         \coreInst/fullALUInst/aluInst/N_288 , 
         \coreInst/fullALUInst/aluInst/RESULT_10[6] , 
         \coreInst/fullALUInst/aluInst/RESULT_11[6] , 
         \coreInst/fullALUInst/aluInst/N_209 , 
         \coreInst/fullALUInst/aluInst/N_225 , 
         \coreInst/fullALUInst/aluInst/N_292 , 
         \coreInst/fullALUInst/aluInst/RESULT_10[4] , 
         \coreInst/fullALUInst/aluInst/RESULT_11[4] , 
         \coreInst/fullALUInst/aluInst/N_207 , 
         \coreInst/fullALUInst/aluInst/N_223 , 
         \coreInst/fullALUInst/aluInst/N_290 , 
         \coreInst/fullALUInst/aluInst/un3_tmp[3] , 
         \coreInst/fullALUInst/aluInst/RESULT_10[3] , 
         \coreInst/fullALUInst/aluInst/RESULT_11[3] , 
         \coreInst/fullALUInst/aluInst/N_206 , 
         \coreInst/fullALUInst/aluInst/N_222 , 
         \coreInst/fullALUInst/aluInst/N_289 , 
         \coreInst/fullALUInst/aluInst/un53_RESULT[8] , 
         \coreInst/fullALUInst/aluInst/un53_RESULT[9] , 
         \coreInst/fullALUInst/aluInst/N_260 , 
         \coreInst/fullALUInst/aluInst/un53_RESULT[11] , 
         \coreInst/fullALUInst/aluInst/N_262 , 
         \coreInst/fullALUInst/aluInst/un53_RESULT[12] , 
         \coreInst/fullALUInst/aluInst/N_263 , 
         \coreInst/fullALUInst/aluInst/un53_RESULT[13] , 
         \coreInst/fullALUInst/aluInst/RESULT_10[13] , 
         \coreInst/fullALUInst/aluInst/N_264 , 
         \coreInst/fullALUInst/aluInst/un53_RESULT[14] , 
         \coreInst/fullALUInst/aluInst/N_265 , 
         \coreInst/fullALUInst/aluInst/N_203 , 
         \coreInst/fullALUInst/aluInst/N_219 , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_92_0 , 
         \coreInst/fullALUInst/aluInst/RESULT_7[1] , 
         \coreInst/fullALUInst/aluInst/un38_RESULT[5] , 
         \coreInst/fullALUInst/aluInst/RESULT_7[7] , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_98_0 , 
         \coreInst/fullALUInst/aluInst/RESULT_7[2] , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_93_0 , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_97_0 , 
         \coreInst/fullALUInst/aluInst/RESULT_7[6] , 
         \coreInst/fullALUInst/aluInst/RESULT_7[4] , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_95_0 , 
         \coreInst/fullALUInst/aluInst/RESULT_7[3] , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_94_0 , 
         \coreInst/fullALUInst/aluInst/RESULT_7[0] , 
         \coreInst/fullALUInst/aluInst/un38_RESULT[0] , 
         \coreInst/fullALUInst/aluInst/OVER_0 , 
         \coreInst/fullALUInst/aluInst/N_46_1 , 
         \coreInst/fullALUInst/aluInst/un3_tmp[13] , 
         \coreInst/fullALUInst/aluInst/N_150 , 
         \coreInst/fullALUInst/aluInst/N_65_0 , 
         \coreInst/fullALUInst/aluInst/N_98 , 
         \coreInst/fullALUInst/aluInst/N_46_0 , 
         \coreInst/fullALUInst/aluInst/N_116 , 
         \coreInst/fullALUInst/aluInst/N_34_2 , 
         \coreInst/fullALUInst/aluInst/N_68_0 , 
         \coreInst/fullALUInst/aluInst/N_8_2 , 
         \coreInst/fullALUInst/aluInst/N_10_2 , 
         \coreInst/fullALUInst/aluInst/N_12_2 , 
         \coreInst/fullALUInst/aluInst/N_14_2 , 
         \coreInst/fullALUInst/aluInst/N_48_2 , 
         \coreInst/fullALUInst/aluInst/N_14_0 , 
         \coreInst/fullALUInst/aluInst/N_10_0 , 
         \coreInst/fullALUInst/aluInst/N_12_0 , 
         \coreInst/fullALUInst/aluInst/N_42_1 , 
         \coreInst/fullALUInst/aluInst/a15_b_i[0] , 
         \coreInst/fullALUInst/aluInst/N_42_0 , 
         \coreInst/fullALUInst/aluInst/N_7_0 , 
         \coreInst/fullALUInst/aluInst/N_9_0 , 
         \coreInst/fullALUInst/aluInst/N_39_0 , 
         \coreInst/fullALUInst/aluInst/N_4_3 , 
         \coreInst/fullALUInst/aluInst/N_6_2 , 
         \coreInst/fullALUInst/aluInst/N_42_2 , 
         \coreInst/fullALUInst/aluInst/N_3_0 , 
         \coreInst/fullALUInst/aluInst/N_5_1 , 
         \coreInst/fullALUInst/aluInst/N_35_0_0 , 
         \coreInst/fullALUInst/aluInst/N_8 , 
         \coreInst/fullALUInst/aluInst/N_10 , 
         \coreInst/fullALUInst/aluInst/N_12 , 
         \coreInst/fullALUInst/aluInst/N_14 , 
         \coreInst/fullALUInst/aluInst/N_46 , 
         \coreInst/fullALUInst/aluInst/N_4_0 , 
         \coreInst/fullALUInst/aluInst/N_2 , 
         \coreInst/fullALUInst/aluInst/N_6 , 
         \coreInst/fullALUInst/aluInst/N_40 , 
         \coreInst/fullALUInst/aluInst/N_20_0 , 
         \coreInst/fullALUInst/aluInst/N_18_0 , 
         \coreInst/fullALUInst/aluInst/N_29_0 , 
         \coreInst/fullALUInst/aluInst/N_17_0 , 
         \coreInst/fullALUInst/aluInst/N_23 , 
         \coreInst/fullALUInst/aluInst/N_21 , 
         \coreInst/fullALUInst/aluInst/N_31 , 
         \coreInst/fullALUInst/aluInst/N_27 , 
         \coreInst/fullALUInst/aluInst/N_25 , 
         \coreInst/fullALUInst/aluInst/N_29 , 
         \coreInst/fullALUInst/aluInst/un53_RESULT[5] , 
         \coreInst/fullALUInst/aluInst/N_256 , 
         \coreInst/registerSequencerInst/REGA_WEN_3_i_1 , 
         \coreInst/registerSequencerInst/REGA_WEN_3_i_a2_4_0_0 , 
         \coreInst/registerSequencerInst/REGA_WEN_3_i_2 , 
         \coreInst/REGA_DINX[0] , \coreInst/N_440 , 
         \coreInst/REGA_DINX_m1_1[0] , \coreInst/registerFileInst/N_456 , 
         \mcuResourcesInst/N_11 , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_4_RNO[1] , 
         \mcuResourcesInst/UARTInst/uartRXInst/N_174 , 
         \mcuResourcesInst/memoryMapperInst/RAM_MAP , 
         \mcuResourcesInst/memoryMapperInst/un1_RESET , \mcuResourcesInst/BE1 , 
         \mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_4_RNIOQQP , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_m3_N_3L3 , 
         \mcuResourcesInst.memoryMapperInst.GPIO_m3_0_a2_sx , 
         \mcuResourcesInst/memoryMapperInst/GPIO_m3_0_a2_1 , N_320, N_322, 
         \coreInst/registerSequencerInst/REGB_EN_3_i_o2_1_0 , 
         \coreInst/registerSequencerInst/N_938 , 
         \coreInst/opxMultiplexerInst/ALUB_SRCX_0_2_N_2L1 , 
         \coreInst/opxMultiplexerInst/ALUB_SRCX_0_2_N_3L3 , 
         \coreInst/ALUB_SRCX_0_2[1] , \coreInst/ALUB_SRCX_a3_1[1] , 
         \coreInst/ALUB_SRCX_0_3[1] , \coreInst/ALUB_SRCX[1] , 
         \coreInst/INSTRUCTION[1] , \coreInst/INSTRUCTION[2] , 
         \coreInst/ALUB_N_14 , \coreInst/INSTRUCTION[0] , 
         \coreInst/fullALUInst/muxB/ALUB_DATA_6_RNO[1] , 
         \mcuResourcesInst.memoryMapperInst.un5_RAM_MAP , 
         \coreInst/programCounterInst/ARGA_i_0_2_1[0] , 
         \mcuResourcesInst.N_27 , 
         \coreInst/programCounterInst/ARGA_i_0_3_N_3L3 , 
         \coreInst/programCounterInst/ARGA_i_0_3_N_5L8 , 
         \coreInst/programCounterInst/ARGA_i_0_3_N_4L6 , 
         \coreInst/busControllerInst/sequencer/N_431 , 
         \coreInst/busControllerInst/sequencer/WRN0_BUF_3_0_o2_0 , 
         \coreInst/busControllerInst/sequencer/N_512 , 
         \coreInst/busControllerInst/sequencer/ADDR_BUSX_R_3_0_iv_i_1[1] , 
         \coreInst/busControllerInst/ADDR_BUF_i_2[14] , 
         \coreInst/RESULT_13_RNIB0613[14] , 
         \coreInst/busControllerInst/ADDR_BUF_i_3_mb_mb_sn[14] , N_316_i, 
         \coreInst/busControllerInst/ADDR_BUF_i_o2_1[0] , 
         \coreInst/busControllerInst/N_430 , N_439_i, 
         \coreInst/busControllerInst/ADDR_BUF_i_1_1[1] , 
         \coreInst/busControllerInst/N_428 , 
         \coreInst/busControllerInst/ADDR_BUF_i_1[1] , 
         \coreInst/busControllerInst/ADDR_BUF_i_3_sn[10] , N_156, 
         \coreInst/busControllerInst/ADDR_BUF_i_3_sn[9] , N_324, 
         \coreInst/registerFileInst/N_871 , 
         \coreInst/registerFileInst/ADDRB_0_1[1] , 
         \coreInst/fullALUInst/N_44_0 , \coreInst/REGB_DOUT[8] , 
         \coreInst/REGB_DOUT[10] , \coreInst/INSTRUCTION[4] , 
         \coreInst/REGB_DOUT[12] , \coreInst/fullALUInst/muxB/N_13 , 
         \coreInst/REGB_DOUT[13] , \coreInst/INSTRUCTION[5] , 
         \coreInst/fullALUInst/muxB/N_14 , \coreInst/REGB_DOUT[14] , 
         \coreInst/INSTRUCTION[6] , \coreInst/fullALUInst/muxB/N_15 , 
         \coreInst/REGB_DOUT[11] , \coreInst/fullALUInst/muxB/N_12 , 
         \coreInst/REGB_DOUT[9] , \coreInst/N_67 , \coreInst/N_35 , 
         \coreInst/N_34 , \coreInst/fullALUInst/aluInst/un3_tmp_10_0_0 , 
         \coreInst/N_66 , \coreInst/N_36 , 
         \coreInst/fullALUInst/muxB/ALUB_DATA_6_RNO[3] , 
         \coreInst/fullALUInst/aluInst/un3_tmp_13_0_0 , 
         \coreInst/fullALUInst/muxB/ALUB_DATA_3_N_4L6 , 
         \coreInst/fullALUInst/muxB/ALUB_DATA_3_N_3L4 , 
         \coreInst/fullALUInst/aluInst/un3_tmp_1[6] , 
         \coreInst/fullALUInst/aluInst/un3_tmp_6_0_0 , 
         \coreInst/fullALUInst/aluInst/OVER_2_6 , 
         \coreInst/fullALUInst/aluInst/un3_tmp_14[0] , 
         \coreInst/fullALUInst/aluInst/un3_tmp_5_0_1 , 
         \coreInst/fullALUInst/aluInst/tmp_3_0[6] , 
         \coreInst/fullALUInst/aluInst/N_121 , 
         \coreInst/fullALUInst/aluInst/N_235 , 
         \coreInst/fullALUInst/aluInst/RESULT_6[15] , 
         \coreInst/fullALUInst/aluInst/RESULT_12_1_RNO_0[5] , 
         \coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[5] , 
         \coreInst/fullALUInst/aluInst/N_274 , 
         \coreInst/fullALUInst/aluInst/tmp_3_3[5] , 
         \coreInst/fullALUInst/aluInst/N_175 , 
         \coreInst/fullALUInst/aluInst/N_45_1 , 
         \coreInst/fullALUInst/aluInst/N_31_1 , 
         \coreInst/fullALUInst/aluInst/N_47_1 , 
         \coreInst/fullALUInst/aluInst/N_28_0 , 
         \coreInst/fullALUInst/aluInst/N_44_1 , 
         \coreInst/fullALUInst/aluInst/un3_tmp_1[5] , 
         \coreInst/fullALUInst/aluInst/un3_tmp_4_0_1 , 
         \coreInst/fullALUInst/aluInst/N_41 , 
         \coreInst/fullALUInst/aluInst/N_17 , 
         \coreInst/fullALUInst/aluInst/N_57 , 
         \coreInst/fullALUInst/aluInst/N_44_0 , 
         \coreInst/fullALUInst/aluInst/N_40_2 , 
         \coreInst/fullALUInst/aluInst/N_22 , 
         \coreInst/fullALUInst/aluInst/N_38 , 
         \coreInst/fullALUInst/aluInst/N_3_2 , 
         \coreInst/fullALUInst/aluInst/N_3 , 
         \coreInst/fullALUInst/aluInst/N_19 , 
         \coreInst/fullALUInst/aluInst/PARITY_2_1_RNO , 
         \coreInst/fullALUInst/aluInst/PARITY_2_1 , \PIN_DEBUG_DATA_in[3] , 
         \PIN_DEBUG_DATA_in[2] , \coreInst/fullALUInst/aluInst/PARITY_2_6 , 
         \coreInst/DEBUG_OP[2] , \coreInst/DEBUG_OP[3] , 
         \coreInst/fullALUInst/aluInst/PARITY_2_3 , \coreInst/DEBUG_OP[0] , 
         \coreInst/debugger/requestGen/dhReqReg/Q_R[0] , 
         \coreInst/fullALUInst/aluInst/PARITY_2_4_RNO , \PIN_DEBUG_DATA_in[1] , 
         \PIN_DEBUG_DATA_in[0] , \coreInst/fullALUInst/aluInst/PARITY_2_4 , 
         \coreInst/DEBUG_OP[1] , \coreInst/fullALUInst/aluInst/PARITY_2_7_RNO , 
         \coreInst/debugger/requestGen/dhReqReg/Q_PHI0[0] , 
         \coreInst/fullALUInst/aluInst/PARITY_2_7 , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_101_0_1 , 
         \coreInst/fullALUInst/aluInst/RESULT_3_sx[8] , 
         \coreInst.fullALUInst.aluInst.N_129 , 
         \coreInst/busControllerInst/N_807 , \mcuResourcesInst/N_12 , 
         \coreInst/busControllerInst/ADDR_BUF_i_1[2] , 
         \coreInst/busControllerInst/N_802 , \coreInst.debugger.DEBUG_RESET , 
         \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data_0_sqmuxa , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte_1_sqmuxa , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[0] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte_RNO[3] , 
         \mcuResourcesInst/UARTInst/uartRXInst/un1_r_SM_Main_5_0_a2_0 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[5] , 
         \mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_N_2L1_0 , 
         \mcuResourcesInst.N_108 , \mcuResourcesInst/DIN_ROM[8] , 
         \mcuResourcesInst/N_13_0 , \RESULT_13_RNI7R413[13] , 
         \coreInst.busControllerInst.ADDR_BUF_i_3_mb_mb_1[13] , 
         \coreInst.busControllerInst.ADDR_BUF_i_2[13] , GPIO_m3_0_a2_x_0, 
         \coreInst/N_128 , \coreInst/RESULT_13_RNIO6M8B[7] , 
         \coreInst/busControllerInst/ADDR_BUF_i_2[7] , N_160, 
         \mcuResourcesInst/memoryMapperInst/GPIO_MAP_8_0_sx , 
         \mcuResourcesInst.memoryMapperInst.INT_MAP_1 , RD_GPIO_i, 
         \mcuResourcesInst.memoryMapperInst.INT_MAP_8 , 
         \mcuResourcesInst/memoryMapperInst/INT_MAP_sx , 
         \mcuResourcesInst/memoryMapperInst/d_m5_0 , 
         \coreInst/registerFileInst/N_675 , 
         \mcuResourcesInst/memoryMapperInst/INT_MAP_11_1_x , 
         \mcuResourcesInst/memoryMapperInst/CPU_m1_e_1_2 , 
         \mcuResourcesInst/WR_RAM , 
         \mcuResourcesInst/memoryMapperInst/INT_MAP_11_1_sx , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_bm_RNO_0[3] , 
         \mcuResourcesInst.memoryMapperInst.INT_MAP_11_1 , 
         \mcuResourcesInst/DIN_ROM[4] , \coreInst/RESULT_13_RNI3M313[12] , 
         \coreInst/busControllerInst/ADDR_BUF_i_2[12] , 
         \mcuResourcesInst.N_29 , \coreInst/programCounterInst/ARGA_m2 , 
         \coreInst/programCounterInst/ARGA_0_iv_i_a1_2[1] , 
         \coreInst/programCounterInst/ARGA_m1_e , 
         \coreInst/programCounterInst/ARGA_m5_0_a2_0 , 
         \coreInst/programCounterInst/ARGA_N_11_mux , 
         \coreInst/busControllerInst/ADDR_BUF_i_1[3] , 
         \coreInst/busControllerInst/N_797 , N_164, N_162, N_328, N_326, 
         \mcuResourcesInst.memoryMapperInst.GPIO_MAP_2_1 , 
         \mcuResourcesInst.memoryMapperInst.GPIO_MAP_8_0 , 
         \coreInst/busControllerInst/ADDR_BUF_i_1[4] , 
         \coreInst/busControllerInst/N_792 , 
         \mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_3 , 
         \mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_4 , 
         \ADDR_BUF_i_a2_8_RNIH4E34[10] , 
         \coreInst.busControllerInst.ADDR_BUF_i_2[8] , N_158, 
         \coreInst/busControllerInst/ADDR_BUF_i_1[6] , 
         \coreInst/busControllerInst/N_586 , \mcuResourcesInst.N_128 , 
         \coreInst/programCounterInst/r_m2_m11_0_o4_2 , 
         \coreInst/fullALUInst/aluInst/N_299 , 
         \coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI9HM91[13] , 
         \coreInst/registerSequencerInst/REGA_WEN_3_i_a2_1_0 , 
         \coreInst/registerSequencerInst/N_1009 , 
         \coreInst/registerSequencerInst/REGA_WEN_3_i_a2_0_2 , 
         \coreInst/debugger/N_967 , \coreInst/GROUPX_fast[0] , 
         \coreInst/fullALUInst/muxA/N_49 , 
         \coreInst/fullALUInst/muxB/ALUB_DATA_5_xx_mm_sx[2] , 
         \coreInst/opxMultiplexerInst/ALUB_N_15 , 
         \coreInst/opxMultiplexerInst/ALUB_m10_i_a4_0 , 
         \coreInst/opxMultiplexerInst/ALUB_m10_i_1 , \coreInst/N_263 , 
         \coreInst/N_37 , \coreInst/instructionPhaseDecoderInst/RESET_R , 
         \coreInst/registerFileInst/DINA_3_i_0[0] , 
         \coreInst/fullALUInst/ccRegs/CC_INT1_REG[3] , 
         \coreInst/fullALUInst/ccRegs/CC_INT0_REG[3] , 
         \coreInst/DEBUG_MODE_fast , 
         \coreInst/fullALUInst/aluInst/RESULT_10[15] , \coreInst/N_696 , 
         \coreInst/ALUB_SRCX_0_x[1] , \coreInst/REGB_DOUT[2] , 
         \coreInst/REGB_DOUT[3] , \coreInst/INSTRUCTION[3] , 
         \coreInst/ALUB_SRCX_0_3_1[1] , \coreInst/registerFileInst/N_984 , 
         \coreInst/opxMultiplexerInst/ALUB_SRCX_0_x_sx[1] , 
         \coreInst/ALUB_SRCX_0_x_0[1] , \coreInst/N_1008 , 
         \coreInst/fullALUInst/ccRegs/CC_INT0_REG_0_sqmuxa , 
         \coreInst/programCounterInst/ARGA_0_iv_i_0_0[1] , 
         \coreInst/programCounterInst/ARGA_0_iv_i_a1_1[1] , 
         \coreInst/programCounterInst/N_517 , 
         \coreInst/programCounterInst/N_979 , 
         \coreInst/programCounterInst/INTR0[15] , 
         \coreInst/programCounterInst/INTR0[12] , 
         \coreInst/programCounterInst/INTR0[13] , 
         \coreInst/programCounterInst/ARGA_N_5 , 
         \coreInst/programCounterInst/r_m2_N_8 , 
         \coreInst/programCounterInst/ARGA_0_iv_i_a0_0[1] , 
         \coreInst/REGB_DOUT[5] , \coreInst/REGB_DOUT[6] , 
         \coreInst/REGB_DOUT[7] , \coreInst/programCounterInst/INTR0[2] , 
         \coreInst/programCounterInst/INTR0[3] , 
         \coreInst/programCounterInst/N_962 , \coreInst/REGB_DOUT[4] , 
         \coreInst/busControllerInst/N_978 , N_318_i, 
         \coreInst/fullALUInst/aluInst/N_283 , \coreInst/REGA_DOUT[13] , 
         \coreInst/fullALUInst/aluInst/N_281 , \coreInst/REGA_DOUT[9] , 
         \coreInst/fullALUInst/aluInst/N_275 , N_162_i, 
         \coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI6DL91[12] , N_320_i, 
         N_326_i, N_160_i, \coreInst/busControllerInst/N_576 , 
         \coreInst/busControllerInst/ADDR_BUF_i_2_0[8] , N_158_i, N_328_i, 
         \coreInst/busControllerInst/ADDR_BUF_i_0[2] , N_330_i, N_332_i, 
         \coreInst/fullALUInst/aluInst/RESULT_11_RNITVPP[15] , 
         \coreInst/d_N_5_i_0_li , 
         \coreInst/busControllerInst/ADDR_BUF_i_2[15] , \coreInst/N_294 , 
         \coreInst/RESULT_11_RNIO3A01[8] , 
         \coreInst/busControllerInst/ADDR_BUF_i_2_0[13] , 
         \coreInst/busControllerInst/N_771 , 
         \coreInst/busControllerInst/N_960 , 
         \coreInst/busControllerInst/ADDR_BUF_i_2_0[11] , 
         \coreInst/busControllerInst/N_781 , 
         \coreInst/busControllerInst/ADDR_BUF_i_2_0[12] , 
         \coreInst/busControllerInst/N_776 , 
         \coreInst/busControllerInst/N_766 , 
         \coreInst/busControllerInst/ADDR_BUF_i_2_0[14] , 
         \coreInst/busControllerInst/N_761 , 
         \coreInst/busControllerInst/ADDR_BUF_i_2_0[15] , 
         \coreInst/busControllerInst/ADDR_BUF_i_2_0[9] , 
         \coreInst/busControllerInst/N_787 , 
         \coreInst/busControllerInst/N_571 , 
         \coreInst/busControllerInst/ADDR_BUF_i_2_0[10] , \coreInst/N_68 , 
         \coreInst/busControllerInst/N_581 , 
         \coreInst/busControllerInst/ADDR_BUF_i_2_0[7] , 
         \coreInst/busControllerInst/ADDR_BUF_i_0[4] , 
         \coreInst/busControllerInst/ADDR_BUF_i_0[3] , 
         \coreInst/busControllerInst/ADDR_BUF_i_0[5] , 
         \coreInst/busControllerInst/ADDR_BUF_i_0[6] , 
         \coreInst/registerFileInst/regs/N_248_i_1 , 
         \coreInst/registerFileInst/DINA_3_i_0[2] , 
         \coreInst/registerFileInst/regs/N_248_i , 
         \coreInst/registerFileInst/regs/N_252_i_1 , 
         \coreInst/registerFileInst/regs/N_252_i , 
         \coreInst/registerFileInst/DINA_3_i_0[1] , 
         \coreInst/registerFileInst/N_986 , 
         \coreInst/registerFileInst/regs/N_250_i , 
         \coreInst/registerFileInst/N_667 , 
         \coreInst/registerFileInst/DINA_3_i_0[3] , 
         \coreInst/registerFileInst/regs/N_246_i , 
         \coreInst/registerFileInst/DINA_3_i_0[4] , 
         \coreInst/registerFileInst/N_663 , 
         \coreInst/registerFileInst/regs/N_244_i , 
         \coreInst/registerFileInst/DINA_3_i_0[5] , 
         \coreInst/registerFileInst/N_659 , 
         \coreInst/registerFileInst/regs/N_242_i , 
         \coreInst/registerFileInst/DINA_3_i_0[6] , 
         \coreInst/registerFileInst/N_655 , 
         \coreInst/registerFileInst/regs/N_240_i , \coreInst/d_N_4_2 , 
         \coreInst/REGB_DOUT[0] , \coreInst/registers_0_0_1_RNISQGB1 , 
         \coreInst/registerFileInst/regs/N_238_i_sx , 
         \coreInst/registerFileInst/DINA_3_i_0[7] , 
         \coreInst/registerFileInst/regs/N_238_i , 
         \coreInst/registerFileInst/N_480 , 
         \coreInst/registerFileInst/ADDRB_i_0[0] , 
         \coreInst/registerFileInst/N_1018 , 
         \coreInst/registerFileInst/N_370_i , 
         \coreInst/registerFileInst/DINA_3_0_0[15] , 
         \coreInst/registerFileInst/DINA[15] , 
         \coreInst/registerFileInst/DINA_3_0_0[14] , 
         \coreInst/registerFileInst/DINA[14] , 
         \coreInst/registerFileInst/DINA_3_0_0[10] , 
         \coreInst/registerFileInst/DINA[10] , 
         \coreInst/registerFileInst/DINA_3_0_0[9] , 
         \coreInst/registerFileInst/DINA[9] , 
         \coreInst/registerFileInst/DINA_3_0_0[8] , 
         \coreInst/registerFileInst/DINA[8] , 
         \coreInst/registerFileInst/DINA_3_0_0[13] , 
         \coreInst/registerFileInst/DINA[13] , 
         \coreInst/registerFileInst/DINA_3_0_0[12] , 
         \coreInst/registerFileInst/DINA[12] , 
         \coreInst/registerFileInst/DINA_3_0_0[11] , 
         \coreInst/registerFileInst/DINA[11] , 
         \coreInst/fullALUInst/aluInst/N_276 , 
         \coreInst/fullALUInst/ccRegs/CC_INT0_REG[1] , 
         \coreInst/fullALUInst/ccRegs/CC_INT1_REG[1] , 
         \coreInst/fullALUInst/ccRegs/CC_INT0_REG[2] , 
         \coreInst/fullALUInst/ccRegs/CC_INT1_REG[0] , 
         \coreInst/fullALUInst/ccRegs/CC_INT0_REG[0] , 
         \coreInst/fullALUInst/ccRegs/CC_INT1_REG[2] , 
         \coreInst/REGB_DOUT[15] , \coreInst/fullALUInst/ALUB_i7_mux , 
         \coreInst/fullALUInst/muxB/ALUB_m8_2 , 
         \coreInst/fullALUInst/ALUB_DATA_6_sn[2] , 
         \coreInst/fullALUInst/aluInst/N_45_0 , 
         \coreInst/fullALUInst/aluInst/un3_tmp_2_0_1 , 
         \coreInst/REGA_DOUT[15] , \coreInst/fullALUInst/aluInst/N_16 , 
         \coreInst/REGA_DOUT[14] , \coreInst/REGA_DOUT[12] , 
         \coreInst/REGA_DOUT[11] , \coreInst/REGA_DOUT[10] , 
         \coreInst/fullALUInst/aluInst/RESULT_12_0_d[9] , 
         \coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI8T841[9] , 
         \coreInst/fullALUInst/aluInst/N_6_0 , 
         \coreInst/debugger/modeReg/Q_R[0] , 
         \coreInst/debugger/modeReg/Q_PHI0[1] , 
         \coreInst/debugger/modeReg/Q_PHI0[0] , 
         \coreInst/fullALUInst/aluInst/un7_sex_1[0] , 
         \coreInst/fullALUInst/aluInst/N_31_0 , 
         \coreInst/fullALUInst/aluInst/N_47_0 , 
         \coreInst/fullALUInst/aluInst/N_48_0 , 
         \coreInst/fullALUInst/aluInst/OVER_0_6 , 
         \coreInst/fullALUInst/aluInst/OVER_0_7 , 
         \coreInst/fullALUInst/aluInst/N_52_2 , 
         \coreInst/fullALUInst/aluInst/N_21_0 , 
         \coreInst/fullALUInst/aluInst/N_41_0 , 
         \coreInst/fullALUInst/aluInst/N_33_0 , 
         \coreInst/fullALUInst/aluInst/N_177 , 
         \coreInst/fullALUInst/aluInst/N_242 , 
         \coreInst/fullALUInst/aluInst/N_49_0 , 
         \coreInst/fullALUInst/aluInst/N_278 , 
         \coreInst/fullALUInst/aluInst/ZERO_5 , 
         \coreInst/fullALUInst/aluInst/ZERO_2 , 
         \coreInst/fullALUInst/aluInst/N_280 , 
         \coreInst/fullALUInst/aluInst/RESULT_12_0_d[14] , 
         \coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNICLN91[14] , 
         \coreInst/fullALUInst/aluInst/RESULT_12_0_d[11] , 
         \coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI39K91[11] , 
         \coreInst/fullALUInst/aluInst/N_261 , 
         \coreInst/fullALUInst/aluInst/RESULT_11_RNI936H[10] , 
         \coreInst/fullALUInst/aluInst/N_135 , 
         \coreInst/fullALUInst/aluInst/RESULT_11_RNI7TP49[7] , 
         \coreInst/fullALUInst/aluInst/RESULT_12_0_d[12] , 
         \coreInst/fullALUInst/aluInst/N_133 , 
         \coreInst/fullALUInst/aluInst/N_132 , 
         \coreInst/fullALUInst/aluInst/un3_tmp_1[0] , 
         \coreInst/fullALUInst/aluInst/un3_tmp_1[12] , 
         \coreInst/fullALUInst/aluInst/tmp_3[14] , 
         \coreInst/fullALUInst/aluInst/N_184 , 
         \coreInst/fullALUInst/aluInst/N_130 , 
         \coreInst/fullALUInst/aluInst/tmp_3_9[11] , 
         \coreInst/fullALUInst/aluInst/tmp_3_0[13] , 
         \coreInst/fullALUInst/aluInst/N_183 , 
         \coreInst/fullALUInst/aluInst/tmp_3_0[12] , 
         \coreInst/fullALUInst/aluInst/N_182 , 
         \coreInst/fullALUInst/aluInst/N_129 , 
         \coreInst/fullALUInst/aluInst/N_181 , 
         \coreInst/fullALUInst/aluInst/N_179 , 
         \coreInst/fullALUInst/aluInst/N_266 , 
         \coreInst/fullALUInst/aluInst/N_178 , 
         \coreInst/fullALUInst/aluInst/N_166 , 
         \coreInst/fullALUInst/aluInst/un38_RESULT[16] , 
         \coreInst/debugger/addrL/Q_R[6] , 
         \coreInst/fullALUInst/aluInst/un4_OVFL_1 , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_106_0 , 
         \coreInst/fullALUInst/aluInst/un53_RESULT[3] , 
         \coreInst/fullALUInst/aluInst/OVER_i , 
         \coreInst/fullALUInst/aluInst/N_39 , 
         \coreInst/fullALUInst/aluInst/un53_RESULT[6] , 
         \coreInst/fullALUInst/aluInst/un3_tmp_1[8] , 
         \coreInst/fullALUInst/aluInst/tmp_3_7[13] , 
         \coreInst/fullALUInst/aluInst/N_35_0 , 
         \coreInst/fullALUInst/aluInst/N_43 , 
         \coreInst/fullALUInst/aluInst/un53_RESULT[10] , 
         \coreInst/fullALUInst/aluInst/N_48_1 , 
         \coreInst/fullALUInst/aluInst/un53_RESULT[15] , 
         \coreInst/fullALUInst/aluInst/un3_tmp_1[3] , 
         \coreInst/fullALUInst/aluInst/un3_tmp_2[0] , 
         \coreInst/fullALUInst/aluInst/OVER_i_1_a2_9 , 
         \coreInst/fullALUInst/aluInst/OVER_i_1_a2_2 , 
         \coreInst/fullALUInst/aluInst/N_37_0 , 
         \coreInst/fullALUInst/aluInst/N_34 , 
         \coreInst/fullALUInst/aluInst/N_43_1 , 
         \coreInst/fullALUInst/aluInst/N_24_0 , 
         \coreInst/fullALUInst/aluInst/N_40_0 , 
         \coreInst/fullALUInst/aluInst/N_25_0 , 
         \coreInst/fullALUInst/aluInst/un3_tmp_2[8] , 
         \coreInst/fullALUInst/aluInst/N_38_0 , 
         \coreInst/fullALUInst/aluInst/N_54_1 , 
         \coreInst/fullALUInst/aluInst/N_55_1 , 
         \coreInst/fullALUInst/aluInst/N_37_0_0 , 
         \coreInst/fullALUInst/aluInst/N_53_1 , 
         \coreInst/fullALUInst/aluInst/N_36_0 , 
         \coreInst/fullALUInst/aluInst/N_52_1 , 
         \coreInst/fullALUInst/aluInst/N_51_1 , 
         \coreInst/fullALUInst/aluInst/N_34_0 , 
         \coreInst/fullALUInst/aluInst/N_50_1 , 
         \coreInst/fullALUInst/aluInst/un3_tmp_9_0_0 , 
         \coreInst/fullALUInst/aluInst/N_22_0 , 
         \coreInst/fullALUInst/aluInst/N_26_0 , 
         \coreInst/fullALUInst/aluInst/N_43_0 , 
         \coreInst/fullALUInst/aluInst/OVER_0_0 , 
         \coreInst/fullALUInst/aluInst/un3_tmp_0_0 , 
         \coreInst/fullALUInst/aluInst/un3_tmp_1_0_1 , 
         \coreInst/fullALUInst/aluInst/OVER_2_7 , 
         \coreInst/fullALUInst/aluInst/OVER_2_5 , 
         \coreInst/fullALUInst/aluInst/N_46_2 , 
         \coreInst/fullALUInst/aluInst/N_38_2 , 
         \coreInst/fullALUInst/aluInst/N_35_2 , 
         \coreInst/fullALUInst/aluInst/N_43_2 , 
         \coreInst/fullALUInst/aluInst/N_29_2 , 
         \coreInst/fullALUInst/aluInst/N_33_2 , 
         \coreInst/fullALUInst/aluInst/N_50_2 , 
         \coreInst/fullALUInst/aluInst/N_26 , 
         \coreInst/fullALUInst/aluInst/N_42 , 
         \coreInst/fullALUInst/aluInst/N_47 , 
         \coreInst/fullALUInst/aluInst/N_45 , 
         \coreInst/fullALUInst/aluInst/N_36_1 , 
         \coreInst/fullALUInst/aluInst/N_44_2 , 
         \coreInst/fullALUInst/aluInst/un3_tmp_11_0_0 , 
         \coreInst/fullALUInst/aluInst/un3_tmp_7_0_0 , 
         \coreInst/fullALUInst/aluInst/N_5_3 , 
         \coreInst/fullALUInst/aluInst/N_7_2 , 
         \coreInst/fullALUInst/aluInst/N_25_2 , 
         \coreInst/fullALUInst/aluInst/OVER_0_4 , \PIN_DEBUG_DATA_in[4] , 
         \coreInst/debugger/addrL/Q_R[2] , \coreInst/debugger/addrL/Q_R[3] , 
         \coreInst/fullALUInst/aluInst/N_32 , 
         \coreInst/fullALUInst/aluInst/N_28 , 
         \coreInst/fullALUInst/aluInst/N_24 , \coreInst/debugger/addrL/Q_R[0] , 
         \coreInst/debugger/addrL/Q_R[1] , 
         \coreInst/fullALUInst/aluInst/N_15_2 , 
         \coreInst/fullALUInst/aluInst/N_13_2 , 
         \coreInst/fullALUInst/aluInst/N_16_2 , 
         \coreInst/fullALUInst/aluInst/N_11_2 , 
         \coreInst/fullALUInst/aluInst/N_9_2 , 
         \coreInst/fullALUInst/aluInst/N_8_0 , 
         \coreInst/debugger/modeReg/Q_R[2] , 
         \coreInst/debugger/modeReg/Q_R[1] , 
         \coreInst/debugger/modeReg/Q_PHI0[2] , 
         \coreInst/fullALUInst/aluInst/PARITY_2_5 , 
         \coreInst/fullALUInst/aluInst/OVER_i_1_a2_6 , 
         \coreInst/instructionPhaseDecoderInst/N_714 , 
         \coreInst.instructionPhaseDecoderInst.STOPPED_2_i , 
         \coreInst/debugger/addrL/Q_R[5] , \coreInst/debugger/addrL/Q_R[4] , 
         \DEBUG_DOUT[7] , \coreInst/debugger/N_1002 , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[4] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[2] , 
         \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[1] , 
         \coreInst/programCounterInst/INTR0[10] , 
         \coreInst/programCounterInst/INTR0[11] , 
         \coreInst/registerFileInst/ADDRA[2] , 
         \coreInst/registerFileInst/ADDRA[3] , 
         \coreInst/registerFileInst/ADDRA[1] , 
         \coreInst/registerFileInst/ADDRA[0] , 
         \coreInst.debugger.addrH.Q_R[1] , \coreInst.debugger.addrH.Q_R[0] , 
         \coreInst.debugger.addrH.Q_R[7] , \coreInst.debugger.addrH.Q_R[6] , 
         \coreInst.debugger.addrH.Q_R[5] , \coreInst.debugger.addrH.Q_R[4] , 
         \coreInst.debugger.addrH.Q_R[3] , \coreInst.debugger.addrH.Q_R[2] , 
         \mcuResourcesInst.UARTInst.uartTxInst.o_TX_Serial_3_iv_i , 
         \mcuResourcesInst/DIN_ROM[10] , \mcuResourcesInst/DIN_ROM[5] , 
         \mcuResourcesInst/DIN_ROM[6] , \mcuResourcesInst/DIN_ROM[3] , 
         \coreInst/programCounterInst/INTR0[14] , 
         \coreInst/programCounterInst/INTR0[4] , 
         \coreInst/programCounterInst/INTR0[5] , 
         \coreInst/programCounterInst/INTR0[6] , 
         \coreInst/programCounterInst/INTR0[7] , 
         \coreInst/programCounterInst/INTR0[9] , 
         \coreInst/programCounterInst/INTR0[8] , \PIN_DEBUG_DATA_in[6] , 
         \PIN_DEBUG_DATA_in[5] , \PIN_DIN_GPIO_c[10] , \PIN_DIN_GPIO_c[4] , 
         \PIN_DIN_GPIO_c[3] , \PIN_DIN_GPIO_c[5] , \mcuResourcesInst/BE0 , 
         \coreInst/registerFileInst/N_378_i , 
         \coreInst/registerFileInst/ADDRB[1] , 
         \coreInst/registerFileInst/ADDRB[2] , 
         \coreInst/debugger/requestGen/modeReqReg/Q_R[0] , 
         \coreInst/debugger/requestGen/modeReqReg/Q_PHI0[0] , 
         \coreInst/debugger/addrH/PL_PHI0 , \DEBUG_DOUT[0] , \DEBUG_DOUT[6] , 
         \DEBUG_DOUT[1] , \DEBUG_DOUT[5] , \DEBUG_DOUT[2] , \DEBUG_DOUT[4] , 
         N_314_i, \PIN_DEBUG_DATA_in[7] , PIN_STOPPEDN_c, PIN_TXD_c, 
         PIN_COMMITN_c, PIN_EXECUTEN_c, PIN_DECODEN_c, PIN_FETCHN_c, VCCI;

  mcuResourcesInst_UARTInst_uartTxInst_SLICE_0 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_0 ( 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_cry ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_1 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_1 ( 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_16 ), 
    .B0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[15] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_15 ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_14 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_cry ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_2 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_2 ( 
    .B1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[14] ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_14 ), 
    .B0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[13] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_13 ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_12 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_14 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_3 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_3 ( 
    .B1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[12] ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_12 ), 
    .B0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[11] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_11 ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_10 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_12 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_4 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_4 ( 
    .B1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[10] ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_10 ), 
    .B0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[9] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_9 ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_8 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_10 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_5 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_5 ( 
    .B1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[8] ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_8 ), 
    .B0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[7] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_7 ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_6 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_8 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_6 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_6 ( 
    .B1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[6] ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_6 ), 
    .B0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_5 ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[5] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_4 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_6 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_7 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_7 ( 
    .B1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[4] ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_4 ), 
    .B0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[3] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_3 ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_2 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_4 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_8 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_8 ( 
    .B1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[2] ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_2 ), 
    .B0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[1] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_1 ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_0 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_2 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_9 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_9 ( 
    .C1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[0] ), 
    .B1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[0] ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/TX_CLK_DIV_i[0] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_0 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_10 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_10 ( 
    .B0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[15] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_14 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_15 ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_16 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_11 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_11 ( 
    .A1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[14] ), 
    .B0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[13] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_12 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_13 ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_14 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_14 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_12 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_12 ( 
    .B1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[12] ), 
    .A0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[11] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_10 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_11 ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_12 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_12 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_13 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_13 ( 
    .B1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[10] ), 
    .A0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[9] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_8 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_9 ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_10 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_10 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_14 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_14 ( 
    .A1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[8] ), 
    .A0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[7] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_6 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_7 ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_8 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_8 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_15 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_15 ( 
    .B1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[6] ), 
    .B0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[5] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_4 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_5 ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_6 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_6 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_16 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_16 ( 
    .B1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[4] ), 
    .A0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[3] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_2 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_3 ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_4 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_4 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_17 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_17 ( 
    .A1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[2] ), 
    .B0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[1] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_0 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_1 ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_2 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_2 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_18 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_18 ( 
    .A1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[0] ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/TX_CLK_DIV_i[0] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_0 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_19 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_19 ( 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[15] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[15] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_0_RNIBNIL ), 
    .CLK(PIN_CLK_X1_c), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_14 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[15] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[15] ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_20 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_20 ( 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[14] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[13] ), 
    .DI1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[14] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[13] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_0_RNIBNIL ), 
    .CLK(PIN_CLK_X1_c), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_12 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[13] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[13] ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[14] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[14] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_14 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_21 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_21 ( 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[12] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[11] ), 
    .DI1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[12] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[11] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_0_RNIBNIL ), 
    .CLK(PIN_CLK_X1_c), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_10 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[11] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[11] ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[12] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[12] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_12 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_22 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_22 ( 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[10] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[9] ), 
    .DI1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[10] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[9] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_0_RNIBNIL ), 
    .CLK(PIN_CLK_X1_c), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_8 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[9] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[9] ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[10] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[10] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_10 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_23 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_23 ( 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[8] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[7] ), 
    .DI1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[8] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[7] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_0_RNIBNIL ), 
    .CLK(PIN_CLK_X1_c), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_6 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[7] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[7] ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[8] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[8] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_8 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_24 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_24 ( 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[6] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[5] ), 
    .DI1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[6] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[5] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_0_RNIBNIL ), 
    .CLK(PIN_CLK_X1_c), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_4 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[5] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[5] ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[6] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[6] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_6 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_25 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_25 ( 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[4] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[3] ), 
    .DI1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[4] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[3] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_0_RNIBNIL ), 
    .CLK(PIN_CLK_X1_c), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_2 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[3] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[3] ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[4] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[4] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_4 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_26 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_26 ( 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[2] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[1] ), 
    .DI1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[2] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[1] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_0_RNIBNIL ), 
    .CLK(PIN_CLK_X1_c), 
    .FCI(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_0 ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[1] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[1] ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[2] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[2] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_2 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_27 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_27 ( 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[0] ), .A0(RESET_i), 
    .DI1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[0] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_0_RNIBNIL ), 
    .CLK(PIN_CLK_X1_c), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count[0] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[0] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_0 ));
  mcuResourcesInst_UARTInst_SLICE_28 \mcuResourcesInst/UARTInst/SLICE_28 ( 
    .M0(\mcuResourcesInst/UARTInst/TX_ACTIVE ), .CLK(PIN_CLK_X1_c), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_I_51_cry ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_I_51_0_S0 ), 
    .Q0(\mcuResourcesInst/UARTInst/TX_ACTIVE_R ));
  mcuResourcesInst_UARTInst_SLICE_29 \mcuResourcesInst/UARTInst/SLICE_29 ( 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT[17] ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[15] ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_15 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[14] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_16 ), 
    .M1(\DOUT[7] ), .M0(\DOUT[6] ), 
    .CE(\mcuResourcesInst/UARTInst/TX_CLK_DIV_1_sqmuxa ), .CLK(PIN_CLK_X1_c), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_data_tmp[6] ), 
    .Q0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[6] ), 
    .Q1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[7] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_I_51_cry ));
  mcuResourcesInst_UARTInst_SLICE_30 \mcuResourcesInst/UARTInst/SLICE_30 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_14 ), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[12] ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[13] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_13 ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[11] ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[10] ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_12 ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_11 ), 
    .M1(\DOUT[1] ), .M0(N_338_i), 
    .CE(\mcuResourcesInst/UARTInst/TX_CLK_DIV_1_sqmuxa ), .CLK(PIN_CLK_X1_c), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_data_tmp[4] ), 
    .Q0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[13] ), 
    .Q1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[1] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_data_tmp[6] ));
  mcuResourcesInst_UARTInst_SLICE_31 \mcuResourcesInst/UARTInst/SLICE_31 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_10 ), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[9] ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_9 ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[8] ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_7 ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_8 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[6] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[7] ), .M1(N_189_i), 
    .M0(N_270_i), .CE(\mcuResourcesInst/UARTInst/TX_CLK_DIV_1_sqmuxa ), 
    .CLK(PIN_CLK_X1_c), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_data_tmp[2] ), 
    .Q0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[8] ), 
    .Q1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[9] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_data_tmp[4] ));
  mcuResourcesInst_UARTInst_SLICE_32 \mcuResourcesInst/UARTInst/SLICE_32 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[4] ), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_6 ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[5] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_5 ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[3] ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_3 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_4 ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[2] ), 
    .M1(\DOUT[5] ), .M0(\DOUT[4] ), 
    .CE(\mcuResourcesInst/UARTInst/TX_CLK_DIV_1_sqmuxa ), .CLK(PIN_CLK_X1_c), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_data_tmp[0] ), 
    .Q0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[4] ), 
    .Q1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[5] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_data_tmp[2] ));
  mcuResourcesInst_UARTInst_SLICE_33 \mcuResourcesInst/UARTInst/SLICE_33 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[0] ), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_1 ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[1] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_2 ), 
    .M1(\DOUT[3] ), .M0(\DOUT[2] ), 
    .CE(\mcuResourcesInst/UARTInst/TX_CLK_DIV_1_sqmuxa ), .CLK(PIN_CLK_X1_c), 
    .Q0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[2] ), 
    .Q1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[3] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_data_tmp[0] ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_34 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_34 ( 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_16_cry ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_35 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_35 ( 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_16 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[15] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_15 ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_14 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_16_cry ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_36 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_36 ( 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[14] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_14 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_13 ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[13] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_12 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_14 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_37 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_37 ( 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[12] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_12 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[11] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_11 ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_10 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_12 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_38 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_38 ( 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[10] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_10 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[9] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_9 ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_8 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_10 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_39 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_39 ( 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[8] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_8 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[7] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_7 ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_6 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_8 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_40 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_40 ( 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[6] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_6 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[5] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_5 ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_4 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_6 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_41 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_41 ( 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[4] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_4 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[3] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_3 ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_2 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_4 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_42 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_42 ( 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[2] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_2 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_1 ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[1] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_0 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_2 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_43 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_43 ( 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[0] ), 
    .B1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[0] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/RX_CLK_DIV_i[0] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_0 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_44 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_44 ( 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_16 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT[17] ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_45 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_45 ( 
    .A0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[15] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_14 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_15 ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_16 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_16 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_46 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_46 ( 
    .A1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[14] ), 
    .A0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[13] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_12 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_13 ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_14 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_14 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_47 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_47 ( 
    .B1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[12] ), 
    .B0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[11] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_10 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_11 ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_12 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_12 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_48 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_48 ( 
    .A1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[10] ), 
    .A0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[9] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_8 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_9 ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_10 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_10 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_49 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_49 ( 
    .A1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[8] ), 
    .A0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[7] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_6 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_7 ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_8 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_8 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_50 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_50 ( 
    .A1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[6] ), 
    .B0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[5] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_4 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_5 ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_6 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_6 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_51 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_51 ( 
    .B1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[4] ), 
    .A0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[3] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_2 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_3 ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_4 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_4 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_52 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_52 ( 
    .A1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[2] ), 
    .B0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[1] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_0 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_1 ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_2 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_2 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_53 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_53 ( 
    .A1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[0] ), .M0(PIN_RXD_c), 
    .CE(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[6] ), 
    .CLK(PIN_CLK_X1_c), .Q0(\mcuResourcesInst/UARTInst/RX_BYTE[6] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/RX_CLK_DIV_i[0] ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_0 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_54 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_54 ( 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[15] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_14 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_s_15_0_S0 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_55 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_55 ( 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[14] ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[13] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_12 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_13_0_S0 ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_13_0_S1 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_14 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_56 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_56 ( 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[12] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[11] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_10 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_11_0_S0 ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_11_0_S1 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_12 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_57 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_57 ( 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[10] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[9] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_8 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_9_0_S0 ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_9_0_S1 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_10 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_58 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_58 ( 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[8] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[7] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_6 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_7_0_S0 ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_7_0_S1 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_8 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_59 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_59 ( 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[6] ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[5] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_4 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_5_0_S0 ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_5_0_S1 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_6 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_60 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_60 ( 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[4] ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[3] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_2 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_3_0_S0 ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_3_0_S1 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_4 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_61 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_61 ( 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[2] ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[1] ), 
    .FCI(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_0 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_1_0_S0 ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_1_0_S1 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_2 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_62 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_62 ( 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[0] ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_SM_Main_5_i ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_0_0_S1 ), 
    .FCO(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_0 ));
  coreInst_SLICE_63 \coreInst/SLICE_63 ( .A1(\coreInst/PC_A[1] ), 
    .FCO(\coreInst/un1_HERE_cry_0 ));
  coreInst_programCounterInst_SLICE_64 \coreInst/programCounterInst/SLICE_64 
    ( .A1(\coreInst/PC_A[15] ), .B0(\coreInst/PC_A[14] ), 
    .FCI(\coreInst/programCounterInst/un2_HERE_cry_13 ), 
    .F0(\coreInst/HERE[14] ), .F1(\coreInst/HERE[15] ));
  coreInst_programCounterInst_SLICE_65 \coreInst/programCounterInst/SLICE_65 
    ( .B1(\coreInst/PC_A[13] ), .A0(\coreInst/PC_A[12] ), 
    .FCI(\coreInst/programCounterInst/un2_HERE_cry_11 ), 
    .F0(\coreInst/HERE[12] ), .F1(\coreInst/HERE[13] ), 
    .FCO(\coreInst/programCounterInst/un2_HERE_cry_13 ));
  coreInst_programCounterInst_SLICE_66 \coreInst/programCounterInst/SLICE_66 
    ( .A1(\coreInst/PC_A[11] ), .A0(\coreInst/PC_A[10] ), 
    .FCI(\coreInst/programCounterInst/un2_HERE_cry_9 ), 
    .F0(\coreInst/HERE[10] ), .F1(\coreInst/HERE[11] ), 
    .FCO(\coreInst/programCounterInst/un2_HERE_cry_11 ));
  coreInst_programCounterInst_SLICE_67 \coreInst/programCounterInst/SLICE_67 
    ( .B1(\coreInst/PC_A[9] ), .A0(\coreInst/PC_A[8] ), 
    .FCI(\coreInst/programCounterInst/un2_HERE_cry_7 ), 
    .F0(\coreInst/HERE[8] ), .F1(\coreInst/HERE[9] ), 
    .FCO(\coreInst/programCounterInst/un2_HERE_cry_9 ));
  coreInst_programCounterInst_SLICE_68 \coreInst/programCounterInst/SLICE_68 
    ( .A1(\coreInst/PC_A[7] ), .B0(\coreInst/PC_A[6] ), 
    .FCI(\coreInst/programCounterInst/un2_HERE_cry_5 ), 
    .F0(\coreInst/HERE[6] ), .F1(\coreInst/HERE[7] ), 
    .FCO(\coreInst/programCounterInst/un2_HERE_cry_7 ));
  coreInst_programCounterInst_SLICE_69 \coreInst/programCounterInst/SLICE_69 
    ( .A1(\coreInst/PC_A[5] ), .A0(\coreInst/PC_A[4] ), 
    .FCI(\coreInst/programCounterInst/un2_HERE_cry_3 ), 
    .F0(\coreInst/HERE[4] ), .F1(\coreInst/HERE[5] ), 
    .FCO(\coreInst/programCounterInst/un2_HERE_cry_5 ));
  coreInst_programCounterInst_SLICE_70 \coreInst/programCounterInst/SLICE_70 
    ( .B1(\coreInst/PC_A[3] ), .B0(\coreInst/PC_A[2] ), 
    .FCI(\coreInst/programCounterInst/un2_HERE_cry_1 ), 
    .F0(\coreInst/HERE[2] ), .F1(\coreInst/HERE[3] ), 
    .FCO(\coreInst/programCounterInst/un2_HERE_cry_3 ));
  coreInst_programCounterInst_SLICE_71 \coreInst/programCounterInst/SLICE_71 
    ( .A1(\coreInst/PC_A[1] ), 
    .FCO(\coreInst/programCounterInst/un2_HERE_cry_1 ));
  coreInst_programCounterInst_SLICE_72 \coreInst/programCounterInst/SLICE_72 
    ( .C0(\coreInst/programCounterInst/N_481 ), .B0(\CPU_DIN[15] ), 
    .A0(\coreInst/programCounterInst/ARGB[15] ), 
    .DI0(\coreInst/programCounterInst/SUM[15] ), 
    .M1(\coreInst/programCounterInst/SUM[0] ), 
    .CE(\coreInst/programCounterInst/N_290_i ), .CLK(PIN_CLK_X1_c), 
    .FCI(\coreInst/programCounterInst/SUM_cry_14 ), 
    .F0(\coreInst/programCounterInst/SUM[15] ), 
    .Q0(\coreInst/programCounterInst/INTR1[15] ), 
    .Q1(\coreInst/programCounterInst/INTR1[0] ));
  coreInst_programCounterInst_SLICE_73 \coreInst/programCounterInst/SLICE_73 
    ( .C1(\coreInst/programCounterInst/N_481 ), .B1(\CPU_DIN[14] ), 
    .A1(\coreInst/programCounterInst/ARGB[14] ), 
    .C0(\coreInst/programCounterInst/N_481 ), 
    .B0(\coreInst/programCounterInst/ARGB[13] ), .A0(\CPU_DIN[13] ), 
    .DI1(\coreInst/programCounterInst/SUM[14] ), 
    .DI0(\coreInst/programCounterInst/SUM[13] ), 
    .CE(\coreInst/programCounterInst/N_290_i ), .CLK(PIN_CLK_X1_c), 
    .FCI(\coreInst/programCounterInst/SUM_cry_12 ), 
    .F0(\coreInst/programCounterInst/SUM[13] ), 
    .Q0(\coreInst/programCounterInst/INTR1[13] ), 
    .F1(\coreInst/programCounterInst/SUM[14] ), 
    .Q1(\coreInst/programCounterInst/INTR1[14] ), 
    .FCO(\coreInst/programCounterInst/SUM_cry_14 ));
  coreInst_programCounterInst_SLICE_74 \coreInst/programCounterInst/SLICE_74 
    ( .C1(\coreInst/programCounterInst/N_481 ), 
    .B1(\coreInst/programCounterInst/ARGB[12] ), .A1(\CPU_DIN[12] ), 
    .C0(\coreInst/programCounterInst/N_481 ), 
    .B0(\coreInst/programCounterInst/ARGB[11] ), .A0(\CPU_DIN[11] ), 
    .DI1(\coreInst/programCounterInst/SUM[12] ), 
    .DI0(\coreInst/programCounterInst/SUM[11] ), 
    .CE(\coreInst/programCounterInst/N_290_i ), .CLK(PIN_CLK_X1_c), 
    .FCI(\coreInst/programCounterInst/SUM_cry_10 ), 
    .F0(\coreInst/programCounterInst/SUM[11] ), 
    .Q0(\coreInst/programCounterInst/INTR1[11] ), 
    .F1(\coreInst/programCounterInst/SUM[12] ), 
    .Q1(\coreInst/programCounterInst/INTR1[12] ), 
    .FCO(\coreInst/programCounterInst/SUM_cry_12 ));
  coreInst_programCounterInst_SLICE_75 \coreInst/programCounterInst/SLICE_75 
    ( .C1(\coreInst/programCounterInst/N_481 ), 
    .B1(\coreInst/programCounterInst/ARGB[10] ), .A1(\CPU_DIN[10] ), 
    .C0(\coreInst/programCounterInst/N_481 ), .B0(\CPU_DIN[9] ), 
    .A0(\coreInst/programCounterInst/ARGB[9] ), 
    .DI1(\coreInst/programCounterInst/SUM[10] ), 
    .DI0(\coreInst/programCounterInst/SUM[9] ), 
    .CE(\coreInst/programCounterInst/N_290_i ), .CLK(PIN_CLK_X1_c), 
    .FCI(\coreInst/programCounterInst/SUM_cry_8 ), 
    .F0(\coreInst/programCounterInst/SUM[9] ), 
    .Q0(\coreInst/programCounterInst/INTR1[9] ), 
    .F1(\coreInst/programCounterInst/SUM[10] ), 
    .Q1(\coreInst/programCounterInst/INTR1[10] ), 
    .FCO(\coreInst/programCounterInst/SUM_cry_10 ));
  coreInst_programCounterInst_SLICE_76 \coreInst/programCounterInst/SLICE_76 
    ( .C1(\coreInst/programCounterInst/N_481 ), 
    .B1(\coreInst/programCounterInst/ARGB[8] ), .A1(\coreInst/CPU_DIN[8] ), 
    .C0(\coreInst/programCounterInst/N_481 ), 
    .B0(\coreInst/programCounterInst/ARGB[7] ), .A0(\CPU_DIN[7] ), 
    .DI1(\coreInst/programCounterInst/SUM[8] ), 
    .DI0(\coreInst/programCounterInst/SUM[7] ), 
    .CE(\coreInst/programCounterInst/N_290_i ), .CLK(PIN_CLK_X1_c), 
    .FCI(\coreInst/programCounterInst/SUM_cry_6 ), 
    .F0(\coreInst/programCounterInst/SUM[7] ), 
    .Q0(\coreInst/programCounterInst/INTR1[7] ), 
    .F1(\coreInst/programCounterInst/SUM[8] ), 
    .Q1(\coreInst/programCounterInst/INTR1[8] ), 
    .FCO(\coreInst/programCounterInst/SUM_cry_8 ));
  coreInst_programCounterInst_SLICE_77 \coreInst/programCounterInst/SLICE_77 
    ( .C1(\coreInst/programCounterInst/N_481 ), 
    .B1(\coreInst/programCounterInst/ARGB[6] ), .A1(\CPU_DIN[6] ), 
    .C0(\coreInst/programCounterInst/N_481 ), 
    .B0(\coreInst/programCounterInst/ARGB[5] ), .A0(\CPU_DIN[5] ), 
    .DI1(\coreInst/programCounterInst/SUM[6] ), 
    .DI0(\coreInst/programCounterInst/SUM[5] ), 
    .CE(\coreInst/programCounterInst/N_290_i ), .CLK(PIN_CLK_X1_c), 
    .FCI(\coreInst/programCounterInst/SUM_cry_4 ), 
    .F0(\coreInst/programCounterInst/SUM[5] ), 
    .Q0(\coreInst/programCounterInst/INTR1[5] ), 
    .F1(\coreInst/programCounterInst/SUM[6] ), 
    .Q1(\coreInst/programCounterInst/INTR1[6] ), 
    .FCO(\coreInst/programCounterInst/SUM_cry_6 ));
  coreInst_programCounterInst_SLICE_78 \coreInst/programCounterInst/SLICE_78 
    ( .C1(\coreInst/programCounterInst/N_481 ), 
    .B1(\coreInst/programCounterInst/ARGB[4] ), .A1(\CPU_DIN[4] ), 
    .C0(\coreInst/programCounterInst/N_481 ), 
    .B0(\coreInst/programCounterInst/ARGB[3] ), .A0(\CPU_DIN[3] ), 
    .DI1(\coreInst/programCounterInst/SUM[4] ), 
    .DI0(\coreInst/programCounterInst/SUM[3] ), 
    .CE(\coreInst/programCounterInst/N_290_i ), .CLK(PIN_CLK_X1_c), 
    .FCI(\coreInst/programCounterInst/SUM_cry_2 ), 
    .F0(\coreInst/programCounterInst/SUM[3] ), 
    .Q0(\coreInst/programCounterInst/INTR1[3] ), 
    .F1(\coreInst/programCounterInst/SUM[4] ), 
    .Q1(\coreInst/programCounterInst/INTR1[4] ), 
    .FCO(\coreInst/programCounterInst/SUM_cry_4 ));
  coreInst_programCounterInst_SLICE_79 \coreInst/programCounterInst/SLICE_79 
    ( .C1(\coreInst/programCounterInst/N_201 ), 
    .B1(\coreInst/programCounterInst/N_630 ), 
    .A1(\coreInst/programCounterInst/N_631 ), 
    .C0(\coreInst/programCounterInst/ARGA_0_iv_i_a0[1] ), 
    .B0(\coreInst/programCounterInst/ARGA_0_iv_i_0_2[1] ), 
    .A0(\coreInst/programCounterInst/ARGB[1] ), 
    .DI1(\coreInst/programCounterInst/SUM[2] ), 
    .DI0(\coreInst/programCounterInst/SUM[1] ), 
    .CE(\coreInst/programCounterInst/N_290_i ), .CLK(PIN_CLK_X1_c), 
    .FCI(\coreInst/programCounterInst/SUM_cry_0 ), 
    .F0(\coreInst/programCounterInst/SUM[1] ), 
    .Q0(\coreInst/programCounterInst/INTR1[1] ), 
    .F1(\coreInst/programCounterInst/SUM[2] ), 
    .Q1(\coreInst/programCounterInst/INTR1[2] ), 
    .FCO(\coreInst/programCounterInst/SUM_cry_2 ));
  coreInst_programCounterInst_SLICE_80 \coreInst/programCounterInst/SLICE_80 
    ( .C1(\coreInst/programCounterInst/ARGA_i_0_2[0] ), 
    .B1(\coreInst/programCounterInst/SUM ), 
    .A1(\coreInst/programCounterInst/ARGA_i_0_3[0] ), 
    .FCO(\coreInst/programCounterInst/SUM_cry_0 ));
  coreInst_fullALUInst_aluInst_SLICE_81 
    \coreInst/fullALUInst/aluInst/SLICE_81 ( 
    .A0(\coreInst/fullALUInst/aluInst/madd_11[31] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_14_cry_22 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_14[31] ));
  coreInst_fullALUInst_aluInst_SLICE_82 
    \coreInst/fullALUInst/aluInst/SLICE_82 ( 
    .A1(\coreInst/fullALUInst/aluInst/madd_11[30] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_11[29] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_14_cry_20 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_14[29] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_14[30] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_14_cry_22 ));
  coreInst_fullALUInst_aluInst_SLICE_83 
    \coreInst/fullALUInst/aluInst/SLICE_83 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_11[28] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_11[27] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_14_cry_18 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_14[27] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_14[28] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_14_cry_20 ));
  coreInst_fullALUInst_aluInst_SLICE_84 
    \coreInst/fullALUInst/aluInst/SLICE_84 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_11[26] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_11[25] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_14_cry_16 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_14[25] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_14[26] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_14_cry_18 ));
  coreInst_fullALUInst_aluInst_SLICE_85 
    \coreInst/fullALUInst/aluInst/SLICE_85 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_11[24] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_12[24] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_11[23] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_12[23] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_14_cry_14 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_14[23] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_14[24] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_14_cry_16 ));
  coreInst_fullALUInst_aluInst_SLICE_86 
    \coreInst/fullALUInst/aluInst/SLICE_86 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_12[22] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_11[22] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_12[21] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_11[21] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_14_cry_12 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_14[21] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_14[22] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_14_cry_14 ));
  coreInst_fullALUInst_aluInst_SLICE_87 
    \coreInst/fullALUInst/aluInst/SLICE_87 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_12[20] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_11[20] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_11[19] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_12[19] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_14_cry_10 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_14[19] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_14[20] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_14_cry_12 ));
  coreInst_fullALUInst_aluInst_SLICE_88 
    \coreInst/fullALUInst/aluInst/SLICE_88 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_11[18] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_12[18] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_11[17] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_12[17] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_14_cry_8 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_14[17] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_14[18] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_14_cry_10 ));
  coreInst_fullALUInst_aluInst_SLICE_89 
    \coreInst/fullALUInst/aluInst/SLICE_89 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_11[16] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_12[16] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_11[15] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_12[15] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_14_cry_6 ), 
    .F0(\coreInst/madd_14[15] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_14[16] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_14_cry_8 ));
  coreInst_fullALUInst_aluInst_SLICE_90 
    \coreInst/fullALUInst/aluInst/SLICE_90 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_12[14] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_13[14] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_12[13] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_13[13] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_14_cry_4 ), 
    .F0(\coreInst.fullALUInst.aluInst.un21_RESULT[13] ), 
    .F1(\coreInst/un21_RESULT[14] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_14_cry_6 ));
  coreInst_fullALUInst_aluInst_SLICE_91 
    \coreInst/fullALUInst/aluInst/SLICE_91 ( 
    .C1(\coreInst/fullALUInst/aluInst/madd_12[12] ), 
    .B1(\coreInst/fullALUInst/aluInst/madd_10[12] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_13 ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_10[11] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_12[11] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_14_cry_2 ), 
    .F0(\coreInst/un21_RESULT[11] ), .F1(\coreInst/un21_RESULT[12] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_14_cry_4 ));
  coreInst_fullALUInst_aluInst_SLICE_92 
    \coreInst/fullALUInst/aluInst/SLICE_92 ( 
    .C1(\coreInst/fullALUInst/aluInst/madd_12[10] ), 
    .B1(\coreInst/fullALUInst/aluInst/madd_0[10] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_10 ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_12[9] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_2[9] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_14_cry_0 ), 
    .F0(\coreInst/un21_RESULT[9] ), .F1(\coreInst/un21_RESULT[10] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_14_cry_2 ));
  coreInst_fullALUInst_aluInst_SLICE_93 
    \coreInst/fullALUInst/aluInst/SLICE_93 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_14 ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_12[8] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_14_cry_0 ));
  coreInst_fullALUInst_aluInst_SLICE_94 
    \coreInst/fullALUInst/aluInst/SLICE_94 ( 
    .A0(\coreInst/fullALUInst/aluInst/madd_7[31] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_13_cry_22 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_13[31] ));
  coreInst_fullALUInst_aluInst_SLICE_95 
    \coreInst/fullALUInst/aluInst/SLICE_95 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_7[30] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_7[29] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_13_cry_20 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_13[29] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_13[30] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_13_cry_22 ));
  coreInst_fullALUInst_aluInst_SLICE_96 
    \coreInst/fullALUInst/aluInst/SLICE_96 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_7[28] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_10[27] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_6[27] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_13_cry_18 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_13[27] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_13[28] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_13_cry_20 ));
  coreInst_fullALUInst_aluInst_SLICE_97 
    \coreInst/fullALUInst/aluInst/SLICE_97 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_10[26] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_5[26] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_10[25] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_5[25] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_13_cry_16 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_13[25] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_13[26] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_13_cry_18 ));
  coreInst_fullALUInst_aluInst_SLICE_98 
    \coreInst/fullALUInst/aluInst/SLICE_98 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_10[24] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_4[24] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_10[23] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_9[23] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_13_cry_14 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_13[23] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_13[24] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_13_cry_16 ));
  coreInst_fullALUInst_aluInst_SLICE_99 
    \coreInst/fullALUInst/aluInst/SLICE_99 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_9[22] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_10[22] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_9[21] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_10[21] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_13_cry_12 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_13[21] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_13[22] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_13_cry_14 ));
  coreInst_fullALUInst_aluInst_SLICE_100 
    \coreInst/fullALUInst/aluInst/SLICE_100 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_10[20] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_9[20] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_10[19] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_9[19] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_13_cry_10 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_13[19] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_13[20] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_13_cry_12 ));
  coreInst_fullALUInst_aluInst_SLICE_101 
    \coreInst/fullALUInst/aluInst/SLICE_101 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_10[18] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_9[18] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_10[17] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_9[17] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_13_cry_8 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_13[17] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_13[18] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_13_cry_10 ));
  coreInst_fullALUInst_aluInst_SLICE_102 
    \coreInst/fullALUInst/aluInst/SLICE_102 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_9[16] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_10[16] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_10[15] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_9[15] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_13_cry_6 ), 
    .F0(\coreInst/un21_RESULT_s1_i[15] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_13[16] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_13_cry_8 ));
  coreInst_fullALUInst_aluInst_SLICE_103 
    \coreInst/fullALUInst/aluInst/SLICE_103 ( 
    .C1(\coreInst/fullALUInst/aluInst/madd_10[14] ), 
    .B1(\coreInst/fullALUInst/aluInst/madd_0[14] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_11 ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_2[13] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_10[13] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_13_cry_4 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_13[13] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_13[14] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_13_cry_6 ));
  coreInst_fullALUInst_aluInst_SLICE_104 
    \coreInst/fullALUInst/aluInst/SLICE_104 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_10[12] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_13 ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_13_cry_4 ));
  coreInst_fullALUInst_aluInst_SLICE_105 
    \coreInst/fullALUInst/aluInst/SLICE_105 ( 
    .A0(\coreInst/fullALUInst/aluInst/madd_4[23] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_12_cry_18 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_12[23] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_12[24] ));
  coreInst_fullALUInst_aluInst_SLICE_106 
    \coreInst/fullALUInst/aluInst/SLICE_106 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_3[22] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_3[21] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_12_cry_16 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_12[21] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_12[22] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_12_cry_18 ));
  coreInst_fullALUInst_aluInst_SLICE_107 
    \coreInst/fullALUInst/aluInst/SLICE_107 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_2[20] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_8[19] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_2[19] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_12_cry_14 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_12[19] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_12[20] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_12_cry_16 ));
  coreInst_fullALUInst_aluInst_SLICE_108 
    \coreInst/fullALUInst/aluInst/SLICE_108 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_1[18] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_8[18] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_8[17] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_2[17] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_12_cry_12 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_12[17] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_12[18] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_12_cry_14 ));
  coreInst_fullALUInst_aluInst_SLICE_109 
    \coreInst/fullALUInst/aluInst/SLICE_109 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_8[16] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_1[16] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_1[15] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_8[15] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_12_cry_10 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_12[15] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_12[16] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_12_cry_12 ));
  coreInst_fullALUInst_aluInst_SLICE_110 
    \coreInst/fullALUInst/aluInst/SLICE_110 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_8[14] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_9[14] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_9[13] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_8[13] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_12_cry_8 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_12[13] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_12[14] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_12_cry_10 ));
  coreInst_fullALUInst_aluInst_SLICE_111 
    \coreInst/fullALUInst/aluInst/SLICE_111 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_8[12] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_1[12] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_9[11] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_8[11] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_12_cry_6 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_12[11] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_12[12] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_12_cry_8 ));
  coreInst_fullALUInst_aluInst_SLICE_112 
    \coreInst/fullALUInst/aluInst/SLICE_112 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_8[10] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_9[10] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_8[9] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_9[9] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_12_cry_4 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_12[9] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_12[10] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_12_cry_6 ));
  coreInst_fullALUInst_aluInst_SLICE_113 
    \coreInst/fullALUInst/aluInst/SLICE_113 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_1[8] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_8[8] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_9[7] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_8[7] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_12_cry_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT[7] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_12[8] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_12_cry_4 ));
  coreInst_fullALUInst_aluInst_SLICE_114 
    \coreInst/fullALUInst/aluInst/SLICE_114 ( 
    .C1(\coreInst/fullALUInst/aluInst/madd_8[6] ), 
    .B1(\coreInst/fullALUInst/aluInst/madd_9 ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_0[6] ), 
    .C0(\coreInst/fullALUInst/aluInst/madd_8[5] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_12_cry_1_0_RNO ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_12_cry_1_0_RNO_0 ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_12_cry_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT[5] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT[6] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_12_cry_2 ));
  coreInst_fullALUInst_aluInst_SLICE_115 
    \coreInst/fullALUInst/aluInst/SLICE_115 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_12 ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_8[4] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_12_cry_0 ));
  coreInst_fullALUInst_aluInst_SLICE_116 
    \coreInst/fullALUInst/aluInst/SLICE_116 ( 
    .FCI(\coreInst/fullALUInst/aluInst/madd_11_cry_18_cry ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_11[31] ));
  coreInst_fullALUInst_aluInst_SLICE_117 
    \coreInst/fullALUInst/aluInst/SLICE_117 ( 
    .B1(\coreInst/fullALUInst/ALUA_DATA[15] ), .A1(\coreInst/ALUB_DATA[15] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[14] ), .A0(\coreInst/ALUB_DATA[15] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_11_cry_16 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_11[29] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_11[30] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_11_cry_18_cry ));
  coreInst_fullALUInst_aluInst_SLICE_118 
    \coreInst/fullALUInst/aluInst/SLICE_118 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[13] ), .B1(\coreInst/ALUB_DATA[15] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_6[28] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[12] ), .B0(\coreInst/ALUB_DATA[15] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_7[27] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_11_cry_14 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_11[27] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_11[28] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_11_cry_16 ));
  coreInst_fullALUInst_aluInst_SLICE_119 
    \coreInst/fullALUInst/aluInst/SLICE_119 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_7[26] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_6[26] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_7[25] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_6[25] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_11_cry_12 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_11[25] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_11[26] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_11_cry_14 ));
  coreInst_fullALUInst_aluInst_SLICE_120 
    \coreInst/fullALUInst/aluInst/SLICE_120 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_5[24] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_7[24] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_6[23] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_5[23] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_11_cry_10 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_11[23] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_11[24] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_11_cry_12 ));
  coreInst_fullALUInst_aluInst_SLICE_121 
    \coreInst/fullALUInst/aluInst/SLICE_121 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_4[22] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_5[22] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_5[21] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_4[21] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_11_cry_8 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_11[21] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_11[22] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_11_cry_10 ));
  coreInst_fullALUInst_aluInst_SLICE_122 
    \coreInst/fullALUInst/aluInst/SLICE_122 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_3[20] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_4[20] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_3[19] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_4[19] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_11_cry_6 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_11[19] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_11[20] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_11_cry_8 ));
  coreInst_fullALUInst_aluInst_SLICE_123 
    \coreInst/fullALUInst/aluInst/SLICE_123 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_3[18] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_2[18] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_0[17] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_1[17] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_11_cry_4 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_11[17] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_11[18] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_11_cry_6 ));
  coreInst_fullALUInst_aluInst_SLICE_124 
    \coreInst/fullALUInst/aluInst/SLICE_124 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_0[16] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_2[16] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_2[15] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_0[15] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_11_cry_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_11[15] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_11[16] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_11_cry_4 ));
  coreInst_fullALUInst_aluInst_SLICE_125 
    \coreInst/fullALUInst/aluInst/SLICE_125 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_11 ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_0[14] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_11_cry_2 ));
  coreInst_fullALUInst_aluInst_SLICE_126 
    \coreInst/fullALUInst/aluInst/SLICE_126 ( 
    .FCI(\coreInst/fullALUInst/aluInst/madd_5_cry_15_cry ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_5[26] ));
  coreInst_fullALUInst_aluInst_SLICE_127 
    \coreInst/fullALUInst/aluInst/SLICE_127 ( 
    .B1(\coreInst/fullALUInst/ALUA_DATA[11] ), .A1(\coreInst/ALUB_DATA[14] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[10] ), .C0(\coreInst/ALUB_DATA[14] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[11] ), .A0(\coreInst/ALUB_DATA[13] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_5_cry_13 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_5[24] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_5[25] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_5_cry_15_cry ));
  coreInst_fullALUInst_aluInst_SLICE_128 
    \coreInst/fullALUInst/aluInst/SLICE_128 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[10] ), .C1(\coreInst/ALUB_DATA[13] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[11] ), .A1(\coreInst/ALUB_DATA[12] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[10] ), .C0(\coreInst/ALUB_DATA[12] ), 
    .B0(\coreInst/ALUB_DATA[11] ), .A0(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_5_cry_11 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_5[22] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_5[23] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_5_cry_13 ));
  coreInst_fullALUInst_aluInst_SLICE_129 
    \coreInst/fullALUInst/aluInst/SLICE_129 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[10] ), .C1(\coreInst/ALUB_DATA[11] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[11] ), .A1(\coreInst/ALUB_DATA[10] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[10] ), .C0(\coreInst/ALUB_DATA[10] ), 
    .B0(\coreInst/ALUB_DATA[9] ), .A0(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_5_cry_9 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_5[20] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_5[21] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_5_cry_11 ));
  coreInst_fullALUInst_aluInst_SLICE_130 
    \coreInst/fullALUInst/aluInst/SLICE_130 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[10] ), .C1(\coreInst/ALUB_DATA[9] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[11] ), .A1(\coreInst/ALUB_DATA[8] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[10] ), .C0(\coreInst/ALUB_DATA[8] ), 
    .B0(\coreInst/ALUB_DATA[7] ), .A0(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_5_cry_7 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_5[18] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_5[19] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_5_cry_9 ));
  coreInst_fullALUInst_aluInst_SLICE_131 
    \coreInst/fullALUInst/aluInst/SLICE_131 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[10] ), .C1(\coreInst/ALUB_DATA[7] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[11] ), .A1(\coreInst/ALUB_DATA[6] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[11] ), .C0(\coreInst/ALUB_DATA[5] ), 
    .B0(\coreInst/ALUB_DATA[4] ), .A0(\coreInst/fullALUInst/ALUA_DATA[12] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_5_cry_5 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_5[16] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_5[17] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_5_cry_7 ));
  coreInst_fullALUInst_aluInst_SLICE_132 
    \coreInst/fullALUInst/aluInst/SLICE_132 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[10] ), .C1(\coreInst/ALUB_DATA[5] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[11] ), .A1(\coreInst/ALUB_DATA[4] ), 
    .D0(\coreInst/ALUB_DATA[4] ), .C0(\coreInst/fullALUInst/ALUA_DATA[10] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[11] ), .A0(\coreInst/ALUB_DATA[3] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_5_cry_3 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_5[14] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_5[15] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_5_cry_5 ));
  coreInst_fullALUInst_aluInst_SLICE_133 
    \coreInst/fullALUInst/aluInst/SLICE_133 ( .D1(\coreInst/ALUB_DATA[3] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[10] ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .D0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[10] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[11] ), .A0(\coreInst/ALUB_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_5_cry_1 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_5[12] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_5[13] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_5_cry_3 ));
  coreInst_fullALUInst_aluInst_SLICE_134 
    \coreInst/fullALUInst/aluInst/SLICE_134 ( .D1(\coreInst/ALUB_DATA[1] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[10] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[11] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_5_cry_1 ));
  coreInst_fullALUInst_aluInst_SLICE_135 
    \coreInst/fullALUInst/aluInst/SLICE_135 ( 
    .FCI(\coreInst/fullALUInst/aluInst/madd_4_cry_15_cry ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_4[24] ));
  coreInst_fullALUInst_aluInst_SLICE_136 
    \coreInst/fullALUInst/aluInst/SLICE_136 ( 
    .B1(\coreInst/fullALUInst/ALUA_DATA[9] ), .A1(\coreInst/ALUB_DATA[14] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[8] ), .C0(\coreInst/ALUB_DATA[14] ), 
    .B0(\coreInst/ALUB_DATA[13] ), .A0(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_4_cry_13 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_4[22] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_4[23] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_4_cry_15_cry ));
  coreInst_fullALUInst_aluInst_SLICE_137 
    \coreInst/fullALUInst/aluInst/SLICE_137 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[8] ), .C1(\coreInst/ALUB_DATA[13] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[9] ), .A1(\coreInst/ALUB_DATA[12] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[8] ), .C0(\coreInst/ALUB_DATA[12] ), 
    .B0(\coreInst/ALUB_DATA[11] ), .A0(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_4_cry_11 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_4[20] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_4[21] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_4_cry_13 ));
  coreInst_fullALUInst_aluInst_SLICE_138 
    \coreInst/fullALUInst/aluInst/SLICE_138 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[8] ), .C1(\coreInst/ALUB_DATA[11] ), 
    .B1(\coreInst/ALUB_DATA[10] ), .A1(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[8] ), .C0(\coreInst/ALUB_DATA[10] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[9] ), .A0(\coreInst/ALUB_DATA[9] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_4_cry_9 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_4[18] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_4[19] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_4_cry_11 ));
  coreInst_fullALUInst_aluInst_SLICE_139 
    \coreInst/fullALUInst/aluInst/SLICE_139 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[8] ), .C1(\coreInst/ALUB_DATA[9] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[9] ), .A1(\coreInst/ALUB_DATA[8] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[9] ), .C0(\coreInst/ALUB_DATA[7] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[10] ), .A0(\coreInst/ALUB_DATA[6] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_4_cry_7 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_4[16] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_4[17] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_4_cry_9 ));
  coreInst_fullALUInst_aluInst_SLICE_140 
    \coreInst/fullALUInst/aluInst/SLICE_140 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[8] ), .C1(\coreInst/ALUB_DATA[7] ), 
    .B1(\coreInst/ALUB_DATA[6] ), .A1(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[8] ), .C0(\coreInst/ALUB_DATA[6] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[9] ), .A0(\coreInst/ALUB_DATA[5] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_4_cry_5 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_4[14] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_4[15] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_4_cry_7 ));
  coreInst_fullALUInst_aluInst_SLICE_141 
    \coreInst/fullALUInst/aluInst/SLICE_141 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[8] ), .C1(\coreInst/ALUB_DATA[5] ), 
    .B1(\coreInst/ALUB_DATA[4] ), .A1(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .D0(\coreInst/ALUB_DATA[4] ), .C0(\coreInst/fullALUInst/ALUA_DATA[8] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[9] ), .A0(\coreInst/ALUB_DATA[3] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_4_cry_3 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_4[12] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_4[13] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_4_cry_5 ));
  coreInst_fullALUInst_aluInst_SLICE_142 
    \coreInst/fullALUInst/aluInst/SLICE_142 ( .D1(\coreInst/ALUB_DATA[3] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[8] ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .D0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[8] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[9] ), .A0(\coreInst/ALUB_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_4_cry_1 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_4[10] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_4[11] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_4_cry_3 ));
  coreInst_fullALUInst_aluInst_SLICE_143 
    \coreInst/fullALUInst/aluInst/SLICE_143 ( .D1(\coreInst/ALUB_DATA[1] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[8] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[9] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_4_cry_1 ));
  coreInst_fullALUInst_aluInst_SLICE_144 
    \coreInst/fullALUInst/aluInst/SLICE_144 ( 
    .FCI(\coreInst/fullALUInst/aluInst/madd_9_cry_18_cry ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_9[23] ));
  coreInst_fullALUInst_aluInst_SLICE_145 
    \coreInst/fullALUInst/aluInst/SLICE_145 ( .B1(\coreInst/ALUB_DATA[15] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[7] ), .B0(\coreInst/ALUB_DATA[15] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[6] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_9_cry_16 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_9[21] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_9[22] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_9_cry_18_cry ));
  coreInst_fullALUInst_aluInst_SLICE_146 
    \coreInst/fullALUInst/aluInst/SLICE_146 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[5] ), .B1(\coreInst/ALUB_DATA[15] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_6[20] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[4] ), .B0(\coreInst/ALUB_DATA[15] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_7[19] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_9_cry_14 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_9[19] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_9[20] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_9_cry_16 ));
  coreInst_fullALUInst_aluInst_SLICE_147 
    \coreInst/fullALUInst/aluInst/SLICE_147 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_6[18] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_7[18] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_5[17] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_6[17] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_9_cry_12 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_9[17] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_9[18] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_9_cry_14 ));
  coreInst_fullALUInst_aluInst_SLICE_148 
    \coreInst/fullALUInst/aluInst/SLICE_148 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_7[16] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_5[16] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_5[15] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_6[15] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_9_cry_10 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_9[15] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_9[16] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_9_cry_12 ));
  coreInst_fullALUInst_aluInst_SLICE_149 
    \coreInst/fullALUInst/aluInst/SLICE_149 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_5[14] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_4[14] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_3[13] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_4[13] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_9_cry_8 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_9[13] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_9[14] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_9_cry_10 ));
  coreInst_fullALUInst_aluInst_SLICE_150 
    \coreInst/fullALUInst/aluInst/SLICE_150 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_4[12] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_3[12] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_2[11] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_3[11] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_9_cry_6 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_9[11] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_13 ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_9_cry_8 ));
  coreInst_fullALUInst_aluInst_SLICE_151 
    \coreInst/fullALUInst/aluInst/SLICE_151 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_2[10] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_3[10] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_1[9] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_0[9] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_9_cry_4 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_9[9] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_9[10] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_9_cry_6 ));
  coreInst_fullALUInst_aluInst_SLICE_152 
    \coreInst/fullALUInst/aluInst/SLICE_152 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_0[8] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_2[8] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_0[7] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_1[7] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_9_cry_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_9[7] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_14 ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_9_cry_4 ));
  coreInst_fullALUInst_aluInst_SLICE_153 
    \coreInst/fullALUInst/aluInst/SLICE_153 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_0[6] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_9 ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_9_cry_2 ));
  coreInst_fullALUInst_aluInst_SLICE_154 
    \coreInst/fullALUInst/aluInst/SLICE_154 ( .C1(\coreInst/N_134 ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .A1(\coreInst/fullALUInst/N_48 ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[15] ), .A0(\coreInst/ALUB_DATA[15] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_7_cry_15 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_7[30] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_7[31] ));
  coreInst_fullALUInst_aluInst_SLICE_155 
    \coreInst/fullALUInst/aluInst/SLICE_155 ( 
    .B1(\coreInst/fullALUInst/ALUA_DATA[15] ), .A1(\coreInst/ALUB_DATA[14] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[14] ), .C0(\coreInst/ALUB_DATA[14] ), 
    .B0(\coreInst/ALUB_DATA[13] ), .A0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_7_cry_13 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_7[28] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_7[29] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_7_cry_15 ));
  coreInst_fullALUInst_aluInst_SLICE_156 
    \coreInst/fullALUInst/aluInst/SLICE_156 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[14] ), .C1(\coreInst/ALUB_DATA[13] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[15] ), .A1(\coreInst/ALUB_DATA[12] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[14] ), .C0(\coreInst/ALUB_DATA[12] ), 
    .B0(\coreInst/ALUB_DATA[11] ), .A0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_7_cry_11 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_7[26] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_7[27] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_7_cry_13 ));
  coreInst_fullALUInst_aluInst_SLICE_157 
    \coreInst/fullALUInst/aluInst/SLICE_157 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[14] ), .C1(\coreInst/ALUB_DATA[11] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[15] ), .A1(\coreInst/ALUB_DATA[10] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[14] ), .C0(\coreInst/ALUB_DATA[10] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[15] ), .A0(\coreInst/ALUB_DATA[9] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_7_cry_9 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_7[24] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_7[25] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_7_cry_11 ));
  coreInst_fullALUInst_aluInst_SLICE_158 
    \coreInst/fullALUInst/aluInst/SLICE_158 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[14] ), .C1(\coreInst/ALUB_DATA[9] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[15] ), .A1(\coreInst/ALUB_DATA[8] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[14] ), .C0(\coreInst/ALUB_DATA[8] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[15] ), .A0(\coreInst/ALUB_DATA[7] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_7_cry_7 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_7[22] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_7[23] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_7_cry_9 ));
  coreInst_fullALUInst_aluInst_SLICE_159 
    \coreInst/fullALUInst/aluInst/SLICE_159 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[14] ), .C1(\coreInst/ALUB_DATA[7] ), 
    .B1(\coreInst/ALUB_DATA[6] ), .A1(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[14] ), .C0(\coreInst/ALUB_DATA[6] ), 
    .B0(\coreInst/ALUB_DATA[5] ), .A0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_7_cry_5 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_7[20] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_7[21] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_7_cry_7 ));
  coreInst_fullALUInst_aluInst_SLICE_160 
    \coreInst/fullALUInst/aluInst/SLICE_160 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[14] ), .C1(\coreInst/ALUB_DATA[5] ), 
    .B1(\coreInst/ALUB_DATA[4] ), .A1(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .D0(\coreInst/ALUB_DATA[4] ), .C0(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[15] ), .A0(\coreInst/ALUB_DATA[3] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_7_cry_3 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_7[18] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_7[19] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_7_cry_5 ));
  coreInst_fullALUInst_aluInst_SLICE_161 
    \coreInst/fullALUInst/aluInst/SLICE_161 ( .D1(\coreInst/ALUB_DATA[3] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .C0(\coreInst/fullALUInst/aluInst/madd_7_cry_2_0_RNO ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[15] ), .A0(\coreInst/ALUB_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_7_cry_1 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_7[16] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_7[17] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_7_cry_3 ));
  coreInst_fullALUInst_aluInst_SLICE_162 
    \coreInst/fullALUInst/aluInst/SLICE_162 ( .D1(\coreInst/ALUB_DATA[1] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[15] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_7_cry_1 ));
  coreInst_fullALUInst_aluInst_SLICE_163 
    \coreInst/fullALUInst/aluInst/SLICE_163 ( 
    .FCI(\coreInst/fullALUInst/aluInst/madd_10_cry_18_cry ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_10[27] ));
  coreInst_fullALUInst_aluInst_SLICE_164 
    \coreInst/fullALUInst/aluInst/SLICE_164 ( 
    .B1(\coreInst/fullALUInst/ALUA_DATA[11] ), .A1(\coreInst/ALUB_DATA[15] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[10] ), .A0(\coreInst/ALUB_DATA[15] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_10_cry_16 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_10[25] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_10[26] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_10_cry_18_cry ));
  coreInst_fullALUInst_aluInst_SLICE_165 
    \coreInst/fullALUInst/aluInst/SLICE_165 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[9] ), .B1(\coreInst/ALUB_DATA[15] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_6[24] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[8] ), .B0(\coreInst/ALUB_DATA[15] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_7[23] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_10_cry_14 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_10[23] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_10[24] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_10_cry_16 ));
  coreInst_fullALUInst_aluInst_SLICE_166 
    \coreInst/fullALUInst/aluInst/SLICE_166 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_7[22] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_6[22] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_7[21] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_6[21] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_10_cry_12 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_10[21] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_10[22] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_10_cry_14 ));
  coreInst_fullALUInst_aluInst_SLICE_167 
    \coreInst/fullALUInst/aluInst/SLICE_167 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_5[20] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_7[20] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_6[19] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_5[19] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_10_cry_10 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_10[19] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_10[20] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_10_cry_12 ));
  coreInst_fullALUInst_aluInst_SLICE_168 
    \coreInst/fullALUInst/aluInst/SLICE_168 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_5[18] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_4[18] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_3[17] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_4[17] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_10_cry_8 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_10[17] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_10[18] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_10_cry_10 ));
  coreInst_fullALUInst_aluInst_SLICE_169 
    \coreInst/fullALUInst/aluInst/SLICE_169 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_4[16] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_3[16] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_4[15] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_3[15] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_10_cry_6 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_10[15] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_10[16] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_10_cry_8 ));
  coreInst_fullALUInst_aluInst_SLICE_170 
    \coreInst/fullALUInst/aluInst/SLICE_170 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_2[14] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_3[14] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_0[13] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_1[13] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_10_cry_4 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_10[13] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_10[14] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_10_cry_6 ));
  coreInst_fullALUInst_aluInst_SLICE_171 
    \coreInst/fullALUInst/aluInst/SLICE_171 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_0[12] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_2[12] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_0[11] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_1[11] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_10_cry_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_10[11] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_10[12] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_10_cry_4 ));
  coreInst_fullALUInst_aluInst_SLICE_172 
    \coreInst/fullALUInst/aluInst/SLICE_172 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_0[10] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_10 ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_10_cry_2 ));
  coreInst_fullALUInst_aluInst_SLICE_173 
    \coreInst/fullALUInst/aluInst/SLICE_173 ( 
    .FCI(\coreInst/fullALUInst/aluInst/madd_6_cry_15_cry ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_6[28] ));
  coreInst_fullALUInst_aluInst_SLICE_174 
    \coreInst/fullALUInst/aluInst/SLICE_174 ( .B1(\coreInst/ALUB_DATA[14] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[12] ), .C0(\coreInst/ALUB_DATA[14] ), 
    .B0(\coreInst/ALUB_DATA[13] ), .A0(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_6_cry_13 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_6[26] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_6[27] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_6_cry_15_cry ));
  coreInst_fullALUInst_aluInst_SLICE_175 
    \coreInst/fullALUInst/aluInst/SLICE_175 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[12] ), .C1(\coreInst/ALUB_DATA[13] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[13] ), .A1(\coreInst/ALUB_DATA[12] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[12] ), .C0(\coreInst/ALUB_DATA[12] ), 
    .B0(\coreInst/ALUB_DATA[11] ), .A0(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_6_cry_11 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_6[24] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_6[25] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_6_cry_13 ));
  coreInst_fullALUInst_aluInst_SLICE_176 
    \coreInst/fullALUInst/aluInst/SLICE_176 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[12] ), .C1(\coreInst/ALUB_DATA[11] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[13] ), .A1(\coreInst/ALUB_DATA[10] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[12] ), .C0(\coreInst/ALUB_DATA[10] ), 
    .B0(\coreInst/ALUB_DATA[9] ), .A0(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_6_cry_9 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_6[22] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_6[23] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_6_cry_11 ));
  coreInst_fullALUInst_aluInst_SLICE_177 
    \coreInst/fullALUInst/aluInst/SLICE_177 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[12] ), .C1(\coreInst/ALUB_DATA[9] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[13] ), .A1(\coreInst/ALUB_DATA[8] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[12] ), .C0(\coreInst/ALUB_DATA[8] ), 
    .B0(\coreInst/ALUB_DATA[7] ), .A0(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_6_cry_7 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_6[20] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_6[21] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_6_cry_9 ));
  coreInst_fullALUInst_aluInst_SLICE_178 
    \coreInst/fullALUInst/aluInst/SLICE_178 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[12] ), .C1(\coreInst/ALUB_DATA[7] ), 
    .B1(\coreInst/ALUB_DATA[6] ), .A1(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[12] ), .C0(\coreInst/ALUB_DATA[6] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[13] ), .A0(\coreInst/ALUB_DATA[5] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_6_cry_5 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_6[18] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_6[19] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_6_cry_7 ));
  coreInst_fullALUInst_aluInst_SLICE_179 
    \coreInst/fullALUInst/aluInst/SLICE_179 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[12] ), .C1(\coreInst/ALUB_DATA[5] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[13] ), .A1(\coreInst/ALUB_DATA[4] ), 
    .D0(\coreInst/ALUB_DATA[3] ), .C0(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .B0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_6_cry_3 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_6[16] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_6[17] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_6_cry_5 ));
  coreInst_fullALUInst_aluInst_SLICE_180 
    \coreInst/fullALUInst/aluInst/SLICE_180 ( .D1(\coreInst/ALUB_DATA[3] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[12] ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .D0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[12] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[13] ), .A0(\coreInst/ALUB_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_6_cry_1 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_6[14] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_6[15] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_6_cry_3 ));
  coreInst_fullALUInst_aluInst_SLICE_181 
    \coreInst/fullALUInst/aluInst/SLICE_181 ( .D1(\coreInst/ALUB_DATA[1] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[12] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[13] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_6_cry_1 ));
  coreInst_fullALUInst_aluInst_SLICE_182 
    \coreInst/fullALUInst/aluInst/SLICE_182 ( 
    .FCI(\coreInst/fullALUInst/aluInst/madd_3_cry_15_cry ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_3[22] ));
  coreInst_fullALUInst_aluInst_SLICE_183 
    \coreInst/fullALUInst/aluInst/SLICE_183 ( 
    .B1(\coreInst/fullALUInst/ALUA_DATA[7] ), .A1(\coreInst/ALUB_DATA[14] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[6] ), .C0(\coreInst/ALUB_DATA[14] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[7] ), .A0(\coreInst/ALUB_DATA[13] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_3_cry_13 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_3[20] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_3[21] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_3_cry_15_cry ));
  coreInst_fullALUInst_aluInst_SLICE_184 
    \coreInst/fullALUInst/aluInst/SLICE_184 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[6] ), .C1(\coreInst/ALUB_DATA[13] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[7] ), .A1(\coreInst/ALUB_DATA[12] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[6] ), .C0(\coreInst/ALUB_DATA[12] ), 
    .B0(\coreInst/ALUB_DATA[11] ), .A0(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_3_cry_11 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_3[18] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_3[19] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_3_cry_13 ));
  coreInst_fullALUInst_aluInst_SLICE_185 
    \coreInst/fullALUInst/aluInst/SLICE_185 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[6] ), .C1(\coreInst/ALUB_DATA[11] ), 
    .B1(\coreInst/ALUB_DATA[10] ), .A1(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[7] ), .C0(\coreInst/ALUB_DATA[9] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[8] ), .A0(\coreInst/ALUB_DATA[8] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_3_cry_9 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_3[16] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_3[17] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_3_cry_11 ));
  coreInst_fullALUInst_aluInst_SLICE_186 
    \coreInst/fullALUInst/aluInst/SLICE_186 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[6] ), .C1(\coreInst/ALUB_DATA[9] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[7] ), .A1(\coreInst/ALUB_DATA[8] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[6] ), .C0(\coreInst/ALUB_DATA[8] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[7] ), .A0(\coreInst/ALUB_DATA[7] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_3_cry_7 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_3[14] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_3[15] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_3_cry_9 ));
  coreInst_fullALUInst_aluInst_SLICE_187 
    \coreInst/fullALUInst/aluInst/SLICE_187 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[6] ), .C1(\coreInst/ALUB_DATA[7] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[7] ), .A1(\coreInst/ALUB_DATA[6] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[6] ), .C0(\coreInst/ALUB_DATA[6] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[7] ), .A0(\coreInst/ALUB_DATA[5] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_3_cry_5 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_3[12] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_3[13] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_3_cry_7 ));
  coreInst_fullALUInst_aluInst_SLICE_188 
    \coreInst/fullALUInst/aluInst/SLICE_188 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[6] ), .C1(\coreInst/ALUB_DATA[5] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[7] ), .A1(\coreInst/ALUB_DATA[4] ), 
    .D0(\coreInst/ALUB_DATA[4] ), .C0(\coreInst/fullALUInst/ALUA_DATA[6] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[7] ), .A0(\coreInst/ALUB_DATA[3] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_3_cry_3 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_3[10] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_3[11] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_3_cry_5 ));
  coreInst_fullALUInst_aluInst_SLICE_189 
    \coreInst/fullALUInst/aluInst/SLICE_189 ( .D1(\coreInst/ALUB_DATA[3] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[6] ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .D0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[6] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[7] ), .A0(\coreInst/ALUB_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_3_cry_1 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_3[8] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_3[9] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_3_cry_3 ));
  coreInst_fullALUInst_aluInst_SLICE_190 
    \coreInst/fullALUInst/aluInst/SLICE_190 ( .D1(\coreInst/ALUB_DATA[1] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[6] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_3_cry_1 ));
  coreInst_fullALUInst_aluInst_SLICE_191 
    \coreInst/fullALUInst/aluInst/SLICE_191 ( 
    .FCI(\coreInst/fullALUInst/aluInst/madd_2_cry_15_cry ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_2[20] ));
  coreInst_fullALUInst_aluInst_SLICE_192 
    \coreInst/fullALUInst/aluInst/SLICE_192 ( 
    .B1(\coreInst/fullALUInst/ALUA_DATA[5] ), .A1(\coreInst/ALUB_DATA[14] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[4] ), .C0(\coreInst/ALUB_DATA[14] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[5] ), .A0(\coreInst/ALUB_DATA[13] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_2_cry_13 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_2[18] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_2[19] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_2_cry_15_cry ));
  coreInst_fullALUInst_aluInst_SLICE_193 
    \coreInst/fullALUInst/aluInst/SLICE_193 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[4] ), .C1(\coreInst/ALUB_DATA[13] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[5] ), .A1(\coreInst/ALUB_DATA[12] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[5] ), .C0(\coreInst/ALUB_DATA[11] ), 
    .B0(\coreInst/ALUB_DATA[10] ), .A0(\coreInst/fullALUInst/ALUA_DATA[6] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_2_cry_11 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_2[16] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_2[17] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_2_cry_13 ));
  coreInst_fullALUInst_aluInst_SLICE_194 
    \coreInst/fullALUInst/aluInst/SLICE_194 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[4] ), .C1(\coreInst/ALUB_DATA[11] ), 
    .B1(\coreInst/ALUB_DATA[10] ), .A1(\coreInst/fullALUInst/ALUA_DATA[5] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[4] ), .C0(\coreInst/ALUB_DATA[10] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[5] ), .A0(\coreInst/ALUB_DATA[9] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_2_cry_9 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_2[14] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_2[15] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_2_cry_11 ));
  coreInst_fullALUInst_aluInst_SLICE_195 
    \coreInst/fullALUInst/aluInst/SLICE_195 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[4] ), .C1(\coreInst/ALUB_DATA[9] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[5] ), .A1(\coreInst/ALUB_DATA[8] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[4] ), .C0(\coreInst/ALUB_DATA[8] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[5] ), .A0(\coreInst/ALUB_DATA[7] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_2_cry_7 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_2[12] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_2[13] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_2_cry_9 ));
  coreInst_fullALUInst_aluInst_SLICE_196 
    \coreInst/fullALUInst/aluInst/SLICE_196 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[4] ), .C1(\coreInst/ALUB_DATA[7] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[5] ), .A1(\coreInst/ALUB_DATA[6] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[4] ), .C0(\coreInst/ALUB_DATA[6] ), 
    .B0(\coreInst/ALUB_DATA[5] ), .A0(\coreInst/fullALUInst/ALUA_DATA[5] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_2_cry_5 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_2[10] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_2[11] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_2_cry_7 ));
  coreInst_fullALUInst_aluInst_SLICE_197 
    \coreInst/fullALUInst/aluInst/SLICE_197 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[4] ), .C1(\coreInst/ALUB_DATA[5] ), 
    .B1(\coreInst/ALUB_DATA[4] ), .A1(\coreInst/fullALUInst/ALUA_DATA[5] ), 
    .D0(\coreInst/ALUB_DATA[4] ), .C0(\coreInst/fullALUInst/ALUA_DATA[4] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[5] ), .A0(\coreInst/ALUB_DATA[3] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_2_cry_3 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_2[8] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_2[9] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_2_cry_5 ));
  coreInst_fullALUInst_aluInst_SLICE_198 
    \coreInst/fullALUInst/aluInst/SLICE_198 ( .D1(\coreInst/ALUB_DATA[3] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[4] ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[5] ), 
    .D0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[4] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[5] ), .A0(\coreInst/ALUB_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_2_cry_1 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_2[6] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_2[7] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_2_cry_3 ));
  coreInst_fullALUInst_aluInst_SLICE_199 
    \coreInst/fullALUInst/aluInst/SLICE_199 ( .D1(\coreInst/ALUB_DATA[1] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[4] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[5] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_2_cry_1 ));
  coreInst_fullALUInst_aluInst_SLICE_200 
    \coreInst/fullALUInst/aluInst/SLICE_200 ( 
    .B0(\coreInst/fullALUInst/ALUA_DATA[2] ), .A0(\coreInst/ALUB_DATA[14] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_0_cry_14 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_0[16] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_0[17] ));
  coreInst_fullALUInst_aluInst_SLICE_201 
    \coreInst/fullALUInst/aluInst/SLICE_201 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[1] ), .A1(\coreInst/ALUB_DATA[14] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[0] ), .C0(\coreInst/ALUB_DATA[14] ), 
    .B0(\coreInst/ALUB_DATA[13] ), .A0(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_0_cry_12 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_0[14] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_0[15] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_0_cry_14 ));
  coreInst_fullALUInst_aluInst_SLICE_202 
    \coreInst/fullALUInst/aluInst/SLICE_202 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[0] ), .C1(\coreInst/ALUB_DATA[13] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[1] ), .A1(\coreInst/ALUB_DATA[12] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[0] ), .C0(\coreInst/ALUB_DATA[12] ), 
    .B0(\coreInst/ALUB_DATA[11] ), .A0(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_0_cry_10 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_0[12] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_0[13] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_0_cry_12 ));
  coreInst_fullALUInst_aluInst_SLICE_203 
    \coreInst/fullALUInst/aluInst/SLICE_203 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[0] ), .C1(\coreInst/ALUB_DATA[11] ), 
    .B1(\coreInst/ALUB_DATA[10] ), .A1(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[0] ), .C0(\coreInst/ALUB_DATA[10] ), 
    .B0(\coreInst/ALUB_DATA[9] ), .A0(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_0_cry_8 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_0[10] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_0[11] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_0_cry_10 ));
  coreInst_fullALUInst_aluInst_SLICE_204 
    \coreInst/fullALUInst/aluInst/SLICE_204 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[0] ), .C1(\coreInst/ALUB_DATA[9] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[1] ), .A1(\coreInst/ALUB_DATA[8] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[0] ), .C0(\coreInst/ALUB_DATA[8] ), 
    .B0(\coreInst/ALUB_DATA[7] ), .A0(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_0_cry_6 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_0[8] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_0[9] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_0_cry_8 ));
  coreInst_fullALUInst_aluInst_SLICE_205 
    \coreInst/fullALUInst/aluInst/SLICE_205 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[0] ), .C1(\coreInst/ALUB_DATA[7] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[1] ), .A1(\coreInst/ALUB_DATA[6] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[0] ), .C0(\coreInst/ALUB_DATA[6] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[1] ), .A0(\coreInst/ALUB_DATA[5] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_0_cry_4 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_0[6] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_0[7] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_0_cry_6 ));
  coreInst_fullALUInst_aluInst_SLICE_206 
    \coreInst/fullALUInst/aluInst/SLICE_206 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[0] ), .C1(\coreInst/ALUB_DATA[5] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[1] ), .A1(\coreInst/ALUB_DATA[4] ), 
    .D0(\coreInst/ALUB_DATA[4] ), .C0(\coreInst/fullALUInst/ALUA_DATA[0] ), 
    .B0(\coreInst/ALUB_DATA[3] ), .A0(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_0_cry_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_0[4] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_0[5] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_0_cry_4 ));
  coreInst_fullALUInst_aluInst_SLICE_207 
    \coreInst/fullALUInst/aluInst/SLICE_207 ( .D1(\coreInst/ALUB_DATA[3] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[0] ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .D0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[0] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[1] ), .A0(\coreInst/ALUB_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_0_cry_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_0[2] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_0[3] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_0_cry_2 ));
  coreInst_fullALUInst_aluInst_SLICE_208 
    \coreInst/fullALUInst/aluInst/SLICE_208 ( .D1(\coreInst/ALUB_DATA[1] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[0] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[1] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_0_cry_0 ));
  coreInst_fullALUInst_aluInst_SLICE_209 
    \coreInst/fullALUInst/aluInst/SLICE_209 ( 
    .FCI(\coreInst/fullALUInst/aluInst/madd_8_cry_16_cry ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_8[19] ));
  coreInst_fullALUInst_aluInst_SLICE_210 
    \coreInst/fullALUInst/aluInst/SLICE_210 ( .B1(\coreInst/ALUB_DATA[15] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[2] ), .B0(\coreInst/ALUB_DATA[15] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_7[17] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_8_cry_14 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_8[17] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_8[18] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_8_cry_16_cry ));
  coreInst_fullALUInst_aluInst_SLICE_211 
    \coreInst/fullALUInst/aluInst/SLICE_211 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .B1(\coreInst/fullALUInst/aluInst/madd_6[16] ), 
    .A1(\coreInst/ALUB_DATA[15] ), 
    .C0(\coreInst/fullALUInst/aluInst/madd_7[15] ), 
    .B0(\coreInst/ALUB_DATA[15] ), .A0(\coreInst/fullALUInst/ALUA_DATA[0] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_8_cry_12 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_8[15] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_8[16] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_8_cry_14 ));
  coreInst_fullALUInst_aluInst_SLICE_212 
    \coreInst/fullALUInst/aluInst/SLICE_212 ( .C1(\coreInst/ALUB_DATA[0] ), 
    .B1(\coreInst/fullALUInst/aluInst/madd_6[14] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .C0(\coreInst/fullALUInst/aluInst/madd_8_cry_11_0_RNO_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_8_cry_11_0_RNO ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_5[13] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_8_cry_10 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_8[13] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_8[14] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_8_cry_12 ));
  coreInst_fullALUInst_aluInst_SLICE_213 
    \coreInst/fullALUInst/aluInst/SLICE_213 ( .C1(\coreInst/ALUB_DATA[0] ), 
    .B1(\coreInst/fullALUInst/aluInst/madd_5[12] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[12] ), 
    .C0(\coreInst/fullALUInst/aluInst/madd_8_cry_9_0_RNO_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_8_cry_9_0_RNO ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_4[11] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_8_cry_8 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_8[11] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_8[12] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_8_cry_10 ));
  coreInst_fullALUInst_aluInst_SLICE_214 
    \coreInst/fullALUInst/aluInst/SLICE_214 ( .C1(\coreInst/ALUB_DATA[0] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[10] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_4[10] ), 
    .C0(\coreInst/fullALUInst/aluInst/madd_8_cry_7_0_RNO_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_3[9] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_8_cry_7_0_RNO ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_8_cry_6 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_8[9] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_8[10] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_8_cry_8 ));
  coreInst_fullALUInst_aluInst_SLICE_215 
    \coreInst/fullALUInst/aluInst/SLICE_215 ( .C1(\coreInst/ALUB_DATA[0] ), 
    .B1(\coreInst/fullALUInst/aluInst/madd_3[8] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[8] ), 
    .C0(\coreInst/fullALUInst/aluInst/madd_8_cry_5_0_RNO_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_8_cry_5_0_RNO ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_2[7] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_8_cry_4 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_8[7] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_8[8] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_8_cry_6 ));
  coreInst_fullALUInst_aluInst_SLICE_216 
    \coreInst/fullALUInst/aluInst/SLICE_216 ( .C1(\coreInst/ALUB_DATA[0] ), 
    .B1(\coreInst/fullALUInst/aluInst/madd_2[6] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[6] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_1[5] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_0[5] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_8_cry_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_8[5] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_8[6] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_8_cry_4 ));
  coreInst_fullALUInst_aluInst_SLICE_217 
    \coreInst/fullALUInst/aluInst/SLICE_217 ( .C1(\coreInst/ALUB_DATA[0] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[4] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_0[4] ), 
    .C0(\coreInst/fullALUInst/aluInst/madd_0[3] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_8_cry_1_0_RNO_0 ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_8_cry_1_0_RNO ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_8_cry_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT[3] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_8[4] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_8_cry_2 ));
  coreInst_fullALUInst_aluInst_SLICE_218 
    \coreInst/fullALUInst/aluInst/SLICE_218 ( 
    .C1(\coreInst/fullALUInst/aluInst/madd_0[2] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[2] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_8_cry_0 ));
  coreInst_fullALUInst_aluInst_SLICE_219 
    \coreInst/fullALUInst/aluInst/SLICE_219 ( 
    .FCI(\coreInst/fullALUInst/aluInst/madd_1_cry_15_cry ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_1[18] ));
  coreInst_fullALUInst_aluInst_SLICE_220 
    \coreInst/fullALUInst/aluInst/SLICE_220 ( 
    .B1(\coreInst/fullALUInst/ALUA_DATA[3] ), .A1(\coreInst/ALUB_DATA[14] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[3] ), .C0(\coreInst/ALUB_DATA[13] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[4] ), .A0(\coreInst/ALUB_DATA[12] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_1_cry_13 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_1[16] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_1[17] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_1_cry_15_cry ));
  coreInst_fullALUInst_aluInst_SLICE_221 
    \coreInst/fullALUInst/aluInst/SLICE_221 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[2] ), .C1(\coreInst/ALUB_DATA[13] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[3] ), .A1(\coreInst/ALUB_DATA[12] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[2] ), .C0(\coreInst/ALUB_DATA[12] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[3] ), .A0(\coreInst/ALUB_DATA[11] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_1_cry_11 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_11 ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_1[15] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_1_cry_13 ));
  coreInst_fullALUInst_aluInst_SLICE_222 
    \coreInst/fullALUInst/aluInst/SLICE_222 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[2] ), .C1(\coreInst/ALUB_DATA[11] ), 
    .B1(\coreInst/ALUB_DATA[10] ), .A1(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[2] ), .C0(\coreInst/ALUB_DATA[10] ), 
    .B0(\coreInst/ALUB_DATA[9] ), .A0(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_1_cry_9 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_1[12] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_1[13] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_1_cry_11 ));
  coreInst_fullALUInst_aluInst_SLICE_223 
    \coreInst/fullALUInst/aluInst/SLICE_223 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[2] ), .C1(\coreInst/ALUB_DATA[9] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[3] ), .A1(\coreInst/ALUB_DATA[8] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[2] ), .C0(\coreInst/ALUB_DATA[8] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[3] ), .A0(\coreInst/ALUB_DATA[7] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_1_cry_7 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_10 ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_1[11] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_1_cry_9 ));
  coreInst_fullALUInst_aluInst_SLICE_224 
    \coreInst/fullALUInst/aluInst/SLICE_224 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[2] ), .C1(\coreInst/ALUB_DATA[7] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[3] ), .A1(\coreInst/ALUB_DATA[6] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[2] ), .C0(\coreInst/ALUB_DATA[6] ), 
    .B0(\coreInst/ALUB_DATA[5] ), .A0(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_1_cry_5 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_1[8] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_1[9] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_1_cry_7 ));
  coreInst_fullALUInst_aluInst_SLICE_225 
    \coreInst/fullALUInst/aluInst/SLICE_225 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[2] ), .C1(\coreInst/ALUB_DATA[5] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[3] ), .A1(\coreInst/ALUB_DATA[4] ), 
    .D0(\coreInst/ALUB_DATA[4] ), .C0(\coreInst/fullALUInst/ALUA_DATA[2] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[3] ), .A0(\coreInst/ALUB_DATA[3] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_1_cry_3 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_9 ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_1[7] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_1_cry_5 ));
  coreInst_fullALUInst_aluInst_SLICE_226 
    \coreInst/fullALUInst/aluInst/SLICE_226 ( .D1(\coreInst/ALUB_DATA[3] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[2] ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .D0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[2] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[3] ), .A0(\coreInst/ALUB_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_1_cry_1 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_12 ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_1[5] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_1_cry_3 ));
  coreInst_fullALUInst_aluInst_SLICE_227 
    \coreInst/fullALUInst/aluInst/SLICE_227 ( .D1(\coreInst/ALUB_DATA[1] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[2] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[3] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_1_cry_1 ));
  coreInst_fullALUInst_aluInst_SLICE_228 
    \coreInst/fullALUInst/aluInst/SLICE_228 ( .C1(N_459), 
    .B1(\coreInst/fullALUInst/N_48 ), .A1(\coreInst/N_497 ), 
    .B0(\coreInst/fullALUInst/N_48 ), .A0(\coreInst/N_134 ), 
    .FCI(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_14 ), 
    .F0(\coreInst/fullALUInst/aluInst/un47_RESULT[15] ), 
    .F1(\coreInst/fullALUInst/aluInst/un47_RESULT[16] ));
  coreInst_fullALUInst_aluInst_SLICE_229 
    \coreInst/fullALUInst/aluInst/SLICE_229 ( .B1(\coreInst/N_134 ), 
    .A1(\coreInst/fullALUInst/N_47 ), .B0(\coreInst/N_134 ), 
    .A0(\coreInst/fullALUInst/N_46 ), 
    .FCI(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_12 ), 
    .F0(\coreInst/fullALUInst/aluInst/un47_RESULT[13] ), 
    .F1(\coreInst/fullALUInst/aluInst/un47_RESULT[14] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_14 ));
  coreInst_fullALUInst_aluInst_SLICE_230 
    \coreInst/fullALUInst/aluInst/SLICE_230 ( .B1(\coreInst/N_134 ), 
    .A1(\coreInst/fullALUInst/N_45 ), .B0(\coreInst/N_134 ), 
    .A0(\coreInst/fullALUInst/N_44 ), 
    .FCI(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_10 ), 
    .F0(\coreInst/fullALUInst/aluInst/un47_RESULT[11] ), 
    .F1(\coreInst/fullALUInst/aluInst/un47_RESULT[12] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_12 ));
  coreInst_fullALUInst_aluInst_SLICE_231 
    \coreInst/fullALUInst/aluInst/SLICE_231 ( .B1(\coreInst/ALUB_DATA_0[8] ), 
    .A1(\coreInst/ALUB_DATA_0[10] ), .B0(\coreInst/ALUB_DATA_0[8] ), 
    .A0(\coreInst/ALUB_DATA_0[9] ), 
    .FCI(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_8 ), 
    .F0(\coreInst/fullALUInst/aluInst/un47_RESULT[9] ), 
    .F1(\coreInst/fullALUInst/aluInst/un47_RESULT[10] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_10 ));
  coreInst_fullALUInst_aluInst_SLICE_232 
    \coreInst/fullALUInst/aluInst/SLICE_232 ( .B1(\coreInst/ALUB_DATA_0[8] ), 
    .A1(\coreInst/ALUB_DATA_0_0[8] ), .B0(\coreInst/N_134 ), 
    .A0(\coreInst/N_40 ), 
    .FCI(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_6 ), 
    .F0(\coreInst/fullALUInst/aluInst/un47_RESULT[7] ), 
    .F1(\coreInst/fullALUInst/aluInst/un47_RESULT[8] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_8 ));
  coreInst_fullALUInst_aluInst_SLICE_233 
    \coreInst/fullALUInst/aluInst/SLICE_233 ( .B1(\coreInst/N_134 ), 
    .A1(\coreInst/N_39 ), .B0(\coreInst/N_38 ), .A0(\coreInst/N_134 ), 
    .FCI(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_4 ), 
    .F0(\coreInst/fullALUInst/aluInst/un47_RESULT[5] ), 
    .F1(\coreInst/fullALUInst/aluInst/un47_RESULT[6] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_6 ));
  coreInst_fullALUInst_aluInst_SLICE_234 
    \coreInst/fullALUInst/aluInst/SLICE_234 ( .B1(\coreInst/ALUB_DATA[4] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_255_i ), .A0(\coreInst/ALUB_DATA[3] ), 
    .FCI(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .F1(\coreInst/fullALUInst/aluInst/un47_RESULT[4] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_4 ));
  coreInst_fullALUInst_aluInst_SLICE_235 
    \coreInst/fullALUInst/aluInst/SLICE_235 ( 
    .A1(\coreInst/fullALUInst/ALUB_DATA[2] ), .A0(\coreInst/ALUB_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .F1(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_2 ));
  coreInst_fullALUInst_aluInst_SLICE_236 
    \coreInst/fullALUInst/aluInst/SLICE_236 ( 
    .B1(\coreInst/fullALUInst/aluInst/N_226_i ), .A1(\coreInst/ALUB_DATA[0] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un47_RESULT_cry_0 ));
  coreInst_fullALUInst_aluInst_SLICE_237 
    \coreInst/fullALUInst/aluInst/SLICE_237 ( .C1(\coreInst/N_134 ), 
    .B1(\coreInst/fullALUInst/N_48 ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .B0(\coreInst/fullALUInst/N_48 ), .A0(\coreInst/N_134 ), 
    .FCI(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_14 ), 
    .F0(\coreInst/fullALUInst/aluInst/un1_RESULT[15] ), 
    .F1(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_15_0_S1 ));
  coreInst_fullALUInst_aluInst_SLICE_238 
    \coreInst/fullALUInst/aluInst/SLICE_238 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .B1(\coreInst/fullALUInst/N_47 ), .A1(\coreInst/N_134 ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[13] ), .B0(\coreInst/N_134 ), 
    .A0(\coreInst/fullALUInst/N_46 ), 
    .FCI(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_12 ), 
    .F0(\coreInst/fullALUInst/aluInst/un1_RESULT[13] ), 
    .F1(\coreInst/fullALUInst/aluInst/un1_RESULT[14] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_14 ));
  coreInst_fullALUInst_aluInst_SLICE_239 
    \coreInst/fullALUInst/aluInst/SLICE_239 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[12] ), .B1(\coreInst/N_134 ), 
    .A1(\coreInst/fullALUInst/N_45 ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .B0(\coreInst/fullALUInst/N_44 ), .A0(\coreInst/N_134 ), 
    .FCI(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_10 ), 
    .F0(\coreInst/fullALUInst/aluInst/un1_RESULT[11] ), 
    .F1(\coreInst/fullALUInst/aluInst/un1_RESULT[12] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_12 ));
  coreInst_fullALUInst_aluInst_SLICE_240 
    \coreInst/fullALUInst/aluInst/SLICE_240 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[10] ), .B1(\coreInst/ALUB_DATA_0[10] ), 
    .A1(\coreInst/ALUB_DATA_0[8] ), .C0(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .B0(\coreInst/ALUB_DATA_0[9] ), .A0(\coreInst/ALUB_DATA_0[8] ), 
    .FCI(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_8 ), 
    .F0(\coreInst/fullALUInst/aluInst/un1_RESULT[9] ), 
    .F1(\coreInst/fullALUInst/aluInst/un1_RESULT[10] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_10 ));
  coreInst_fullALUInst_aluInst_SLICE_241 
    \coreInst/fullALUInst/aluInst/SLICE_241 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[8] ), .B1(\coreInst/ALUB_DATA_0_0[8] ), 
    .A1(\coreInst/ALUB_DATA_0[8] ), .C0(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .B0(\coreInst/N_40 ), .A0(\coreInst/N_134 ), 
    .FCI(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_6 ), 
    .F0(\coreInst/fullALUInst/aluInst/un1_RESULT[7] ), 
    .F1(\coreInst/fullALUInst/aluInst/un1_RESULT[8] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_8 ));
  coreInst_fullALUInst_aluInst_SLICE_242 
    \coreInst/fullALUInst/aluInst/SLICE_242 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[6] ), .B1(\coreInst/N_39 ), 
    .A1(\coreInst/N_134 ), .C0(\coreInst/fullALUInst/ALUA_DATA[5] ), 
    .B0(\coreInst/N_38 ), .A0(\coreInst/N_134 ), 
    .FCI(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_4 ), 
    .F0(\coreInst/fullALUInst/aluInst/un1_RESULT[5] ), 
    .F1(\coreInst/fullALUInst/aluInst/un1_RESULT[6] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_6 ));
  coreInst_fullALUInst_aluInst_SLICE_243 
    \coreInst/fullALUInst/aluInst/SLICE_243 ( .B1(\coreInst/ALUB_DATA[4] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[4] ), .B0(\coreInst/ALUB_DATA[3] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .FCI(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/un1_RESULT[3] ), 
    .F1(\coreInst/fullALUInst/aluInst/un1_RESULT[4] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_4 ));
  coreInst_fullALUInst_aluInst_SLICE_244 
    \coreInst/fullALUInst/aluInst/SLICE_244 ( 
    .B1(\coreInst/fullALUInst/ALUA_DATA[2] ), 
    .A1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[1] ), .A0(\coreInst/ALUB_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/un1_RESULT[1] ), 
    .F1(\coreInst/fullALUInst/aluInst/un1_RESULT[2] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_2 ));
  coreInst_fullALUInst_aluInst_SLICE_245 
    \coreInst/fullALUInst/aluInst/SLICE_245 ( .B1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[0] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_0 ));
  coreInst_fullALUInst_aluInst_SLICE_246 
    \coreInst/fullALUInst/aluInst/SLICE_246 ( .C1(\coreInst/N_134 ), 
    .B1(\coreInst/fullALUInst/N_48 ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .B0(\coreInst/fullALUInst/N_48 ), .A0(\coreInst/N_134 ), 
    .FCI(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_14 ), 
    .F0(\coreInst/fullALUInst/aluInst/un10_RESULT[15] ), 
    .F1(\coreInst/fullALUInst/aluInst/un10_RESULT[16] ));
  coreInst_fullALUInst_aluInst_SLICE_247 
    \coreInst/fullALUInst/aluInst/SLICE_247 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .B1(\coreInst/fullALUInst/N_47 ), .A1(\coreInst/N_134 ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .B0(\coreInst/fullALUInst/N_46 ), .A0(\coreInst/N_134 ), 
    .FCI(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_12 ), 
    .F0(\coreInst/fullALUInst/aluInst/un10_RESULT[13] ), 
    .F1(\coreInst/fullALUInst/aluInst/un10_RESULT[14] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_14 ));
  coreInst_fullALUInst_aluInst_SLICE_248 
    \coreInst/fullALUInst/aluInst/SLICE_248 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[12] ), .B1(\coreInst/N_134 ), 
    .A1(\coreInst/fullALUInst/N_45 ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .B0(\coreInst/fullALUInst/N_44 ), .A0(\coreInst/N_134 ), 
    .FCI(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_10 ), 
    .F0(\coreInst/fullALUInst/aluInst/un10_RESULT[11] ), 
    .F1(\coreInst/fullALUInst/aluInst/un10_RESULT[12] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_12 ));
  coreInst_fullALUInst_aluInst_SLICE_249 
    \coreInst/fullALUInst/aluInst/SLICE_249 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[10] ), .B1(\coreInst/ALUB_DATA_0[10] ), 
    .A1(\coreInst/ALUB_DATA_0[8] ), .C0(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .B0(\coreInst/ALUB_DATA_0[8] ), .A0(\coreInst/ALUB_DATA_0[9] ), 
    .FCI(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_8 ), 
    .F0(\coreInst/fullALUInst/aluInst/un10_RESULT[9] ), 
    .F1(\coreInst/fullALUInst/aluInst/un10_RESULT[10] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_10 ));
  coreInst_fullALUInst_aluInst_SLICE_250 
    \coreInst/fullALUInst/aluInst/SLICE_250 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[8] ), .B1(\coreInst/ALUB_DATA_0[8] ), 
    .A1(\coreInst/ALUB_DATA_0_0[8] ), .C0(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .B0(\coreInst/N_134 ), .A0(\coreInst/N_40 ), 
    .FCI(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_6 ), 
    .F0(\coreInst/fullALUInst/aluInst/un10_RESULT[7] ), 
    .F1(\coreInst/fullALUInst/aluInst/un10_RESULT[8] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_8 ));
  coreInst_fullALUInst_aluInst_SLICE_251 
    \coreInst/fullALUInst/aluInst/SLICE_251 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[6] ), .B1(\coreInst/N_134 ), 
    .A1(\coreInst/N_39 ), .C0(\coreInst/fullALUInst/ALUA_DATA[5] ), 
    .B0(\coreInst/N_134 ), .A0(\coreInst/N_38 ), 
    .FCI(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_4 ), 
    .F0(\coreInst/fullALUInst/aluInst/un10_RESULT[5] ), 
    .F1(\coreInst/fullALUInst/aluInst/un10_RESULT[6] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_6 ));
  coreInst_fullALUInst_aluInst_SLICE_252 
    \coreInst/fullALUInst/aluInst/SLICE_252 ( .B1(\coreInst/ALUB_DATA[4] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[4] ), .B0(\coreInst/ALUB_DATA[3] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .FCI(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/un10_RESULT[3] ), 
    .F1(\coreInst/fullALUInst/aluInst/un10_RESULT[4] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_4 ));
  coreInst_fullALUInst_aluInst_SLICE_253 
    \coreInst/fullALUInst/aluInst/SLICE_253 ( 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[2] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[1] ), .A0(\coreInst/ALUB_DATA[1] ), 
    .FCI(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/un10_RESULT[1] ), 
    .F1(\coreInst/fullALUInst/aluInst/un10_RESULT[2] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_2 ));
  coreInst_fullALUInst_aluInst_SLICE_254 
    \coreInst/fullALUInst/aluInst/SLICE_254 ( .B1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[0] ), 
    .FCO(\coreInst/fullALUInst/aluInst/un10_RESULT_cry_0 ));
  coreInst_fullALUInst_aluInst_SLICE_255 
    \coreInst/fullALUInst/aluInst/SLICE_255 ( 
    .B0(\coreInst/fullALUInst/aluInst/madd_14[31] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_13[31] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_15_s0 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[31] ));
  coreInst_fullALUInst_aluInst_SLICE_256 
    \coreInst/fullALUInst/aluInst/SLICE_256 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_13[30] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_14[30] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_13[29] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_14[29] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_13_s0 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[29] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[30] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_15_s0 ));
  coreInst_fullALUInst_aluInst_SLICE_257 
    \coreInst/fullALUInst/aluInst/SLICE_257 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_14[28] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_13[28] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_13[27] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_14[27] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_11_s0 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[27] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[28] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_13_s0 ));
  coreInst_fullALUInst_aluInst_SLICE_258 
    \coreInst/fullALUInst/aluInst/SLICE_258 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_14[26] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_13[26] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_14[25] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_13[25] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_9_s0 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[25] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[26] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_11_s0 ));
  coreInst_fullALUInst_aluInst_SLICE_259 
    \coreInst/fullALUInst/aluInst/SLICE_259 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_13[24] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_14[24] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_14[23] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_13[23] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_7_s0 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[23] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[24] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_9_s0 ));
  coreInst_fullALUInst_aluInst_SLICE_260 
    \coreInst/fullALUInst/aluInst/SLICE_260 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_14[22] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_13[22] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_13[21] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_14[21] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_5_s0 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[21] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[22] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_7_s0 ));
  coreInst_fullALUInst_aluInst_SLICE_261 
    \coreInst/fullALUInst/aluInst/SLICE_261 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_13[20] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_14[20] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_13[19] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_14[19] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_3_s0 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[19] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[20] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_5_s0 ));
  coreInst_fullALUInst_aluInst_SLICE_262 
    \coreInst/fullALUInst/aluInst/SLICE_262 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_14[18] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_13[18] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_14[17] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_13[17] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_1_s0 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[17] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[18] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_3_s0 ));
  coreInst_fullALUInst_aluInst_SLICE_263 
    \coreInst/fullALUInst/aluInst/SLICE_263 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_14[16] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_13[16] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_1_s0 ));
  coreInst_fullALUInst_aluInst_SLICE_264 
    \coreInst/fullALUInst/aluInst/SLICE_264 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_14[31] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_13[31] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_13[30] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_14[30] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_14_s1 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[30] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[31] ));
  coreInst_fullALUInst_aluInst_SLICE_265 
    \coreInst/fullALUInst/aluInst/SLICE_265 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_13[29] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_14[29] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_13[28] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_14[28] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_12_s1 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[28] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[29] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_14_s1 ));
  coreInst_fullALUInst_aluInst_SLICE_266 
    \coreInst/fullALUInst/aluInst/SLICE_266 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_13[27] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_14[27] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_13[26] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_14[26] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_10_s1 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[26] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[27] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_12_s1 ));
  coreInst_fullALUInst_aluInst_SLICE_267 
    \coreInst/fullALUInst/aluInst/SLICE_267 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_13[25] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_14[25] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_14[24] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_13[24] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_8_s1 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[24] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[25] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_10_s1 ));
  coreInst_fullALUInst_aluInst_SLICE_268 
    \coreInst/fullALUInst/aluInst/SLICE_268 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_14[23] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_13[23] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_13[22] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_14[22] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_6_s1 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[22] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[23] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_8_s1 ));
  coreInst_fullALUInst_aluInst_SLICE_269 
    \coreInst/fullALUInst/aluInst/SLICE_269 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_13[21] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_14[21] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_14[20] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_13[20] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_4_s1 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[20] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[21] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_6_s1 ));
  coreInst_fullALUInst_aluInst_SLICE_270 
    \coreInst/fullALUInst/aluInst/SLICE_270 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_13[19] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_14[19] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_13[18] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_14[18] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_2_s1 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[18] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[19] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_4_s1 ));
  coreInst_fullALUInst_aluInst_SLICE_271 
    \coreInst/fullALUInst/aluInst/SLICE_271 ( 
    .B1(\coreInst/fullALUInst/aluInst/madd_14[17] ), 
    .A1(\coreInst/fullALUInst/aluInst/madd_13[17] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_14[16] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_13[16] ), 
    .FCI(\coreInst/fullALUInst/aluInst/madd_cry_0_s1 ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[16] ), 
    .F1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[17] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_2_s1 ));
  coreInst_fullALUInst_aluInst_SLICE_272 
    \coreInst/fullALUInst/aluInst/SLICE_272 ( 
    .A1(\coreInst/un21_RESULT_s1_i[15] ), 
    .FCO(\coreInst/fullALUInst/aluInst/madd_cry_0_s1 ));
  coreInst_debugger_addrH_SLICE_273 \coreInst/debugger/addrH/SLICE_273 ( 
    .C0(\coreInst/DEBUG_ADDR_OUT[15] ), .B0(\coreInst/debugger/addrH/PL_i ), 
    .A0(\coreInst/debugger/addrH/Q_PHI0[7] ), 
    .DI0(\coreInst/debugger/addrH/Q_s[7] ), .CE(\coreInst/debugger/addrH/Qe ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .FCI(\coreInst/debugger/addrH/Q_cry[6] ), 
    .F0(\coreInst/debugger/addrH/Q_s[7] ), .Q0(\coreInst/DEBUG_ADDR_OUT[15] ));
  coreInst_debugger_addrH_SLICE_274 \coreInst/debugger/addrH/SLICE_274 ( 
    .C1(\coreInst/DEBUG_ADDR_OUT[14] ), .B1(\coreInst/debugger/addrH/PL_i ), 
    .A1(\coreInst/debugger/addrH/Q_PHI0[6] ), 
    .C0(\coreInst/DEBUG_ADDR_OUT[13] ), .B0(\coreInst/debugger/addrH/PL_i ), 
    .A0(\coreInst/debugger/addrH/Q_PHI0[5] ), 
    .DI1(\coreInst/debugger/addrH/Q_s[6] ), 
    .DI0(\coreInst/debugger/addrH/Q_s[5] ), .CE(\coreInst/debugger/addrH/Qe ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .FCI(\coreInst/debugger/addrH/Q_cry[4] ), 
    .F0(\coreInst/debugger/addrH/Q_s[5] ), .Q0(\coreInst/DEBUG_ADDR_OUT[13] ), 
    .F1(\coreInst/debugger/addrH/Q_s[6] ), .Q1(\coreInst/DEBUG_ADDR_OUT[14] ), 
    .FCO(\coreInst/debugger/addrH/Q_cry[6] ));
  coreInst_debugger_addrH_SLICE_275 \coreInst/debugger/addrH/SLICE_275 ( 
    .C1(\coreInst/DEBUG_ADDR_OUT[12] ), .B1(\coreInst/debugger/addrH/PL_i ), 
    .A1(\coreInst/debugger/addrH/Q_PHI0[4] ), 
    .C0(\coreInst/DEBUG_ADDR_OUT[11] ), .B0(\coreInst/debugger/addrH/PL_i ), 
    .A0(\coreInst/debugger/addrH/Q_PHI0[3] ), 
    .DI1(\coreInst/debugger/addrH/Q_s[4] ), 
    .DI0(\coreInst/debugger/addrH/Q_s[3] ), .CE(\coreInst/debugger/addrH/Qe ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .FCI(\coreInst/debugger/addrH/Q_cry[2] ), 
    .F0(\coreInst/debugger/addrH/Q_s[3] ), .Q0(\coreInst/DEBUG_ADDR_OUT[11] ), 
    .F1(\coreInst/debugger/addrH/Q_s[4] ), .Q1(\coreInst/DEBUG_ADDR_OUT[12] ), 
    .FCO(\coreInst/debugger/addrH/Q_cry[4] ));
  coreInst_debugger_addrH_SLICE_276 \coreInst/debugger/addrH/SLICE_276 ( 
    .C1(\coreInst/DEBUG_ADDR_OUT[10] ), .B1(\coreInst/debugger/addrH/PL_i ), 
    .A1(\coreInst/debugger/addrH/Q_PHI0[2] ), 
    .C0(\coreInst/DEBUG_ADDR_OUT[9] ), .B0(\coreInst/debugger/addrH/PL_i ), 
    .A0(\coreInst/debugger/addrH/Q_PHI0[1] ), 
    .DI1(\coreInst/debugger/addrH/Q_s[2] ), 
    .DI0(\coreInst/debugger/addrH/Q_s[1] ), .CE(\coreInst/debugger/addrH/Qe ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .FCI(\coreInst/debugger/addrH/Q_cry[0] ), 
    .F0(\coreInst/debugger/addrH/Q_s[1] ), .Q0(\coreInst/DEBUG_ADDR_OUT[9] ), 
    .F1(\coreInst/debugger/addrH/Q_s[2] ), .Q1(\coreInst/DEBUG_ADDR_OUT[10] ), 
    .FCO(\coreInst/debugger/addrH/Q_cry[2] ));
  coreInst_debugger_addrH_SLICE_277 \coreInst/debugger/addrH/SLICE_277 ( 
    .C1(\coreInst/DEBUG_ADDR_OUT[8] ), .B1(\coreInst/debugger/addrH/PL_i ), 
    .A1(\coreInst/debugger/addrH/Q_PHI0[0] ), 
    .B0(\coreInst/debugger/addrH/PL_i ), 
    .DI1(\coreInst/debugger/addrH/Q_s[0] ), .CE(\coreInst/debugger/addrH/Qe ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F1(\coreInst/debugger/addrH/Q_s[0] ), .Q1(\coreInst/DEBUG_ADDR_OUT[8] ), 
    .FCO(\coreInst/debugger/addrH/Q_cry[0] ));
  coreInst_debugger_addrL_SLICE_278 \coreInst/debugger/addrL/SLICE_278 ( 
    .C1(\coreInst/DEBUG_ADDR_OUT[7] ), 
    .B1(\coreInst/debugger/addrL/Q_PHI0[6] ), 
    .A1(\coreInst/debugger/addrL/PL_i ), .C0(\coreInst/DEBUG_ADDR_OUT[6] ), 
    .B0(\coreInst/debugger/addrL/Q_PHI0[5] ), 
    .A0(\coreInst/debugger/addrL/PL_i ), 
    .DI1(\coreInst/debugger/addrL/Q_s[6] ), 
    .DI0(\coreInst/debugger/addrL/Q_s[5] ), .CE(\coreInst/debugger/addrL/Qe ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .FCI(\coreInst/debugger/addrL/Q_cry[4] ), 
    .F0(\coreInst/debugger/addrL/Q_s[5] ), .Q0(\coreInst/DEBUG_ADDR_OUT[6] ), 
    .F1(\coreInst/debugger/addrL/Q_s[6] ), .Q1(\coreInst/DEBUG_ADDR_OUT[7] ));
  coreInst_debugger_addrL_SLICE_279 \coreInst/debugger/addrL/SLICE_279 ( 
    .C1(\coreInst/DEBUG_ADDR_OUT[5] ), .B1(\coreInst/debugger/addrL/PL_i ), 
    .A1(\coreInst/debugger/addrL/Q_PHI0[4] ), 
    .C0(\coreInst/DEBUG_ADDR_OUT[4] ), .B0(\coreInst/debugger/addrL/PL_i ), 
    .A0(\coreInst/debugger/addrL/Q_PHI0[3] ), 
    .DI1(\coreInst/debugger/addrL/Q_s[4] ), 
    .DI0(\coreInst/debugger/addrL/Q_s[3] ), .CE(\coreInst/debugger/addrL/Qe ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .FCI(\coreInst/debugger/addrL/Q_cry[2] ), 
    .F0(\coreInst/debugger/addrL/Q_s[3] ), .Q0(\coreInst/DEBUG_ADDR_OUT[4] ), 
    .F1(\coreInst/debugger/addrL/Q_s[4] ), .Q1(\coreInst/DEBUG_ADDR_OUT[5] ), 
    .FCO(\coreInst/debugger/addrL/Q_cry[4] ));
  coreInst_debugger_addrL_SLICE_280 \coreInst/debugger/addrL/SLICE_280 ( 
    .C1(\coreInst/DEBUG_ADDR_OUT[3] ), 
    .B1(\coreInst/debugger/addrL/Q_PHI0[2] ), 
    .A1(\coreInst/debugger/addrL/PL_i ), .C0(\coreInst/DEBUG_ADDR_OUT[2] ), 
    .B0(\coreInst/debugger/addrL/Q_PHI0[1] ), 
    .A0(\coreInst/debugger/addrL/PL_i ), 
    .DI1(\coreInst/debugger/addrL/Q_s[2] ), 
    .DI0(\coreInst/debugger/addrL/Q_s[1] ), .CE(\coreInst/debugger/addrL/Qe ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .FCI(\coreInst/debugger/addrL/Q_cry[0] ), 
    .F0(\coreInst/debugger/addrL/Q_s[1] ), .Q0(\coreInst/DEBUG_ADDR_OUT[2] ), 
    .F1(\coreInst/debugger/addrL/Q_s[2] ), .Q1(\coreInst/DEBUG_ADDR_OUT[3] ), 
    .FCO(\coreInst/debugger/addrL/Q_cry[2] ));
  coreInst_debugger_addrL_SLICE_281 \coreInst/debugger/addrL/SLICE_281 ( 
    .C1(\coreInst/DEBUG_ADDR_OUT[1] ), .B1(\coreInst/debugger/addrL/PL_i ), 
    .A1(\coreInst/debugger/addrL/Q_PHI0[0] ), 
    .B0(\coreInst/debugger/addrL/PL_i ), 
    .DI1(\coreInst/debugger/addrL/Q_s[0] ), .CE(\coreInst/debugger/addrL/Qe ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F1(\coreInst/debugger/addrL/Q_s[0] ), .Q1(\coreInst/DEBUG_ADDR_OUT[1] ), 
    .FCO(\coreInst/debugger/addrL/Q_cry[0] ));
  coreInst_SLICE_282 \coreInst/SLICE_282 ( .A1(\coreInst/HERE[15] ), 
    .B0(\coreInst/HERE[14] ), .FCI(\coreInst/un1_HERE_cry_12 ), 
    .F0(\coreInst/un1_HERE_cry_13_0_S0 ), .F1(\coreInst/un1_HERE_cry_13_0_S1 ));
  coreInst_SLICE_283 \coreInst/SLICE_283 ( .A1(\coreInst/HERE[13] ), 
    .A0(\coreInst/HERE[12] ), .FCI(\coreInst/un1_HERE_cry_10 ), 
    .F0(\coreInst/un1_HERE_cry_11_0_S0 ), .F1(\coreInst/un1_HERE_cry_11_0_S1 ), 
    .FCO(\coreInst/un1_HERE_cry_12 ));
  coreInst_SLICE_284 \coreInst/SLICE_284 ( .A1(\coreInst/HERE[11] ), 
    .A0(\coreInst/HERE[10] ), .FCI(\coreInst/un1_HERE_cry_8 ), 
    .F0(\coreInst/un1_HERE_cry_9_0_S0 ), .F1(\coreInst/un1_HERE_cry_9_0_S1 ), 
    .FCO(\coreInst/un1_HERE_cry_10 ));
  coreInst_SLICE_285 \coreInst/SLICE_285 ( .A1(\coreInst/HERE[9] ), 
    .A0(\coreInst/HERE[8] ), .FCI(\coreInst/un1_HERE_cry_6 ), 
    .F0(\coreInst/un1_HERE_cry_7_0_S0 ), .F1(\coreInst/un1_HERE_cry_7_0_S1 ), 
    .FCO(\coreInst/un1_HERE_cry_8 ));
  coreInst_SLICE_286 \coreInst/SLICE_286 ( .A1(\coreInst/HERE[7] ), 
    .A0(\coreInst/HERE[6] ), .FCI(\coreInst/un1_HERE_cry_4 ), 
    .F0(\coreInst/un1_HERE[6] ), .F1(\coreInst/un1_HERE[7] ), 
    .FCO(\coreInst/un1_HERE_cry_6 ));
  coreInst_SLICE_287 \coreInst/SLICE_287 ( .A1(\coreInst/HERE[5] ), 
    .A0(\coreInst/HERE[4] ), .FCI(\coreInst/un1_HERE_cry_2 ), 
    .F0(\coreInst/un1_HERE[4] ), .F1(\coreInst/un1_HERE[5] ), 
    .FCO(\coreInst/un1_HERE_cry_4 ));
  coreInst_SLICE_288 \coreInst/SLICE_288 ( .A1(\coreInst/HERE[3] ), 
    .B0(\coreInst/HERE[2] ), .FCI(\coreInst/un1_HERE_cry_0 ), 
    .F0(\coreInst/un1_HERE[2] ), .F1(\coreInst/un1_HERE[3] ), 
    .FCO(\coreInst/un1_HERE_cry_2 ));
  mcuResourcesInst_interruptMaskRegisterInst_SLICE_289 
    \mcuResourcesInst/interruptMaskRegisterInst/SLICE_289 ( 
    .D0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[6] ), 
    .C0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[7] ), 
    .B0(\mcuResourcesInst/interruptMaskRegisterInst/N_2 ), 
    .A0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[5] ), 
    .DI0(\mcuResourcesInst/interruptMaskRegisterInst/un24_PRI_i ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/interruptMaskRegisterInst/un24_PRI_i ), .Q0(INT1));
  coreInst_SLICE_290 \coreInst/SLICE_290 ( .B1(\coreInst/EXECUTE ), 
    .A1(\coreInst/COMMIT ), .D0(\coreInst/BUS_SEQX[0] ), 
    .C0(\coreInst/DECODE ), .B0(\coreInst/BUS_SEQX[1] ), 
    .A0(\coreInst/COMMIT ), 
    .DI0(\coreInst/busControllerInst/sequencer/un1_DECODE_i ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/busControllerInst/sequencer/un1_DECODE_i ), .Q0(PIN_RDN_c), 
    .F1(\coreInst/generalGroupDecoderInst/EIX6 ));
  coreInst_busControllerInst_sequencer_SLICE_291 
    \coreInst/busControllerInst/sequencer/SLICE_291 ( .D1(\coreInst/COMMIT ), 
    .C1(\coreInst/BUS_SEQX[0] ), 
    .B1(\coreInst/busControllerInst/sequencer/N_963 ), 
    .A1(\coreInst/busControllerInst/N_439 ), .D0(\coreInst/N_964 ), 
    .C0(\coreInst/COMMIT ), .A0(\coreInst/BUS_SEQX[0] ), 
    .DI1(\coreInst/busControllerInst/sequencer/WRN1_BUF_3 ), 
    .DI0(\coreInst/busControllerInst/sequencer/WRN0_BUF_3 ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/busControllerInst/sequencer/WRN0_BUF_3 ), 
    .Q0(PIN_WRN0), .F1(\coreInst/busControllerInst/sequencer/WRN1_BUF_3 ), 
    .Q1(PIN_WRN1));
  SLICE_293 SLICE_293( .D1(\coreInst.busControllerInst.DOUT_BUF_i_0[10] ), 
    .C1(\coreInst.ALU_R[10] ), 
    .B1(\mcuResourcesInst.memoryMapperInst.INT_MAP ), .A1(N_459), 
    .D0(\mcuResourcesInst/memoryMapperInst/N_55 ), 
    .C0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ), 
    .B0(\mcuResourcesInst/memoryMapperInst/N_37 ), .DI0(\CPU_DIN[10] ), 
    .M0(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .CE(\coreInst/EXECUTE ), .CLK(PIN_CLK_X1_c), .OFX0(\CPU_DIN[10] ), 
    .Q0(\coreInst/ALU_ALU_OPX[0] ));
  SLICE_294 SLICE_294( .D1(N_338), 
    .C1(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .B1(\mcuResourcesInst/memoryMapperInst/N_94 ), 
    .A1(\mcuResourcesInst.memoryMapperInst.INT_MAP ), 
    .D0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12] ), 
    .C0(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), .B0(N_340), 
    .A0(\mcuResourcesInst.memoryMapperInst.INT_MAP ), .DI1(\CPU_DIN[13] ), 
    .DI0(\CPU_DIN[12] ), .CE(\coreInst/EXECUTE ), .CLK(PIN_CLK_X1_c), 
    .F0(\CPU_DIN[12] ), .Q0(\coreInst/ALU_ALU_OPX[2] ), .F1(\CPU_DIN[13] ), 
    .Q1(\coreInst/ALU_ALU_OPX[3] ));
  coreInst_interruptStateMachineInst_SLICE_295 
    \coreInst/interruptStateMachineInst/SLICE_295 ( .D1(PIN_INT0_c), 
    .C1(\coreInst/CCL_ENRX ), .B1(\coreInst/interruptStateMachineInst/EI ), 
    .A1(INT1), .D0(\coreInst/interruptStateMachineInst/STATE[8] ), 
    .C0(PIN_INT0_c), .B0(\coreInst/INT_PC_NEXTX[2] ), 
    .A0(\coreInst/interruptStateMachineInst/N_888 ), 
    .DI0(\coreInst/interruptStateMachineInst/N_21 ), .CE(\coreInst/COMMIT ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/interruptStateMachineInst/N_21 ), 
    .Q0(\coreInst/CCL_ENRX ), .F1(\coreInst/interruptStateMachineInst/N_888 ));
  coreInst_fullALUInst_SLICE_296 \coreInst/fullALUInst/SLICE_296 ( 
    .C1(\coreInst/fullALUInst/aluInst/N_269 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_286 ), .A1(\coreInst/RESULT_sn_N_9 ), 
    .D0(\coreInst/fullALUInst/aluInst/OVFL ), 
    .C0(\coreInst/fullALUInst/aluInst/arithmetic ), 
    .B0(\coreInst/fullALUInst/aluInst/PARITY_2_12 ), 
    .A0(\coreInst/fullALUInst/aluInst/PARITY_2_13 ), 
    .DI0(\coreInst/fullALUInst/CC_P ), 
    .M0(\coreInst/fullALUInst/aluInst/PARITY_sn_N_2 ), 
    .CE(\coreInst/fullALUInst/ccRegs/CC_RUN_REG_0_sqmuxa ), .CLK(PIN_CLK_X1_c), 
    .OFX0(\coreInst/fullALUInst/CC_P ), .Q0(\coreInst/CC_RUN_REG[0] ));
  coreInst_fullALUInst_SLICE_297 \coreInst/fullALUInst/SLICE_297 ( 
    .D1(\coreInst/fullALUInst/aluInst/CARRY_sn_i2_mux ), 
    .C1(\coreInst/fullALUInst/aluInst/un1_RESULT_cry_15_0_S1 ), 
    .B1(\coreInst/fullALUInst/aluInst/CARRY_m0 ), .A1(\coreInst/ALU_OPX[1] ), 
    .D0(\coreInst/fullALUInst/aluInst/ZERO_8 ), 
    .C0(\coreInst/fullALUInst/aluInst/ZERO_12 ), .B0(\coreInst/ALU_R[14] ), 
    .A0(\coreInst/ALU_R[15] ), .DI1(\coreInst/fullALUInst/CC_C ), 
    .DI0(\coreInst/fullALUInst/CC_Z ), 
    .CE(\coreInst/fullALUInst/ccRegs/CC_RUN_REG_0_sqmuxa ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/fullALUInst/CC_Z ), .Q0(\coreInst/CC_RUN_REG[1] ), 
    .F1(\coreInst/fullALUInst/CC_C ), .Q1(\coreInst/CC_RUN_REG[2] ));
  coreInst_SLICE_298 \coreInst/SLICE_298 ( .C1(\coreInst/ALU_R[15] ), 
    .B1(N_459), .A1(\coreInst/busControllerInst/DOUT_BUF_i_0[15] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_301 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_284 ), .B0(\coreInst/RESULT_sn_N_9 ), 
    .DI0(\coreInst/ALU_R[15] ), 
    .CE(\coreInst/fullALUInst/ccRegs/CC_RUN_REG_0_sqmuxa ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/ALU_R[15] ), .Q0(\coreInst/CC_RUN_REG[3] ), .F1(N_183));
  coreInst_instructionPhaseDecoderInst_SLICE_299 
    \coreInst/instructionPhaseDecoderInst/SLICE_299 ( 
    .C1(\coreInst/instructionPhaseDecoderInst/PHASE_R[8] ), 
    .B1(\coreInst/instructionPhaseDecoderInst/PHASE_R[3] ), 
    .C0(\coreInst/instructionPhaseDecoderInst/PHASE_R[8] ), 
    .B0(\coreInst/instructionPhaseDecoderInst/PHASE_R[3] ), 
    .DI0(\coreInst/instructionPhaseDecoderInst/N_81_i ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/instructionPhaseDecoderInst/N_81_i ), .Q0(\coreInst/COMMIT ), 
    .F1(COMMIT_2_i_a4));
  coreInst_SLICE_300 \coreInst/SLICE_300 ( .C1(PIN_RESETN_c), 
    .B1(\coreInst/DEBUG_ACK ), .D0(\coreInst/DEBUG_INC_REQ ), 
    .C0(\coreInst/instructionPhaseDecoderInst/PHASE_R[6] ), 
    .B0(\coreInst/DEBUG_MODE_REQ ), .A0(\coreInst/DEBUG_ACK ), 
    .DI0(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[10] ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[10] ), 
    .Q0(\coreInst/DEBUG_ACK ), .F1(\coreInst/debugger/requestGen/Q_R10 ));
  coreInst_SLICE_301 \coreInst/SLICE_301 ( .C1(\coreInst/DEBUG_OPX[1] ), 
    .A1(\coreInst/DEBUG_OPX[2] ), .D0(\coreInst/DEBUG_OPX[0] ), 
    .C0(\coreInst/N_544 ), .B0(\coreInst/DEBUG_OPX[3] ), 
    .A0(\coreInst/COMMIT ), .DI0(\coreInst/debugSequencerInst/N_256_i ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/debugSequencerInst/N_256_i ), 
    .Q0(\coreInst/DEBUG_ADDR_INC_EN ), .F1(\coreInst/N_544 ));
  coreInst_SLICE_303 \coreInst/SLICE_303 ( .D1(\coreInst/DEBUG_OPX[1] ), 
    .C1(\coreInst/DEBUG_OPX[3] ), .B1(\coreInst/DEBUG_OPX[2] ), 
    .D0(\coreInst/DEBUG_OPX[1] ), .C0(\coreInst/DEBUG_OPX[3] ), 
    .B0(\coreInst/DEBUG_OPX[2] ), .A0(\coreInst/COMMIT ), 
    .DI0(\coreInst/debugSequencerInst/N_254_i ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/debugSequencerInst/N_254_i ), 
    .Q0(\coreInst/DEBUG_LD_DATA_EN ), .F1(\coreInst/debugger/N_449 ));
  coreInst_instructionPhaseDecoderInst_SLICE_315 
    \coreInst/instructionPhaseDecoderInst/SLICE_315 ( 
    .D0(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[2] ), 
    .C0(\coreInst/DEBUG_MODE_REQ ), 
    .B0(\coreInst/instructionPhaseDecoderInst/PHASE_R[5] ), 
    .A0(\coreInst/DEBUG_INC_REQ ), 
    .DI0(\coreInst/instructionPhaseDecoderInst/DECODE_2 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/instructionPhaseDecoderInst/DECODE_2 ), 
    .Q0(\coreInst/DECODE ));
  SLICE_316 SLICE_316( .D1(\mcuResourcesInst.N_82 ), 
    .C1(\mcuResourcesInst.N_64 ), 
    .A1(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .D0(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .C0(\mcuResourcesInst.memoryMapperInst.INT_MAP ), 
    .B0(\mcuResourcesInst.interruptMaskRegisterInst.DOUT_i1_mux_i_0 ), 
    .A0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_d[0] ), .DI1(\CPU_DIN[1] ), 
    .DI0(\CPU_DIN[0] ), .CE(\coreInst/dinLatch/DOUT6 ), .CLK(PIN_CLK_X1_c), 
    .F0(\CPU_DIN[0] ), .Q0(\coreInst/DIN_LATCHED[0] ), .F1(\CPU_DIN[1] ), 
    .Q1(\coreInst/DIN_LATCHED[1] ));
  SLICE_317 SLICE_317( .D1(\mcuResourcesInst/RD_INT_0_sqmuxa ), .C1(PIN_RDN_c), 
    .B1(N_332), .A1(\mcuResourcesInst.interruptMaskRegisterInst.PRI_REG[2] ), 
    .D0(\mcuResourcesInst/memoryMapperInst/N_83 ), 
    .C0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_2_d[2] ), 
    .B0(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .DI0(\CPU_DIN[2] ), .M0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_s[2] ), 
    .CE(\coreInst/dinLatch/DOUT6 ), .CLK(PIN_CLK_X1_c), .OFX0(\CPU_DIN[2] ), 
    .Q0(\coreInst/DIN_LATCHED[2] ));
  SLICE_318 SLICE_318( .D1(\mcuResourcesInst/memoryMapperInst/CPU_N_6 ), 
    .C1(\mcuResourcesInst/N_13 ), .B1(\DOUT[3] ), 
    .A1(\mcuResourcesInst.memoryMapperInst.CPU_m7_e_1 ), 
    .D0(\mcuResourcesInst/memoryMapperInst/N_48 ), 
    .C0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ), 
    .B0(\mcuResourcesInst/memoryMapperInst/N_30 ), .DI0(\CPU_DIN[3] ), 
    .M0(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .CE(\coreInst/dinLatch/DOUT6 ), .CLK(PIN_CLK_X1_c), .OFX0(\CPU_DIN[3] ), 
    .Q0(\coreInst/DIN_LATCHED[3] ));
  SLICE_319 SLICE_319( .D1(\mcuResourcesInst.memoryMapperInst.INT_MAP_11 ), 
    .C1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_bm_RNO[4] ), .B1(\DOUT[4] ), 
    .A1(\mcuResourcesInst/memoryMapperInst/CPU_m1_e_1 ), 
    .D0(\mcuResourcesInst/memoryMapperInst/N_31 ), 
    .C0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ), 
    .B0(\mcuResourcesInst/memoryMapperInst/N_49 ), .DI0(\CPU_DIN[4] ), 
    .M0(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .CE(\coreInst/dinLatch/DOUT6 ), .CLK(PIN_CLK_X1_c), .OFX0(\CPU_DIN[4] ), 
    .Q0(\coreInst/DIN_LATCHED[4] ));
  SLICE_320 SLICE_320( .D1(\mcuResourcesInst.memoryMapperInst.INT_MAP ), 
    .C1(\mcuResourcesInst.memoryMapperInst.CPU_m7_e_1 ), 
    .B1(\mcuResourcesInst/N_15 ), .A1(\DOUT[5] ), 
    .D0(\mcuResourcesInst/memoryMapperInst/N_50 ), 
    .B0(\mcuResourcesInst/memoryMapperInst/N_32 ), 
    .A0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ), 
    .DI0(\CPU_DIN[5] ), 
    .M0(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .CE(\coreInst/dinLatch/DOUT6 ), .CLK(PIN_CLK_X1_c), .OFX0(\CPU_DIN[5] ), 
    .Q0(\coreInst/DIN_LATCHED[5] ));
  SLICE_321 SLICE_321( .D1(\mcuResourcesInst.memoryMapperInst.INT_MAP ), 
    .C1(\mcuResourcesInst/N_16 ), .B1(\DOUT[6] ), 
    .A1(\mcuResourcesInst.memoryMapperInst.CPU_m7_e_1 ), 
    .D0(\mcuResourcesInst/memoryMapperInst/N_51 ), 
    .C0(\mcuResourcesInst/memoryMapperInst/N_33 ), 
    .A0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ), 
    .DI0(\CPU_DIN[6] ), 
    .M0(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .CE(\coreInst/dinLatch/DOUT6 ), .CLK(PIN_CLK_X1_c), .OFX0(\CPU_DIN[6] ), 
    .Q0(\coreInst/DIN_LATCHED[6] ));
  SLICE_322 SLICE_322( .D1(\mcuResourcesInst/INTS_REG[7] ), 
    .C1(\mcuResourcesInst/MASK_REG[7] ), .B1(N_332), 
    .A1(\mcuResourcesInst.memoryMapperInst.CPU_m7_e_1 ), 
    .D0(\coreInst.REGA_DOUT[7] ), .C0(N_447), .B0(\coreInst.ALU_R[7] ), 
    .A0(N_459), .DI1(\CPU_DIN[7] ), 
    .M1(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .M0(\mcuResourcesInst/memoryMapperInst/CPU_N_9_mux_0 ), 
    .FXB(\mcuResourcesInst/memoryMapperInst/N_70 ), 
    .FXA(\mcuResourcesInst/memoryMapperInst/N_88 ), 
    .CE(\coreInst/dinLatch/DOUT6 ), .CLK(PIN_CLK_X1_c), 
    .OFX0(\mcuResourcesInst/memoryMapperInst/N_70 ), 
    .Q1(\coreInst/DIN_LATCHED[7] ), .OFX1(\CPU_DIN[7] ));
  coreInst_SLICE_323 \coreInst/SLICE_323 ( .D1(N_447), 
    .C1(\coreInst/REGA_DOUT[8] ), 
    .B1(\mcuResourcesInst.memoryMapperInst.INT_MAP ), 
    .A1(\coreInst/registerFileInst/regs/m68_i_o4_0 ), .D0(\PIN_DIN_GPIO_c[8] ), 
    .C0(\DOUT_RNIL8MT[8] ), .A0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .DI0(\coreInst/CPU_DIN[8] ), 
    .M0(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .CE(\coreInst/dinLatch/DOUT6 ), .CLK(PIN_CLK_X1_c), 
    .OFX0(\coreInst/CPU_DIN[8] ), .Q0(\coreInst/DIN_LATCHED[8] ));
  SLICE_324 SLICE_324( .D1(\coreInst/busControllerInst/DOUT_BUF_i_0[9] ), 
    .C1(N_459), .B1(\coreInst/ALU_R[9] ), 
    .D0(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .C0(\mcuResourcesInst.memoryMapperInst.INT_MAP ), .B0(N_189), 
    .A0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9] ), .DI0(\CPU_DIN[9] ), 
    .M1(\CPU_DIN[10] ), .CE(\coreInst/dinLatch/DOUT6 ), .CLK(PIN_CLK_X1_c), 
    .F0(\CPU_DIN[9] ), .Q0(\coreInst/DIN_LATCHED[9] ), .F1(N_189), 
    .Q1(\coreInst/DIN_LATCHED[10] ));
  SLICE_325 SLICE_325( .D1(\coreInst/ALU_R[11] ), .C1(N_459), 
    .A1(\coreInst/busControllerInst/DOUT_BUF_i_0[11] ), 
    .D0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11] ), 
    .C0(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .B0(\mcuResourcesInst.memoryMapperInst.INT_MAP ), .A0(N_342), 
    .DI0(\CPU_DIN[11] ), .M1(\CPU_DIN[12] ), .CE(\coreInst/dinLatch/DOUT6 ), 
    .CLK(PIN_CLK_X1_c), .F0(\CPU_DIN[11] ), .Q0(\coreInst/DIN_LATCHED[11] ), 
    .F1(N_342), .Q1(\coreInst/DIN_LATCHED[12] ));
  SLICE_327 SLICE_327( .D1(\mcuResourcesInst/memoryMapperInst/N_96 ), 
    .C1(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .B1(\mcuResourcesInst.memoryMapperInst.INT_MAP ), .A1(N_183), 
    .D0(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .C0(\mcuResourcesInst/memoryMapperInst/N_95 ), 
    .B0(\mcuResourcesInst.memoryMapperInst.INT_MAP ), .A0(N_185), 
    .DI1(\CPU_DIN[15] ), .DI0(\CPU_DIN[14] ), .CE(\coreInst/dinLatch/DOUT6 ), 
    .CLK(PIN_CLK_X1_c), .F0(\CPU_DIN[14] ), .Q0(\coreInst/DIN_LATCHED[14] ), 
    .F1(\CPU_DIN[15] ), .Q1(\coreInst/DIN_LATCHED[15] ));
  coreInst_SLICE_328 \coreInst/SLICE_328 ( .D1(\coreInst/INSTRUCTION[9] ), 
    .A1(\coreInst/INSTRUCTION[8] ), .D0(\coreInst/N_476 ), 
    .C0(\coreInst/ALU_ALU_OPX[0] ), .B0(\coreInst/GROUPX[1] ), 
    .A0(\coreInst/GROUPX[0] ), .DI0(\coreInst/generalGroupDecoderInst/DI ), 
    .CE(\coreInst/EXECUTE ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/generalGroupDecoderInst/DI ), .Q0(\coreInst/DIX ), 
    .F1(\coreInst/N_476 ));
  coreInst_SLICE_329 \coreInst/SLICE_329 ( .D1(\coreInst/GROUPX[1] ), 
    .C1(\coreInst/GROUPX[0] ), .D0(\coreInst/INSTRUCTION[8] ), 
    .C0(\coreInst/N_987 ), .B0(\coreInst/ALU_ALU_OPX[0] ), 
    .A0(\coreInst/INSTRUCTION[9] ), 
    .DI0(\coreInst/generalGroupDecoderInst/EI ), .CE(\coreInst/EXECUTE ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/generalGroupDecoderInst/EI ), 
    .Q0(\coreInst/EIX ), .F1(\coreInst/N_987 ));
  coreInst_instructionPhaseDecoderInst_SLICE_330 
    \coreInst/instructionPhaseDecoderInst/SLICE_330 ( 
    .B1(\coreInst/instructionPhaseDecoderInst/PHASE_R[7] ), 
    .A1(\coreInst/instructionPhaseDecoderInst/PHASE_R[2] ), 
    .B0(\coreInst/instructionPhaseDecoderInst/PHASE_R[7] ), 
    .A0(\coreInst/instructionPhaseDecoderInst/PHASE_R[2] ), 
    .DI0(\coreInst/instructionPhaseDecoderInst/N_108_i ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/instructionPhaseDecoderInst/N_108_i ), 
    .Q0(\coreInst/EXECUTE ), .F1(EXECUTE_2_0_i_a2));
  coreInst_instructionPhaseDecoderInst_SLICE_331 
    \coreInst/instructionPhaseDecoderInst/SLICE_331 ( 
    .D1(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[1] ), 
    .C1(\coreInst/instructionPhaseDecoderInst/PHASE_R[9] ), 
    .D0(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[1] ), 
    .C0(\coreInst/instructionPhaseDecoderInst/PHASE_R[9] ), 
    .DI0(\coreInst/instructionPhaseDecoderInst/FETCH_2 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/instructionPhaseDecoderInst/FETCH_2 ), .Q0(\coreInst/FETCH ), 
    .F1(\coreInst.instructionPhaseDecoderInst.FETCH_2_i ));
  coreInst_SLICE_335 \coreInst/SLICE_335 ( .D1(\coreInst/GROUPX[1] ), 
    .C1(\coreInst/GROUPX[0] ), .A1(\coreInst/DEBUG_MODE ), 
    .D0(\coreInst/GROUPX[1] ), .C0(\coreInst/GROUPX[0] ), 
    .B0(\coreInst/ALU_ALU_OPX[0] ), .A0(\coreInst/N_497 ), 
    .DI0(\coreInst/generalGroupDecoderInst/HALT ), 
    .CE(\coreInst/generalGroupDecoderInst/EIX6 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/generalGroupDecoderInst/HALT ), .Q0(\coreInst/HALTX ), 
    .F1(\coreInst/opxMultiplexerInst/N_543 ));
  coreInst_interruptStateMachineInst_SLICE_341 
    \coreInst/interruptStateMachineInst/SLICE_341 ( 
    .D1(\coreInst/interruptStateMachineInst/STATE[5] ), .C1(\coreInst/RETIX ), 
    .B1(\coreInst/interruptStateMachineInst/STATE[6] ), 
    .A1(\coreInst/interruptStateMachineInst/STATE_ns[1] ), 
    .D0(\coreInst/interruptStateMachineInst/STATE[5] ), 
    .C0(\coreInst/interruptStateMachineInst/PC_LD_INT0_NEXT ), 
    .B0(\coreInst/interruptStateMachineInst/STATE[6] ), .A0(\coreInst/RETIX ), 
    .DI1(\coreInst/interruptStateMachineInst/PC_NEXTX_NEXT[1] ), 
    .DI0(\coreInst/interruptStateMachineInst/PC_NEXTX_NEXT[0] ), 
    .CE(\coreInst/COMMIT ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/interruptStateMachineInst/PC_NEXTX_NEXT[0] ), 
    .Q0(\coreInst/INT_PC_NEXTX[0] ), 
    .F1(\coreInst/interruptStateMachineInst/PC_NEXTX_NEXT[1] ), 
    .Q1(\coreInst/INT_PC_NEXTX[1] ));
  coreInst_SLICE_342 \coreInst/SLICE_342 ( 
    .D1(\coreInst/fullALUInst/ccRegs/CC_RUN_REG8 ), 
    .C1(\coreInst/INT_PC_NEXTX[2] ), .B1(\coreInst/STATE[4] ), 
    .A1(\coreInst/PC_LD_INT1X ), .D0(PIN_INT0_c), .C0(\coreInst/RETIX ), 
    .B0(\coreInst/STATE[4] ), 
    .DI0(\coreInst/interruptStateMachineInst/STATE_ns[7] ), 
    .CE(\coreInst/COMMIT ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/interruptStateMachineInst/STATE_ns[7] ), 
    .Q0(\coreInst/INT_PC_NEXTX[2] ), 
    .F1(\coreInst/fullALUInst/ccRegs/CC_INT1_REG_0_sqmuxa ));
  coreInst_SLICE_343 \coreInst/SLICE_343 ( .D1(\coreInst/PC_m3 ), 
    .C1(\coreInst/ADDR_N_8 ), .B1(\coreInst/ALU_ALU_OPX[2] ), 
    .A1(\coreInst/ALU_ALU_OPX[0] ), .C0(\coreInst/INSTRUCTION[9] ), 
    .B0(\coreInst/N_429_i ), .A0(\coreInst/ALU_ALU_OPX[3] ), 
    .DI0(\coreInst/jumpGroupDecoderInst/N_132_i ), 
    .M1(\coreInst/instructionPhaseDecoderInst/PHASE_R[3] ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/jumpGroupDecoderInst/N_132_i ), 
    .Q0(\coreInst/JMP_BUS_SEQX[1] ), .F1(\coreInst/N_429_i ), 
    .Q1(\coreInst/instructionPhaseDecoderInst/PHASE_R[4] ));
  coreInst_programCounterInst_SLICE_345 
    \coreInst/programCounterInst/SLICE_345 ( 
    .D1(\coreInst/programCounterInst/N_451 ), 
    .C1(\coreInst/programCounterInst/SUM[1] ), 
    .B1(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[1] ), 
    .D0(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[0] ), 
    .B0(\coreInst/programCounterInst/N_451 ), 
    .A0(\coreInst/programCounterInst/SUM[0] ), 
    .DI1(\coreInst/programCounterInst/N_402 ), 
    .DI0(\coreInst/programCounterInst/N_400 ), 
    .CE(\coreInst/programCounterInst/HERE11 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/N_400 ), .Q0(\coreInst/PC_A[0] ), 
    .F1(\coreInst/programCounterInst/N_402 ), .Q1(\coreInst/PC_A[1] ));
  coreInst_programCounterInst_SLICE_346 
    \coreInst/programCounterInst/SLICE_346 ( 
    .D1(\coreInst/programCounterInst/N_700 ), 
    .C1(\coreInst/programCounterInst/N_701 ), 
    .B1(\coreInst/programCounterInst/INTR1[3] ), 
    .A1(\coreInst/programCounterInst/N_973 ), 
    .D0(\coreInst/programCounterInst/SUM[2] ), 
    .C0(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_3L3 ), 
    .B0(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_4 ), 
    .A0(\coreInst/programCounterInst/N_703 ), 
    .DI1(\coreInst/programCounterInst/N_277 ), 
    .DI0(\coreInst/programCounterInst/N_279 ), 
    .CE(\coreInst/programCounterInst/HERE11 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/N_279 ), .Q0(\coreInst/PC_A[2] ), 
    .F1(\coreInst/programCounterInst/N_277 ), .Q1(\coreInst/PC_A[3] ));
  coreInst_programCounterInst_SLICE_347 
    \coreInst/programCounterInst/SLICE_347 ( 
    .D1(\coreInst/programCounterInst/SUM[5] ), 
    .C1(\coreInst/programCounterInst/N_451 ), 
    .A1(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[5] ), 
    .D0(\coreInst/programCounterInst/SUM[4] ), 
    .C0(\coreInst/programCounterInst/N_451 ), 
    .B0(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[4] ), 
    .DI1(\coreInst/programCounterInst/N_406 ), 
    .DI0(\coreInst/programCounterInst/N_404 ), 
    .CE(\coreInst/programCounterInst/HERE11 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/N_404 ), .Q0(\coreInst/PC_A[4] ), 
    .F1(\coreInst/programCounterInst/N_406 ), .Q1(\coreInst/PC_A[5] ));
  coreInst_programCounterInst_SLICE_348 
    \coreInst/programCounterInst/SLICE_348 ( 
    .D1(\coreInst/programCounterInst/SUM[7] ), 
    .C1(\coreInst/programCounterInst/N_451 ), 
    .B1(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[7] ), 
    .C0(\coreInst/programCounterInst/SUM[6] ), 
    .B0(\coreInst/programCounterInst/N_451 ), 
    .A0(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[6] ), 
    .DI1(\coreInst/programCounterInst/N_410 ), 
    .DI0(\coreInst/programCounterInst/N_408 ), 
    .CE(\coreInst/programCounterInst/HERE11 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/N_408 ), .Q0(\coreInst/PC_A[6] ), 
    .F1(\coreInst/programCounterInst/N_410 ), .Q1(\coreInst/PC_A[7] ));
  coreInst_programCounterInst_SLICE_349 
    \coreInst/programCounterInst/SLICE_349 ( 
    .D1(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_3 ), 
    .C1(\coreInst/programCounterInst/N_451 ), 
    .B1(\coreInst/programCounterInst/SUM[9] ), 
    .D0(\coreInst/programCounterInst/SUM[8] ), 
    .C0(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[8] ), 
    .B0(\coreInst/programCounterInst/N_451 ), 
    .DI1(\coreInst/programCounterInst/N_414 ), 
    .DI0(\coreInst/programCounterInst/N_412 ), 
    .CE(\coreInst/programCounterInst/HERE11 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/N_412 ), .Q0(\coreInst/PC_A[8] ), 
    .F1(\coreInst/programCounterInst/N_414 ), .Q1(\coreInst/PC_A[9] ));
  coreInst_programCounterInst_SLICE_350 
    \coreInst/programCounterInst/SLICE_350 ( 
    .D1(\coreInst/programCounterInst/SUM[11] ), 
    .C1(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_2 ), 
    .A1(\coreInst/programCounterInst/N_451 ), 
    .C0(\coreInst/programCounterInst/SUM[10] ), 
    .B0(\coreInst/programCounterInst/PC_A_NEXT_6_0_0_N_2L1_0 ), 
    .A0(\coreInst/programCounterInst/N_451 ), 
    .DI1(\coreInst/programCounterInst/N_416 ), 
    .DI0(\coreInst/programCounterInst/PC_A_NEXT[10] ), 
    .CE(\coreInst/programCounterInst/HERE11 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/PC_A_NEXT[10] ), .Q0(\coreInst/PC_A[10] ), 
    .F1(\coreInst/programCounterInst/N_416 ), .Q1(\coreInst/PC_A[11] ));
  coreInst_programCounterInst_SLICE_351 
    \coreInst/programCounterInst/SLICE_351 ( 
    .D1(\coreInst/programCounterInst/SUM[13] ), 
    .C1(\coreInst/programCounterInst/N_451 ), 
    .A1(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_0 ), 
    .D0(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_1 ), 
    .C0(\coreInst/programCounterInst/SUM[12] ), 
    .B0(\coreInst/programCounterInst/N_451 ), 
    .DI1(\coreInst/programCounterInst/N_420 ), 
    .DI0(\coreInst/programCounterInst/N_418 ), 
    .CE(\coreInst/programCounterInst/HERE11 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/N_418 ), .Q0(\coreInst/PC_A[12] ), 
    .F1(\coreInst/programCounterInst/N_420 ), .Q1(\coreInst/PC_A[13] ));
  coreInst_programCounterInst_SLICE_352 
    \coreInst/programCounterInst/SLICE_352 ( 
    .D1(\coreInst/programCounterInst/PC_A_NEXT_6_0_0_N_3L3 ), 
    .C1(\coreInst/programCounterInst/SUM[15] ), 
    .B1(\coreInst/programCounterInst/PC_A_NEXT_6_0_0_RNO[15] ), 
    .D0(\coreInst/programCounterInst/SUM[14] ), 
    .C0(\coreInst/programCounterInst/N_451 ), 
    .B0(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1 ), 
    .DI1(\coreInst/programCounterInst/PC_A_NEXT[15] ), 
    .DI0(\coreInst/programCounterInst/N_422 ), 
    .CE(\coreInst/programCounterInst/HERE11 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/N_422 ), .Q0(\coreInst/PC_A[14] ), 
    .F1(\coreInst/programCounterInst/PC_A_NEXT[15] ), .Q1(\coreInst/PC_A[15] ));
  coreInst_instructionPhaseDecoderInst_SLICE_353 
    \coreInst/instructionPhaseDecoderInst/SLICE_353 ( 
    .D1(\coreInst/instructionPhaseDecoderInst/PHASE_R[2] ), 
    .C1(\coreInst/DEBUG_MODE ), 
    .B1(\coreInst/instructionPhaseDecoderInst/PHASE_R[4] ), 
    .A1(\coreInst/instructionPhaseDecoderInst/PHASE_R[3] ), 
    .C0(\coreInst/instructionPhaseDecoderInst/N_516 ), 
    .B0(\coreInst/instructionPhaseDecoderInst/PC_STOP_0_a2_0_a2_2 ), 
    .A0(\coreInst/DEBUG_STOP ), 
    .DI0(\coreInst/instructionPhaseDecoderInst/PC_STOP_i ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/instructionPhaseDecoderInst/PC_STOP_i ), 
    .Q0(\coreInst/PC_ENX ), 
    .F1(\coreInst/instructionPhaseDecoderInst/PC_STOP_0_a2_0_a2_2 ));
  coreInst_interruptStateMachineInst_SLICE_354 
    \coreInst/interruptStateMachineInst/SLICE_354 ( 
    .D1(\coreInst/interruptStateMachineInst/STATE[6] ), 
    .C1(\coreInst/interruptStateMachineInst/STATE[8] ), 
    .B1(\coreInst/interruptStateMachineInst/STATE[3] ), 
    .A1(\coreInst/interruptStateMachineInst/STATE[5] ), 
    .D0(\coreInst/interruptStateMachineInst/STATE[2] ), 
    .C0(\coreInst/interruptStateMachineInst/PC_NEXTX_NEXT_0_0_a2_3[0] ), 
    .B0(\coreInst/interruptStateMachineInst/STATE[9] ), .A0(PIN_INT0_c), 
    .DI0(\coreInst/interruptStateMachineInst/PC_LD_INT0_NEXT ), 
    .CE(\coreInst/COMMIT ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/interruptStateMachineInst/PC_LD_INT0_NEXT ), 
    .Q0(\coreInst/PC_LD_INT0X ), 
    .F1(\coreInst/interruptStateMachineInst/PC_NEXTX_NEXT_0_0_a2_3[0] ));
  coreInst_SLICE_355 \coreInst/SLICE_355 ( .D1(\coreInst/DEBUG_MODE_rep1 ), 
    .B1(\coreInst/N_1011 ), .A1(\coreInst/CCL_ENRX ), .D0(INT1), 
    .C0(\coreInst/interruptStateMachineInst/EI ), .B0(PIN_INT0_c), 
    .A0(\coreInst/CCL_ENRX ), 
    .DI0(\coreInst/interruptStateMachineInst/STATE_ns[1] ), 
    .CE(\coreInst/COMMIT ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/interruptStateMachineInst/STATE_ns[1] ), 
    .Q0(\coreInst/PC_LD_INT1X ), 
    .F1(\coreInst/busControllerInst/sequencer/ADDR_m10_i_m4_N_2L1 ));
  coreInst_registerSequencerInst_SLICE_356 
    \coreInst/registerSequencerInst/SLICE_356 ( .D1(\coreInst/INSTRUCTION[7] ), 
    .C1(\coreInst/GROUPX[0] ), .B1(\coreInst/GROUPX[1] ), 
    .A1(\coreInst/registerSequencerInst/N_827 ), .D0(\coreInst/DEBUG_MODE ), 
    .C0(\coreInst/GROUPX[0] ), .B0(\coreInst/N_437 ), 
    .A0(\coreInst/registerSequencerInst/REGA_EN_3_i_0_0 ), 
    .DI0(\coreInst/registerSequencerInst/N_356_i ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/registerSequencerInst/N_356_i ), .Q0(\coreInst/REGA_EN ), 
    .F1(\coreInst/registerSequencerInst/REGA_EN_3_i_0_0 ));
  coreInst_registerSequencerInst_SLICE_357 
    \coreInst/registerSequencerInst/SLICE_357 ( .D1(\coreInst/ALU_ALU_OPX[2] ), 
    .C1(\coreInst/ALU_ALU_OPX[3] ), 
    .B1(\coreInst/registerSequencerInst/N_537 ), .A1(\coreInst/GROUPX[0] ), 
    .D0(\coreInst/registerSequencerInst/N_830 ), 
    .C0(\coreInst/registerSequencerInst/N_828 ), 
    .B0(\coreInst/registerSequencerInst/REGA_WEN_3_i_3 ), 
    .A0(\coreInst/registerSequencerInst/N_829 ), 
    .DI0(\coreInst/registerSequencerInst/N_354_i ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/registerSequencerInst/N_354_i ), .Q0(\coreInst/REGA_WEN ), 
    .F1(\coreInst/registerSequencerInst/N_828 ));
  coreInst_registerSequencerInst_SLICE_358 
    \coreInst/registerSequencerInst/SLICE_358 ( .C1(\coreInst/FETCH ), 
    .B1(\coreInst/EXECUTE ), .A1(\coreInst/COMMIT ), .D0(\coreInst/N_460 ), 
    .C0(\coreInst/registerSequencerInst/N_827 ), .B0(\coreInst/DEBUG_MODE ), 
    .A0(\coreInst/registerSequencerInst/N_1019 ), 
    .DI0(\coreInst/registerSequencerInst/N_352_i ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/registerSequencerInst/N_352_i ), .Q0(\coreInst/REGB_EN ), 
    .F1(\coreInst/registerSequencerInst/N_827 ));
  coreInst_SLICE_359 \coreInst/SLICE_359 ( .D1(\coreInst/GROUPX_fast[1] ), 
    .C1(\coreInst/DEBUG_MODE_rep1 ), .B1(\coreInst/GROUPX_0_rep1 ), 
    .D0(\coreInst/N_455 ), .C0(\coreInst/INSTRUCTION[9] ), 
    .B0(\coreInst/ALU_ALU_OPX[0] ), .A0(\coreInst/COMMIT ), 
    .DI0(\coreInst/registerSequencerInst/N_350_i ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/registerSequencerInst/N_350_i ), .Q0(\coreInst/REGB_WEN ), 
    .F1(\coreInst/N_455 ));
  coreInst_SLICE_360 \coreInst/SLICE_360 ( .D1(\coreInst/INSTRUCTION[9] ), 
    .C1(\coreInst/INSTRUCTION[8] ), .D0(\coreInst/GROUPX[1] ), 
    .C0(\coreInst/N_454 ), .B0(\coreInst/ALU_ALU_OPX[0] ), 
    .A0(\coreInst/GROUPX[0] ), .DI0(\coreInst/generalGroupDecoderInst/RETI ), 
    .CE(\coreInst/EXECUTE ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/generalGroupDecoderInst/RETI ), .Q0(\coreInst/RETIX ), 
    .F1(\coreInst/N_454 ));
  coreInst_interruptStateMachineInst_SLICE_361 
    \coreInst/interruptStateMachineInst/SLICE_361 ( .D1(\coreInst/RETIX ), 
    .C1(PIN_INT0_c), .B1(\coreInst/STATE[4] ), .D0(PIN_INT0_c), 
    .C0(\coreInst/interruptStateMachineInst/N_886 ), 
    .B0(\coreInst/PC_LD_INT1X ), 
    .A0(\coreInst/interruptStateMachineInst/STATE[9] ), 
    .DI0(\coreInst/interruptStateMachineInst/STATE_ns[4] ), 
    .CE(\coreInst/COMMIT ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/interruptStateMachineInst/STATE_ns[4] ), 
    .Q0(\coreInst/STATE[4] ), .F1(\coreInst/interruptStateMachineInst/N_886 ));
  coreInst_busControllerInst_sequencer_SLICE_362 
    \coreInst/busControllerInst/sequencer/SLICE_362 ( 
    .D1(\coreInst/busControllerInst/sequencer/ADDR_BUSX_R_3_0_iv_i_2[1] ), 
    .C1(\coreInst/N_1014 ), .B1(\coreInst/busControllerInst/sequencer/N_595 ), 
    .A1(\coreInst/ALU_ALU_OPX[0] ), .D0(\coreInst/N_168_1 ), 
    .C0(\coreInst/FETCH ), .B0(\coreInst/busControllerInst/sequencer/N_599 ), 
    .A0(\coreInst/N_598 ), 
    .DI1(\coreInst/busControllerInst/sequencer/N_166_i ), 
    .DI0(\coreInst/busControllerInst/sequencer/N_168_i ), 
    .CE(\coreInst/busControllerInst/sequencer/N_1010_i ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/busControllerInst/sequencer/N_168_i ), 
    .Q0(\coreInst/busControllerInst/ADDR_BUSX_R[0] ), 
    .F1(\coreInst/busControllerInst/sequencer/N_166_i ), 
    .Q1(\coreInst/busControllerInst/ADDR_BUSX_R[1] ));
  coreInst_SLICE_363 \coreInst/SLICE_363 ( .D1(\coreInst/FETCH ), 
    .B1(\coreInst/PC_LD_INT1X ), .D0(\coreInst/DEBUG_OPX[2] ), 
    .C0(\coreInst/DEBUG_MODE ), .B0(\coreInst/FETCH ), 
    .A0(\coreInst/DEBUG_OPX[3] ), 
    .DI0(\coreInst/busControllerInst/sequencer/N_129_i ), 
    .CE(\coreInst/busControllerInst/sequencer/N_1010_i ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/busControllerInst/sequencer/N_129_i ), 
    .Q0(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .F1(\coreInst/programCounterInst/N_290_i ));
  coreInst_debugger_addrL_SLICE_364 \coreInst/debugger/addrL/SLICE_364 ( 
    .D1(\coreInst/DEBUG_ADDR_OUT[5] ), .C1(\coreInst/DEBUG_ADDR_OUT[3] ), 
    .B1(\coreInst/DEBUG_ADDR_OUT[1] ), .A1(\coreInst/DEBUG_ADDR_OUT[6] ), 
    .D0(\coreInst/DEBUG_ADDR_OUT[4] ), 
    .C0(\coreInst/debugger/addrL/RO_R6_0_a2_4 ), 
    .B0(\coreInst/DEBUG_ADDR_OUT[2] ), .A0(\coreInst/DEBUG_ADDR_OUT[7] ), 
    .DI0(\coreInst/debugger/addrL/RO_R ), 
    .M1(\coreInst/debugger/addrL/PL_PHI0 ), .LSR(PIN_RESETN_c), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/debugger/addrL/RO_R ), 
    .Q0(\coreInst/debugger/AL_RO ), 
    .F1(\coreInst/debugger/addrL/RO_R6_0_a2_4 ), 
    .Q1(\coreInst/debugger/addrL/PL ));
  coreInst_debugger_dataR_SLICE_365 \coreInst/debugger/dataR/SLICE_365 ( 
    .D1(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[9] ), 
    .C1(\coreInst/debugger/N_449 ), 
    .B1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[9] ), 
    .A1(\coreInst/DIN_LATCHED[9] ), 
    .D0(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[8] ), 
    .C0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[8] ), 
    .B0(\coreInst/debugger/N_449 ), .A0(\coreInst/DIN_LATCHED[8] ), 
    .DI1(\coreInst/debugger/dataR/N_304_i ), 
    .DI0(\coreInst/debugger/dataR/N_146_i ), .CE(\coreInst/DEBUG_LD_DATA_EN ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/debugger/dataR/N_146_i ), 
    .Q0(\coreInst/debugger/DEBUG_READ_MUX_IN_H[0] ), 
    .F1(\coreInst/debugger/dataR/N_304_i ), 
    .Q1(\coreInst/debugger/DEBUG_READ_MUX_IN_H[1] ));
  coreInst_debugger_dataR_SLICE_366 \coreInst/debugger/dataR/SLICE_366 ( 
    .D1(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[11] ), 
    .C1(\coreInst/debugger/N_449 ), 
    .B1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[11] ), 
    .A1(\coreInst/DIN_LATCHED[11] ), 
    .D0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[10] ), 
    .C0(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[10] ), 
    .B0(\coreInst/debugger/N_449 ), .A0(\coreInst/DIN_LATCHED[10] ), 
    .DI1(\coreInst/debugger/dataR/N_300_i ), 
    .DI0(\coreInst/debugger/dataR/N_302_i ), .CE(\coreInst/DEBUG_LD_DATA_EN ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/debugger/dataR/N_302_i ), 
    .Q0(\coreInst/debugger/DEBUG_READ_MUX_IN_H[2] ), 
    .F1(\coreInst/debugger/dataR/N_300_i ), 
    .Q1(\coreInst/debugger/DEBUG_READ_MUX_IN_H[3] ));
  coreInst_debugger_dataR_SLICE_367 \coreInst/debugger/dataR/SLICE_367 ( 
    .D1(\coreInst/debugger/N_449 ), 
    .C1(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[13] ), 
    .B1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[13] ), 
    .A1(\coreInst/DIN_LATCHED[13] ), 
    .D0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[12] ), 
    .C0(\coreInst/DIN_LATCHED[12] ), .B0(\coreInst/debugger/N_449 ), 
    .A0(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[12] ), 
    .DI1(\coreInst/debugger/dataR/N_296_i ), 
    .DI0(\coreInst/debugger/dataR/N_298_i ), .CE(\coreInst/DEBUG_LD_DATA_EN ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/debugger/dataR/N_298_i ), 
    .Q0(\coreInst/debugger/DEBUG_READ_MUX_IN_H[4] ), 
    .F1(\coreInst/debugger/dataR/N_296_i ), 
    .Q1(\coreInst/debugger/DEBUG_READ_MUX_IN_H[5] ));
  coreInst_debugger_dataR_SLICE_368 \coreInst/debugger/dataR/SLICE_368 ( 
    .D1(\coreInst/DIN_LATCHED[15] ), 
    .C1(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[15] ), 
    .B1(\coreInst/debugger/N_449 ), 
    .A1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[15] ), 
    .D0(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[14] ), 
    .C0(\coreInst/DIN_LATCHED[14] ), .B0(\coreInst/debugger/N_449 ), 
    .A0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[14] ), 
    .DI1(\coreInst/debugger/dataR/N_292_i ), 
    .DI0(\coreInst/debugger/dataR/N_294_i ), .CE(\coreInst/DEBUG_LD_DATA_EN ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/debugger/dataR/N_294_i ), 
    .Q0(\coreInst/debugger/DEBUG_READ_MUX_IN_H[6] ), 
    .F1(\coreInst/debugger/dataR/N_292_i ), 
    .Q1(\coreInst/debugger/DEBUG_READ_MUX_IN_H[7] ));
  coreInst_debugger_dataR_SLICE_369 \coreInst/debugger/dataR/SLICE_369 ( 
    .D1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[1] ), 
    .C1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[1] ), 
    .B1(\coreInst/CC_ZERO ), .A1(\coreInst/debugger/N_488 ), 
    .D0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[0] ), 
    .C0(\coreInst/CC_PARITY ), 
    .B0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[0] ), 
    .A0(\coreInst/debugger/N_488 ), .DI1(\coreInst/debugger/dataR/N_152_i ), 
    .DI0(\coreInst/debugger/dataR/N_154_i ), .CE(\coreInst/DEBUG_LD_DATA_EN ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/debugger/dataR/N_154_i ), 
    .Q0(\coreInst/debugger/DEBUG_READ_MUX_IN_L[0] ), 
    .F1(\coreInst/debugger/dataR/N_152_i ), 
    .Q1(\coreInst/debugger/DEBUG_READ_MUX_IN_L[1] ));
  coreInst_debugger_dataR_SLICE_370 \coreInst/debugger/dataR/SLICE_370 ( 
    .D1(\coreInst/debugger/N_488 ), 
    .C1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[3] ), 
    .B1(\coreInst/CC_SIGN ), 
    .A1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[3] ), 
    .D0(\coreInst/CC_CARRY ), 
    .C0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[2] ), 
    .B0(\coreInst/debugger/N_488 ), 
    .A0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[2] ), 
    .DI1(\coreInst/debugger/dataR/N_312_i ), 
    .DI0(\coreInst/debugger/dataR/N_150_i ), .CE(\coreInst/DEBUG_LD_DATA_EN ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/debugger/dataR/N_150_i ), 
    .Q0(\coreInst/debugger/DEBUG_READ_MUX_IN_L[2] ), 
    .F1(\coreInst/debugger/dataR/N_312_i ), 
    .Q1(\coreInst/debugger/DEBUG_READ_MUX_IN_L[3] ));
  coreInst_debugger_dataR_SLICE_371 \coreInst/debugger/dataR/SLICE_371 ( 
    .D1(\coreInst/debugger/N_449 ), 
    .C1(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[5] ), 
    .B1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[5] ), 
    .A1(\coreInst/DIN_LATCHED[5] ), .D0(\coreInst/DIN_LATCHED[4] ), 
    .C0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[4] ), 
    .B0(\coreInst/debugger/N_449 ), 
    .A0(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[4] ), 
    .DI1(\coreInst/debugger/dataR/N_148_i ), 
    .DI0(\coreInst/debugger/dataR/N_310_i ), .CE(\coreInst/DEBUG_LD_DATA_EN ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/debugger/dataR/N_310_i ), 
    .Q0(\coreInst/debugger/DEBUG_READ_MUX_IN_L[4] ), 
    .F1(\coreInst/debugger/dataR/N_148_i ), 
    .Q1(\coreInst/debugger/DEBUG_READ_MUX_IN_L[5] ));
  coreInst_debugger_dataR_SLICE_372 \coreInst/debugger/dataR/SLICE_372 ( 
    .D1(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[7] ), 
    .C1(\coreInst/DIN_LATCHED[7] ), 
    .B1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[7] ), 
    .A1(\coreInst/debugger/N_449 ), .D0(\coreInst/DIN_LATCHED[6] ), 
    .C0(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[6] ), 
    .B0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[6] ), 
    .A0(\coreInst/debugger/N_449 ), .DI1(\coreInst/debugger/dataR/N_306_i ), 
    .DI0(\coreInst/debugger/dataR/N_308_i ), .CE(\coreInst/DEBUG_LD_DATA_EN ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/debugger/dataR/N_308_i ), 
    .Q0(\coreInst/debugger/DEBUG_READ_MUX_IN_L[6] ), 
    .F1(\coreInst/debugger/dataR/N_306_i ), 
    .Q1(\coreInst/debugger/DEBUG_READ_MUX_IN_L[7] ));
  coreInst_debugger_SLICE_375 \coreInst/debugger/SLICE_375 ( 
    .C1(\PIN_DEBUG_ADDR_c[1] ), .B1(\PIN_DEBUG_ADDR_c[2] ), 
    .A1(\PIN_DEBUG_ADDR_c[0] ), .C0(\PIN_DEBUG_ADDR_c[1] ), 
    .B0(\PIN_DEBUG_ADDR_c[2] ), .A0(\PIN_DEBUG_ADDR_c[0] ), 
    .DI0(\coreInst.debugger.EN_AH ), .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .F0(\coreInst.debugger.EN_AH ), .Q0(\coreInst/debugger/addrH/PL_R ), 
    .F1(\coreInst/debugger/EN_MODE ));
  coreInst_debugger_SLICE_382 \coreInst/debugger/SLICE_382 ( 
    .C1(\PIN_DEBUG_ADDR_c[0] ), .B1(\PIN_DEBUG_ADDR_c[2] ), 
    .A1(\PIN_DEBUG_ADDR_c[1] ), .C0(\PIN_DEBUG_ADDR_c[0] ), 
    .B0(\PIN_DEBUG_ADDR_c[2] ), .A0(\PIN_DEBUG_ADDR_c[1] ), 
    .DI0(\coreInst/debugger/EN_AL ), .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .F0(\coreInst/debugger/EN_AL ), .Q0(\coreInst/debugger/addrL/PL_R ), 
    .F1(\coreInst/debugger/EN_OP ));
  coreInst_instructionPhaseDecoderInst_SLICE_403 
    \coreInst/instructionPhaseDecoderInst/SLICE_403 ( 
    .D1(\coreInst/instructionPhaseDecoderInst/PHASE_R[0] ), 
    .C1(\coreInst/instructionPhaseDecoderInst/N_117 ), 
    .B1(\coreInst/instructionPhaseDecoderInst/PHASE_R[4] ), 
    .A1(\coreInst/DEBUG_STOP ), 
    .D0(\coreInst/instructionPhaseDecoderInst/PHASE_R[5] ), 
    .C0(\coreInst/DEBUG_STOP ), .B0(\coreInst/DEBUG_INC_REQ ), 
    .A0(\coreInst/DEBUG_MODE_REQ ), 
    .DI1(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[1] ), 
    .DI0(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[0] ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[0] ), 
    .Q0(\coreInst/instructionPhaseDecoderInst/PHASE_R[0] ), 
    .F1(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[1] ), 
    .Q1(\coreInst/instructionPhaseDecoderInst/PHASE_R[1] ));
  coreInst_instructionPhaseDecoderInst_SLICE_404 
    \coreInst/instructionPhaseDecoderInst/SLICE_404 ( 
    .D1(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[2] ), 
    .C1(\coreInst/DEBUG_INC_REQ ), .B1(\coreInst/DEBUG_MODE_REQ ), 
    .A1(\coreInst/instructionPhaseDecoderInst/PHASE_R[5] ), 
    .D0(\coreInst/instructionPhaseDecoderInst/PHASE_R[0] ), 
    .C0(\coreInst/DEBUG_STOP ), 
    .B0(\coreInst/instructionPhaseDecoderInst/PHASE_R[1] ), 
    .A0(\coreInst/instructionPhaseDecoderInst/N_117 ), 
    .DI0(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[2] ), 
    .M1(\coreInst/instructionPhaseDecoderInst/PHASE_R[2] ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[2] ), 
    .Q0(\coreInst/instructionPhaseDecoderInst/PHASE_R[2] ), 
    .F1(\coreInst.instructionPhaseDecoderInst.DECODE_2_i ), 
    .Q1(\coreInst/instructionPhaseDecoderInst/PHASE_R[3] ));
  coreInst_instructionPhaseDecoderInst_SLICE_406 
    \coreInst/instructionPhaseDecoderInst/SLICE_406 ( 
    .D1(\coreInst/instructionPhaseDecoderInst/PHASE_R[0] ), 
    .C1(\coreInst/instructionPhaseDecoderInst/N_485 ), 
    .B1(\coreInst/instructionPhaseDecoderInst/PHASE_R[1] ), 
    .D0(\coreInst/DEBUG_ACK ), .C0(\coreInst/DEBUG_STOP ), 
    .B0(\coreInst/instructionPhaseDecoderInst/N_516 ), 
    .A0(\coreInst/DEBUG_REQ ), 
    .DI0(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[5] ), 
    .M1(\coreInst/instructionPhaseDecoderInst/PHASE_R[9] ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[5] ), 
    .Q0(\coreInst/instructionPhaseDecoderInst/PHASE_R[5] ), 
    .F1(\coreInst/instructionPhaseDecoderInst/N_516 ), 
    .Q1(\coreInst/instructionPhaseDecoderInst/PHASE_R[6] ));
  coreInst_SLICE_407 \coreInst/SLICE_407 ( .D1(\coreInst/DEBUG_MODE_REQ ), 
    .A1(\coreInst/DEBUG_INC_REQ ), .D0(\coreInst/DEBUG_MODE_REQ ), 
    .C0(\coreInst/instructionPhaseDecoderInst/PHASE_R[5] ), 
    .A0(\coreInst/DEBUG_INC_REQ ), 
    .DI0(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[7] ), 
    .M1(\coreInst/instructionPhaseDecoderInst/PHASE_R[7] ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/instructionPhaseDecoderInst/PHASE_R_ns[7] ), 
    .Q0(\coreInst/instructionPhaseDecoderInst/PHASE_R[7] ), 
    .F1(\coreInst/DEBUG_REQ ), 
    .Q1(\coreInst/instructionPhaseDecoderInst/PHASE_R[8] ));
  coreInst_interruptStateMachineInst_SLICE_410 
    \coreInst/interruptStateMachineInst/SLICE_410 ( .C0(\coreInst/DIX ), 
    .B0(\coreInst/EIX ), .A0(\coreInst/interruptStateMachineInst/EI ), 
    .DI0(\coreInst/interruptStateMachineInst/EI_2 ), .CE(\coreInst/COMMIT ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/interruptStateMachineInst/EI_2 ), 
    .Q0(\coreInst/interruptStateMachineInst/EI ));
  coreInst_interruptStateMachineInst_SLICE_411 
    \coreInst/interruptStateMachineInst/SLICE_411 ( .D1(\coreInst/STATE[4] ), 
    .C1(\coreInst/PC_LD_INT1X ), .B1(PIN_INT0_c), .C0(PIN_INT0_c), 
    .B0(\coreInst/CCL_ENRX ), .A0(\coreInst/INT_PC_NEXTX[2] ), 
    .DI1(\coreInst/interruptStateMachineInst/N_56_i ), 
    .DI0(\coreInst/interruptStateMachineInst/N_54_i ), .CE(\coreInst/COMMIT ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/interruptStateMachineInst/N_54_i ), 
    .Q0(\coreInst/interruptStateMachineInst/STATE[2] ), 
    .F1(\coreInst/interruptStateMachineInst/N_56_i ), 
    .Q1(\coreInst/interruptStateMachineInst/STATE[3] ));
  coreInst_interruptStateMachineInst_SLICE_412 
    \coreInst/interruptStateMachineInst/SLICE_412 ( 
    .C1(\coreInst/interruptStateMachineInst/STATE[6] ), .B1(\coreInst/RETIX ), 
    .A1(\coreInst/interruptStateMachineInst/STATE[3] ), 
    .C0(\coreInst/interruptStateMachineInst/STATE[2] ), .B0(\coreInst/RETIX ), 
    .A0(\coreInst/interruptStateMachineInst/STATE[5] ), 
    .DI1(\coreInst/interruptStateMachineInst/STATE_ns[6] ), 
    .DI0(\coreInst/interruptStateMachineInst/STATE_ns[5] ), 
    .CE(\coreInst/COMMIT ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/interruptStateMachineInst/STATE_ns[5] ), 
    .Q0(\coreInst/interruptStateMachineInst/STATE[5] ), 
    .F1(\coreInst/interruptStateMachineInst/STATE_ns[6] ), 
    .Q1(\coreInst/interruptStateMachineInst/STATE[6] ));
  coreInst_interruptStateMachineInst_SLICE_413 
    \coreInst/interruptStateMachineInst/SLICE_413 ( .D1(\coreInst/RETIX ), 
    .A1(\coreInst/interruptStateMachineInst/STATE[6] ), .D0(\coreInst/RETIX ), 
    .C0(\coreInst/interruptStateMachineInst/STATE[5] ), 
    .DI1(\coreInst/interruptStateMachineInst/STATE_ns[9] ), 
    .DI0(\coreInst/interruptStateMachineInst/STATE_ns[8] ), 
    .CE(\coreInst/COMMIT ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/interruptStateMachineInst/STATE_ns[8] ), 
    .Q0(\coreInst/interruptStateMachineInst/STATE[8] ), 
    .F1(\coreInst/interruptStateMachineInst/STATE_ns[9] ), 
    .Q1(\coreInst/interruptStateMachineInst/STATE[9] ));
  coreInst_programCounterInst_SLICE_414 
    \coreInst/programCounterInst/SLICE_414 ( .D1(\coreInst/ALUB_DATA[0] ), 
    .C1(\coreInst/PC_A[0] ), .B1(\coreInst/programCounterInst/N_977 ), 
    .A1(\coreInst/programCounterInst/N_446 ), 
    .D0(\coreInst/programCounterInst/ARGA_i_0_2[0] ), 
    .C0(\coreInst/programCounterInst/ARGA_i_0_3[0] ), 
    .A0(\coreInst/programCounterInst/SUM ), 
    .DI0(\coreInst/programCounterInst/SUM[0] ), 
    .M1(\coreInst/programCounterInst/SUM[1] ), 
    .CE(\coreInst/programCounterInst/INTR05 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/SUM[0] ), 
    .Q0(\coreInst/programCounterInst/INTR0[0] ), 
    .F1(\coreInst/programCounterInst/SUM ), 
    .Q1(\coreInst/programCounterInst/INTR0[1] ));
  mcuResourcesInst_UARTInst_SLICE_423 \mcuResourcesInst/UARTInst/SLICE_423 ( 
    .D1(PIN_RDN_c), .C1(\mcuResourcesInst/UARTInst/N_125 ), 
    .A1(\mcuResourcesInst.memoryMapperInst.UART_MAP ), .D0(PIN_RDN_c), 
    .B0(\mcuResourcesInst/UARTInst/N_141 ), 
    .A0(\mcuResourcesInst.memoryMapperInst.UART_MAP ), 
    .DI1(\mcuResourcesInst/UARTInst/N_131_i ), 
    .DI0(\mcuResourcesInst/UARTInst/N_132_i ), .CE(RESET_i), 
    .CLK(PIN_CLK_X1_c), .F0(\mcuResourcesInst/UARTInst/N_132_i ), 
    .Q0(\mcuResourcesInst.DIN_UART[0] ), 
    .F1(\mcuResourcesInst/UARTInst/N_131_i ), 
    .Q1(\mcuResourcesInst.DIN_UART[1] ));
  mcuResourcesInst_SLICE_424 \mcuResourcesInst/SLICE_424 ( 
    .C1(\mcuResourcesInst.memoryMapperInst.UART_MAP ), .A1(PIN_RDN_c), 
    .C0(\mcuResourcesInst.memoryMapperInst.UART_MAP ), 
    .B0(\mcuResourcesInst/UARTInst/N_140 ), .A0(PIN_RDN_c), 
    .DI0(\mcuResourcesInst/UARTInst/N_130_i ), .CE(RESET_i), 
    .CLK(PIN_CLK_X1_c), .F0(\mcuResourcesInst/UARTInst/N_130_i ), 
    .Q0(\mcuResourcesInst.DIN_UART[2] ), .F1(\mcuResourcesInst/RD_UART ));
  mcuResourcesInst_interruptMaskRegisterInst_SLICE_425 
    \mcuResourcesInst/interruptMaskRegisterInst/SLICE_425 ( 
    .D1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[4] ), 
    .C1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[1] ), 
    .B1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[2] ), 
    .A1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[3] ), .C0(PIN_INT2_c), 
    .B0(\mcuResourcesInst.interruptMaskRegisterInst.MASK_REG[2] ), 
    .DI0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[2] ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[2] ), 
    .Q0(\mcuResourcesInst.interruptMaskRegisterInst.INTS_REG[2] ), 
    .F1(\mcuResourcesInst/interruptMaskRegisterInst/N_2 ));
  SLICE_426 SLICE_426( .D1(RESET), .C1(N_316), .B1(N_318), .A1(N_314), 
    .D0(N_447), .C0(N_459), .B0(\coreInst/ALU_R[2] ), 
    .A0(\coreInst/REGA_DOUT[2] ), .DI0(\DOUT[2] ), 
    .CE(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_0_sqmuxa ), 
    .CLK(PIN_CLK_X1_c), .F0(\DOUT[2] ), 
    .Q0(\mcuResourcesInst.interruptMaskRegisterInst.MASK_REG[2] ), 
    .F1(\mcuResourcesInst/EN_RAM ));
  mcuResourcesInst_interruptMaskRegisterInst_SLICE_427 
    \mcuResourcesInst/interruptMaskRegisterInst/SLICE_427 ( 
    .D1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[3] ), 
    .B1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[2] ), 
    .A1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[1] ), 
    .D0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[5] ), 
    .C0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[6] ), 
    .A0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[7] ), 
    .DI0(\mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[2] ), 
    .M0(\mcuResourcesInst/interruptMaskRegisterInst/N_2 ), .CLK(PIN_CLK_X1_c), 
    .OFX0(\mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[2] ), 
    .Q0(\mcuResourcesInst.interruptMaskRegisterInst.PRI_REG[2] ));
  mcuResourcesInst_UARTInst_SLICE_428 \mcuResourcesInst/UARTInst/SLICE_428 ( 
    .D1(\mcuResourcesInst/UART_MAP_0_a2_RNIFEBT ), .C1(PIN_RDN_c), 
    .B1(\mcuResourcesInst/UARTInst/DATA_AVAILABLE ), 
    .A1(\mcuResourcesInst/UARTInst/N_179 ), 
    .D0(\mcuResourcesInst.memoryMapperInst.UART_MAP ), .C0(PIN_RDN_c), 
    .B0(RESET), .A0(\mcuResourcesInst/UARTInst/N_179 ), 
    .DI0(\mcuResourcesInst/UARTInst/N_181_i ), 
    .CE(\mcuResourcesInst/UARTInst/DATA_AVAILABLE_R_1_sqmuxa_i_0 ), 
    .CLK(PIN_CLK_X1_c), .F0(\mcuResourcesInst/UARTInst/N_181_i ), 
    .Q0(\mcuResourcesInst/DATA_AVAILABLE_R ), 
    .F1(\mcuResourcesInst/UARTInst/DATA_AVAILABLE_R_1_sqmuxa_i_0 ));
  mcuResourcesInst_UARTInst_SLICE_429 \mcuResourcesInst/UARTInst/SLICE_429 ( 
    .D1(\mcuResourcesInst/DATA_AVAILABLE_R ), .C1(N_332), 
    .A1(\mcuResourcesInst/UARTInst/RX_BYTE[3] ), .D0(N_332), 
    .C0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[3] ), 
    .A0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[3] ), 
    .DI0(\mcuResourcesInst/UARTInst/DOUT_7[3] ), .M0(N_330), .CE(RESET_i), 
    .LSR(\mcuResourcesInst/UARTInst/DOUT_20 ), .CLK(PIN_CLK_X1_c), 
    .OFX0(\mcuResourcesInst/UARTInst/DOUT_7[3] ), 
    .Q0(\mcuResourcesInst/DIN_UART[3] ));
  mcuResourcesInst_UARTInst_SLICE_430 \mcuResourcesInst/UARTInst/SLICE_430 ( 
    .D1(\mcuResourcesInst/UARTInst/RX_BYTE[5] ), 
    .C1(\mcuResourcesInst/UARTInst/N_179 ), .B1(\mcuResourcesInst/RD_UART ), 
    .A1(\mcuResourcesInst/UARTInst/DOUT_7_m_0_a2_0[5] ), 
    .D0(\mcuResourcesInst.memoryMapperInst.UART_MAP ), .C0(PIN_RDN_c), 
    .B0(\mcuResourcesInst/UARTInst/N_139 ), 
    .DI1(\mcuResourcesInst/UARTInst/DOUT_7[5] ), 
    .DI0(\mcuResourcesInst/UARTInst/N_129_i ), .CE(RESET_i), 
    .CLK(PIN_CLK_X1_c), .F0(\mcuResourcesInst/UARTInst/N_129_i ), 
    .Q0(\mcuResourcesInst/DIN_UART[4] ), 
    .F1(\mcuResourcesInst/UARTInst/DOUT_7[5] ), 
    .Q1(\mcuResourcesInst/DIN_UART[5] ));
  mcuResourcesInst_UARTInst_SLICE_431 \mcuResourcesInst/UARTInst/SLICE_431 ( 
    .D1(N_332), .C1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[6] ), 
    .A1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[6] ), 
    .D0(\mcuResourcesInst/UARTInst/N_23 ), .C0(N_332), .B0(N_330), 
    .A0(\mcuResourcesInst/UARTInst/RX_BYTE[6] ), 
    .DI0(\mcuResourcesInst/UARTInst/DOUT_7[6] ), .CE(RESET_i), 
    .LSR(\mcuResourcesInst/UARTInst/DOUT_20 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/DOUT_7[6] ), 
    .Q0(\mcuResourcesInst/DIN_UART[6] ), .F1(\mcuResourcesInst/UARTInst/N_23 ));
  mcuResourcesInst_UARTInst_SLICE_432 \mcuResourcesInst/UARTInst/SLICE_432 ( 
    .D1(N_332), .C1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[7] ), .B1(N_330), 
    .A1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[7] ), 
    .D0(\mcuResourcesInst.UARTInst.RX_BYTE[7] ), 
    .C0(\mcuResourcesInst/RD_UART ), .B0(\mcuResourcesInst/UARTInst/N_179 ), 
    .A0(\mcuResourcesInst/UARTInst/DOUT_7_m_0_a2_0[7] ), 
    .DI0(\mcuResourcesInst/UARTInst/DOUT_7[7] ), .CE(RESET_i), 
    .CLK(PIN_CLK_X1_c), .F0(\mcuResourcesInst/UARTInst/DOUT_7[7] ), 
    .Q0(\mcuResourcesInst/DIN_UART[7] ), 
    .F1(\mcuResourcesInst/UARTInst/DOUT_7_m_0_a2_0[7] ));
  mcuResourcesInst_UARTInst_SLICE_433 \mcuResourcesInst/UARTInst/SLICE_433 ( 
    .D1(N_332), .C1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[10] ), 
    .B1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[10] ), 
    .D0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[9] ), .C0(N_332), 
    .B0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[9] ), 
    .DI1(\mcuResourcesInst/UARTInst/N_27 ), 
    .DI0(\mcuResourcesInst/UARTInst/N_26 ), .CE(RESET_i), 
    .LSR(\mcuResourcesInst/UARTInst/DOUT_23 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/N_26 ), .Q0(\mcuResourcesInst/DIN_UART[9] ), 
    .F1(\mcuResourcesInst/UARTInst/N_27 ), 
    .Q1(\mcuResourcesInst/DIN_UART[10] ));
  mcuResourcesInst_UARTInst_SLICE_434 \mcuResourcesInst/UARTInst/SLICE_434 ( 
    .D1(N_332), .C1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[12] ), 
    .B1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[12] ), .D0(N_332), 
    .C0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[11] ), 
    .A0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[11] ), 
    .DI1(\mcuResourcesInst/UARTInst/N_29 ), 
    .DI0(\mcuResourcesInst/UARTInst/N_28 ), .CE(RESET_i), 
    .LSR(\mcuResourcesInst/UARTInst/DOUT_23 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/N_28 ), 
    .Q0(\mcuResourcesInst/DIN_UART[11] ), 
    .F1(\mcuResourcesInst/UARTInst/N_29 ), 
    .Q1(\mcuResourcesInst/DIN_UART[12] ));
  mcuResourcesInst_UARTInst_SLICE_435 \mcuResourcesInst/UARTInst/SLICE_435 ( 
    .D1(N_332), .C1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[14] ), 
    .B1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[14] ), .D0(N_332), 
    .C0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[13] ), 
    .B0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[13] ), 
    .DI1(\mcuResourcesInst/UARTInst/N_31 ), 
    .DI0(\mcuResourcesInst/UARTInst/N_30 ), .CE(RESET_i), 
    .LSR(\mcuResourcesInst/UARTInst/DOUT_23 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/N_30 ), 
    .Q0(\mcuResourcesInst/DIN_UART[13] ), 
    .F1(\mcuResourcesInst/UARTInst/N_31 ), 
    .Q1(\mcuResourcesInst/DIN_UART[14] ));
  mcuResourcesInst_SLICE_436 \mcuResourcesInst/SLICE_436 ( 
    .D1(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[6] ), .B1(N_332), 
    .A1(\mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[6] ), .D0(N_332), 
    .B0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[15] ), 
    .A0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[15] ), 
    .DI0(\mcuResourcesInst/UARTInst/N_32 ), .CE(RESET_i), 
    .LSR(\mcuResourcesInst/UARTInst/DOUT_23 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/N_32 ), 
    .Q0(\mcuResourcesInst/DIN_UART[15] ), .F1(\mcuResourcesInst/N_16 ));
  mcuResourcesInst_interruptMaskRegisterInst_SLICE_437 
    \mcuResourcesInst/interruptMaskRegisterInst/SLICE_437 ( 
    .D1(\mcuResourcesInst/MASK_REG[7] ), 
    .B1(\mcuResourcesInst/DATA_AVAILABLE_R ), .A1(\mcuResourcesInst/TXI_R ), 
    .C0(\mcuResourcesInst/MASK_REG[4] ), .A0(PIN_INT4_c), 
    .DI1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[7] ), 
    .DI0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[4] ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[4] ), 
    .Q0(\mcuResourcesInst/INTS_REG[4] ), 
    .F1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[7] ), 
    .Q1(\mcuResourcesInst/INTS_REG[7] ));
  SLICE_438 SLICE_438( .D1(\coreInst.REGA_DOUT[7] ), .C1(N_447), .B1(N_459), 
    .A1(\coreInst.ALU_R[7] ), .D0(\coreInst/REGA_DOUT[4] ), .C0(N_447), 
    .B0(N_459), .A0(\coreInst/ALU_R[4] ), .DI1(\DOUT[7] ), .DI0(\DOUT[4] ), 
    .CE(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_0_sqmuxa ), 
    .CLK(PIN_CLK_X1_c), .F0(\DOUT[4] ), .Q0(\mcuResourcesInst/MASK_REG[4] ), 
    .F1(\DOUT[7] ), .Q1(\mcuResourcesInst/MASK_REG[7] ));
  mcuResourcesInst_interruptMaskRegisterInst_SLICE_439 
    \mcuResourcesInst/interruptMaskRegisterInst/SLICE_439 ( 
    .D1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[2] ), 
    .C1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[1] ), 
    .B1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[3] ), 
    .C0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[5] ), 
    .B0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[7] ), 
    .A0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[6] ), 
    .DI0(\mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[1] ), 
    .M0(\mcuResourcesInst/interruptMaskRegisterInst/N_2 ), .CLK(PIN_CLK_X1_c), 
    .OFX0(\mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[1] ), 
    .Q0(\mcuResourcesInst/PRI_REG[1] ));
  SLICE_440 SLICE_440( .D1(\coreInst/busControllerInst/ADDR_BUF_i_1[5] ), 
    .C1(\coreInst/ALU_R[5] ), .B1(\coreInst/N_976 ), 
    .A1(\coreInst/busControllerInst/N_591 ), 
    .D0(\coreInst/busControllerInst/ADDR_m4_e_0_2 ), 
    .C0(\coreInst/RESULT_13_RNI4AK82[10] ), .B0(\coreInst/un21_RESULT[10] ), 
    .A0(\coreInst/busControllerInst/ADDR_BUF_i_2[10] ), .DI0(N_156_i), 
    .CE(\mcuResourcesInst/EN_RAM ), .CLK(PIN_CLK_X1_c), .F0(N_156_i), 
    .Q0(\mcuResourcesInst/RAMInst/addr10_ff ), .F1(N_164_i));
  SLICE_441 SLICE_441( .D1(\coreInst/busControllerInst/ADDR_m4_0_a2_2 ), 
    .C1(\coreInst/un21_RESULT[9] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUF_i_2[9] ), 
    .A1(\coreInst/RESULT_13_RNIR8583[9] ), .D0(\coreInst/un21_RESULT[11] ), 
    .C0(\coreInst/busControllerInst/ADDR_m4_0_a2_2 ), 
    .B0(\coreInst/RESULT_13_RNIVG213[11] ), 
    .A0(\coreInst/busControllerInst/ADDR_BUF_i_2[11] ), .DI0(N_322_i), 
    .CE(\mcuResourcesInst/EN_RAM ), .CLK(PIN_CLK_X1_c), .F0(N_322_i), 
    .Q0(\mcuResourcesInst/RAMInst/addr11_ff ), .F1(N_324_i));
  mcuResourcesInst_UARTInst_SLICE_442 \mcuResourcesInst/UARTInst/SLICE_442 ( 
    .D1(\mcuResourcesInst.memoryMapperInst.UART_MAP ), .C1(PIN_RDN_c), 
    .B1(N_330), .A1(RESET), .D0(\mcuResourcesInst.memoryMapperInst.UART_MAP ), 
    .C0(\mcuResourcesInst/WRITE ), .B0(N_330), .A0(RESET), 
    .DI0(\mcuResourcesInst/UARTInst/TXI_R_0_sqmuxa_i ), 
    .CE(\mcuResourcesInst/UARTInst/TXI_R_1_sqmuxa_i ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/TXI_R_0_sqmuxa_i ), 
    .Q0(\mcuResourcesInst/TXI_R ), .F1(\mcuResourcesInst/UARTInst/DOUT_23 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_443 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_443 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[0] ), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[2] ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32 ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[1] ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_RX_DV9_i_0 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_1_sqmuxa_2 ), 
    .A0(\mcuResourcesInst/UARTInst/DATA_AVAILABLE ), 
    .DI0(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV_r ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV_r ), 
    .Q0(\mcuResourcesInst/UARTInst/DATA_AVAILABLE ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_RX_DV9_i_0 ));
  mcuResourcesInst_SLICE_444 \mcuResourcesInst/SLICE_444 ( 
    .D1(\mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[3] ), .C1(N_332), 
    .A1(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[3] ), 
    .D0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[8] ), .C0(N_332), 
    .A0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[8] ), 
    .DI0(\mcuResourcesInst/UARTInst/N_25 ), .CE(RESET_i), 
    .LSR(\mcuResourcesInst/UARTInst/DOUT_23 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/N_25 ), 
    .Q0(\mcuResourcesInst/UARTInst/DIN_UART[8] ), .F1(\mcuResourcesInst/N_13 ));
  SLICE_452 SLICE_452( .D1(N_459), .C1(\coreInst/REGA_DOUT[1] ), 
    .B1(\coreInst/ALU_R[1] ), .A1(N_447), .D0(\coreInst/ALU_R[0] ), 
    .C0(\coreInst/REGA_DOUT[0] ), .B0(N_459), .A0(N_447), .DI1(\DOUT[1] ), 
    .DI0(\DOUT[0] ), .CE(\mcuResourcesInst/UARTInst/RX_CLK_DIV_1_sqmuxa ), 
    .CLK(PIN_CLK_X1_c), .F0(\DOUT[0] ), 
    .Q0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[0] ), .F1(\DOUT[1] ), 
    .Q1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[1] ));
  SLICE_454 SLICE_454( .C1(\coreInst/GROUPX[0] ), .B1(\coreInst/GROUPX[1] ), 
    .A1(\coreInst/DEBUG_MODE ), .D0(\coreInst/REGA_DOUT[3] ), .C0(N_447), 
    .B0(N_459), .A0(\coreInst/ALU_R[3] ), .DI0(\DOUT[3] ), .M1(\DOUT[4] ), 
    .CE(\mcuResourcesInst/UARTInst/RX_CLK_DIV_1_sqmuxa ), .CLK(PIN_CLK_X1_c), 
    .F0(\DOUT[3] ), .Q0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[3] ), .F1(N_459), 
    .Q1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[4] ));
  SLICE_455 SLICE_455( .D1(N_459), .C1(\coreInst/REGA_DOUT[6] ), .B1(N_447), 
    .A1(\coreInst/ALU_R[6] ), .D0(N_459), .C0(\coreInst/REGA_DOUT[5] ), 
    .B0(N_447), .A0(\coreInst/ALU_R[5] ), .DI1(\DOUT[6] ), .DI0(\DOUT[5] ), 
    .CE(\mcuResourcesInst/UARTInst/RX_CLK_DIV_1_sqmuxa ), .CLK(PIN_CLK_X1_c), 
    .F0(\DOUT[5] ), .Q0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[5] ), 
    .F1(\DOUT[6] ), .Q1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[6] ));
  SLICE_457 SLICE_457( .C1(\coreInst/ALU_R[9] ), 
    .B1(\coreInst/busControllerInst/DOUT_BUF_i_0[9] ), .A1(N_459), 
    .D0(\coreInst/REGA_DOUT[8] ), 
    .C0(\coreInst/busControllerInst/DOUT_BUF_i_0[8] ), .A0(N_447), 
    .DI1(N_189_i), .DI0(N_270_i), 
    .CE(\mcuResourcesInst/UARTInst/RX_CLK_DIV_1_sqmuxa ), .CLK(PIN_CLK_X1_c), 
    .F0(N_270_i), .Q0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[8] ), .F1(N_189_i), 
    .Q1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[9] ));
  SLICE_458 SLICE_458( .D1(\coreInst/busControllerInst/DOUT_BUF_i_0[11] ), 
    .B1(\coreInst/ALU_R[11] ), .A1(N_459), .C0(\coreInst.ALU_R[10] ), 
    .B0(\coreInst.busControllerInst.DOUT_BUF_i_0[10] ), .A0(N_459), 
    .DI1(N_342_i), .DI0(N_187_i), 
    .CE(\mcuResourcesInst/UARTInst/RX_CLK_DIV_1_sqmuxa ), .CLK(PIN_CLK_X1_c), 
    .F0(N_187_i), .Q0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[10] ), 
    .F1(N_342_i), .Q1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[11] ));
  SLICE_459 SLICE_459( .D1(\coreInst/ALU_R[13] ), .B1(N_459), 
    .A1(\coreInst/busControllerInst/DOUT_BUF_i_0[13] ), 
    .C0(\coreInst/busControllerInst/DOUT_BUF_i_0[12] ), 
    .B0(\coreInst/ALU_R[12] ), .A0(N_459), .DI1(N_338_i), .DI0(N_340_i), 
    .CE(\mcuResourcesInst/UARTInst/RX_CLK_DIV_1_sqmuxa ), .CLK(PIN_CLK_X1_c), 
    .F0(N_340_i), .Q0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[12] ), 
    .F1(N_338_i), .Q1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[13] ));
  SLICE_460 SLICE_460( .D1(N_459), .C1(\coreInst/ALU_R[15] ), 
    .A1(\coreInst/busControllerInst/DOUT_BUF_i_0[15] ), .D0(N_459), 
    .B0(\coreInst/ALU_R[14] ), 
    .A0(\coreInst/busControllerInst/DOUT_BUF_i_0[14] ), .DI1(N_183_i), 
    .DI0(N_185_i), .CE(\mcuResourcesInst/UARTInst/RX_CLK_DIV_1_sqmuxa ), 
    .CLK(PIN_CLK_X1_c), .F0(N_185_i), 
    .Q0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[14] ), .F1(N_183_i), 
    .Q1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[15] ));
  SLICE_461 SLICE_461( .D1(\coreInst/PC_OFFSETX[1] ), 
    .B1(\mcuResourcesInst.DIN_UART[1] ), 
    .A1(\mcuResourcesInst.memoryMapperInst.UART_MAP ), 
    .D0(\mcuResourcesInst/UARTInst/N_179 ), .C0(RESET), 
    .B0(\mcuResourcesInst/WRITE ), 
    .A0(\mcuResourcesInst.memoryMapperInst.UART_MAP ), 
    .DI0(\mcuResourcesInst/UARTInst/START_TX_1_sqmuxa ), 
    .CE(\mcuResourcesInst/UARTInst/START_TX_1_sqmuxa_1_i ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/START_TX_1_sqmuxa ), 
    .Q0(\mcuResourcesInst/UARTInst/START_TX ), 
    .F1(\coreInst/programCounterInst/ARGA_0_iv_i_a2_0[1] ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_462 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_462 ( 
    .C1(\mcuResourcesInst/UARTInst/START_TX ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[1] ), 
    .C0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[1] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_i[1] ), 
    .CE(\mcuResourcesInst/UARTInst/uartTxInst/N_43_i ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_i[1] ), 
    .Q0(\mcuResourcesInst/UARTInst/TX_ACTIVE ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_ns_0_a2_0_0[0] ));
  SLICE_471 SLICE_471( .M1(N_183_i), .M0(N_185_i), 
    .CE(\mcuResourcesInst/UARTInst/TX_CLK_DIV_1_sqmuxa ), .CLK(PIN_CLK_X1_c), 
    .F0(GND), .Q0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[14] ), 
    .Q1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[15] ));
  mcuResourcesInst_SLICE_472 \mcuResourcesInst/SLICE_472 ( .D1(RESET), 
    .C1(PIN_WRN0), .B1(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .A1(PIN_WRN1), .D0(RESET), .C0(\mcuResourcesInst/WRITE ), 
    .B0(\mcuResourcesInst.memoryMapperInst.UART_MAP ), 
    .A0(\mcuResourcesInst/UARTInst/N_179 ), 
    .DI0(\mcuResourcesInst/UARTInst/START_TX_1_sqmuxa_i ), 
    .CE(\mcuResourcesInst/UARTInst/TX_COMPLETE_R_1_sqmuxa_i ), 
    .CLK(PIN_CLK_X1_c), .F0(\mcuResourcesInst/UARTInst/START_TX_1_sqmuxa_i ), 
    .Q0(\mcuResourcesInst/UARTInst/TX_COMPLETE_R ), .F1(WR_GPIO_i));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_473 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_473 ( 
    .D1(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[1] ), .C1(RESET), 
    .B1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15 ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[0] ), 
    .D0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[1] ), 
    .C0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15 ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[0] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartTxInst/o_TX_Active_1_sqmuxa ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/o_TX_Active_1_sqmuxa ), 
    .Q0(\mcuResourcesInst/UARTInst/TX_DONE ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_0_RNIBNIL ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_474 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_474 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/N_105 ), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[0] ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/N_136 ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[1] ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/N_105 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[0] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 ), 
    .DI1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index_5[1] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartRXInst/N_135_i ), 
    .LSR(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/N_135_i ), 
    .Q0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[0] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index_5[1] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[1] ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_475 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_475 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 ), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[2] ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/N_105 ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_RX_Byte_1[3] ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[1] ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[2] ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/N_136 ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/CO0 ), 
    .DI0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index_5[2] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index_5[2] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[2] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/N_136 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_476 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_476 ( 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_1_0_S0 ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_0_0_S1 ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .DI1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[1] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[0] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[0] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[0] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[1] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[1] ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_477 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_477 ( 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_3_0_S0 ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_1_0_S1 ), 
    .DI1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[3] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[2] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[2] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[2] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[3] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[3] ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_478 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_478 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_5_0_S0 ), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_3_0_S1 ), 
    .DI1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[5] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[4] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[4] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[4] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[5] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[5] ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_479 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_479 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_7_0_S0 ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_5_0_S1 ), 
    .DI1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[7] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[6] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[6] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[6] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[7] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[7] ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_480 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_480 ( 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_9_0_S0 ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_7_0_S1 ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .DI1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[9] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[8] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[8] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[8] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[9] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[9] ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_481 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_481 ( 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_11_0_S0 ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_9_0_S1 ), 
    .DI1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[11] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[10] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[10] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[10] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[11] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[11] ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_482 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_482 ( 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_13_0_S0 ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_11_0_S1 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .DI1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[13] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[12] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[12] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[12] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[13] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[13] ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_483 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_483 ( 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_s_15_0_S0 ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_13_0_S1 ), 
    .DI1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[15] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[14] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[14] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[14] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[15] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[15] ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_484 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_484 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[2] ), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/N_155 ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[1] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/N_164 ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/N_165 ), .C0(PIN_RXD_c), 
    .B0(\mcuResourcesInst.N_167 ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 ), 
    .DI1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_8[1] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_8[0] ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_8[0] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[0] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_8[1] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[1] ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_485 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_485 ( 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[0] ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[2] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[1] ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32 ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[0] ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[2] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[1] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_1_sqmuxa_2 ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_1_sqmuxa_2 ), 
    .Q0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[2] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_486 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_486 ( 
    .D1(\mcuResourcesInst/UARTInst/uartTxInst/CO0 ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[1] ), 
    .D0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15 ), 
    .C0(\mcuResourcesInst/UARTInst/uartTxInst/N_29_3 ), .B0(RESET), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[0] ), 
    .DI1(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index_RNO[1] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index_RNO[0] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_TX_Data_0_sqmuxa_1 ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index_RNO[0] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[0] ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index_RNO[1] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[1] ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_487 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_487 ( 
    .D1(\mcuResourcesInst/UARTInst/uartTxInst/N_29_3 ), 
    .C1(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[0] ), .B1(RESET), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15 ), 
    .D0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[1] ), 
    .B0(\mcuResourcesInst/UARTInst/uartTxInst/CO0 ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[2] ), 
    .DI0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index_RNO[2] ), 
    .LSR(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_TX_Data_0_sqmuxa_1 ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index_RNO[2] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[2] ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/CO0 ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_488 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_488 ( 
    .D1(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[1] ), 
    .B1(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[0] ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15 ), 
    .D0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_ns_0_a2_0_0[0] ), 
    .C0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_ns_0_a2_1_1[0] ), 
    .B0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[0] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15 ), 
    .DI1(\mcuResourcesInst/UARTInst/uartTxInst/N_26_i_i ), 
    .DI0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_ns[0] ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_ns[0] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[0] ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/N_26_i_i ), 
    .Q1(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[1] ));
  SLICE_489 SLICE_489( .C1(\coreInst/debugger/DEBUG_READ_MUX_IN_H[3] ), 
    .B1(\coreInst/debugger/DEBUG_READ_MUX_IN_L[3] ), 
    .A1(\coreInst/debugger/EN_DH ), .D0(\coreInst/DIN_LATCHED[1] ), 
    .C0(\coreInst/debugger/N_475 ), .B0(\coreInst/REGB_DOUT[1] ), 
    .A0(\coreInst/N_460 ), .M1(\DOUT[1] ), .M0(\DOUT[0] ), 
    .CE(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data_0_sqmuxa_1 ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[1] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[0] ), 
    .F1(\DEBUG_DOUT[3] ), 
    .Q1(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[1] ));
  SLICE_490 SLICE_490( .D1(PIN_DEBUG_WRN_c), .C1(PIN_DEBUG_RDN_c), 
    .C0(\coreInst/debugger/addrL/PL ), .M1(\DOUT[3] ), .M0(\DOUT[2] ), 
    .CE(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data_0_sqmuxa_1 ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/debugger/addrL/PL_i ), 
    .Q0(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[2] ), 
    .F1(\coreInst/debugger/requestGen/dhReqReg/un1_DEBUG_WRN_uclk ), 
    .Q1(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[3] ));
  SLICE_491 SLICE_491( .B1(\coreInst/debugger/addrH/PL ), 
    .C0(\coreInst/fullALUInst/aluInst/madd_8[4] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_12 ), .M1(\DOUT[5] ), 
    .M0(\DOUT[4] ), 
    .CE(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data_0_sqmuxa_1 ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/fullALUInst/aluInst/un21_RESULT[4] ), 
    .Q0(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[4] ), 
    .F1(\coreInst/debugger/addrH/PL_i ), 
    .Q1(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[5] ));
  SLICE_492 SLICE_492( .D1(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[23] ), 
    .C1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[23] ), 
    .A1(\coreInst/madd_14[15] ), 
    .D0(\coreInst/fullALUInst/aluInst/un47_RESULT[10] ), 
    .C0(\coreInst/fullALUInst/aluInst/un47_RESULT[11] ), 
    .B0(\coreInst/fullALUInst/aluInst/un47_RESULT[13] ), 
    .A0(\coreInst/fullALUInst/aluInst/un47_RESULT[12] ), .M1(\DOUT[7] ), 
    .M0(\DOUT[6] ), 
    .CE(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data_0_sqmuxa_1 ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/fullALUInst/aluInst/OVER_i_1_a2_8 ), 
    .Q0(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[6] ), 
    .F1(\coreInst/fullALUInst/aluInst/PARITY_2_3_RNO ), 
    .Q1(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[7] ));
  mcuResourcesInst_interruptMaskRegisterInst_SLICE_493 
    \mcuResourcesInst/interruptMaskRegisterInst/SLICE_493 ( .D1(PIN_INT3_c), 
    .A1(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[3] ), 
    .D0(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[1] ), 
    .B0(PIN_INT1_c), 
    .DI1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[3] ), 
    .DI0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[1] ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[1] ), 
    .Q0(\mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[1] ), 
    .F1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[3] ), 
    .Q1(\mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[3] ));
  mcuResourcesInst_interruptMaskRegisterInst_SLICE_494 
    \mcuResourcesInst/interruptMaskRegisterInst/SLICE_494 ( .D1(PIN_INT6_c), 
    .C1(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[6] ), 
    .C0(PIN_INT5_c), 
    .A0(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[5] ), 
    .DI1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[6] ), 
    .DI0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[5] ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[5] ), 
    .Q0(\mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[5] ), 
    .F1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[6] ), 
    .Q1(\mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[6] ));
  SLICE_495 SLICE_495( .C1(\coreInst/fullALUInst/aluInst/N_11_0 ), 
    .B1(\coreInst/ALUB_DATA[1] ), .A1(\coreInst/fullALUInst/aluInst/N_13_0 ), 
    .D0(\coreInst/DEBUG_MODE_rep1 ), .C0(\coreInst/DEBUG_ADDR_OUT[1] ), 
    .M1(\DOUT[1] ), .M0(\DOUT[0] ), 
    .CE(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_0_sqmuxa ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/N_1001 ), 
    .Q0(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[0] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_27_0 ), 
    .Q1(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[1] ));
  SLICE_496 SLICE_496( .C1(\coreInst/programCounterInst/N_973 ), 
    .B1(\coreInst/programCounterInst/INTR1[2] ), 
    .D0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .C0(\PIN_DIN_GPIO_c[6] ), .A0(\mcuResourcesInst/DIN_UART[6] ), 
    .M1(\DOUT[5] ), .M0(\DOUT[3] ), 
    .CE(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_0_sqmuxa ), 
    .CLK(PIN_CLK_X1_c), .F0(\mcuResourcesInst/memoryMapperInst/N_51 ), 
    .Q0(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[3] ), 
    .F1(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_3L3 ), 
    .Q1(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[5] ));
  mcuResourcesInst_SLICE_497 \mcuResourcesInst/SLICE_497 ( .D1(N_330), 
    .C1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[5] ), .B1(N_332), 
    .A1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[5] ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[0] ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32 ), 
    .M0(\DOUT[6] ), 
    .CE(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_0_sqmuxa ), 
    .CLK(PIN_CLK_X1_c), .F0(\mcuResourcesInst/UARTInst/uartRXInst/N_155 ), 
    .Q0(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[6] ), 
    .F1(\mcuResourcesInst/UARTInst/DOUT_7_m_0_a2_0[5] ));
  mcuResourcesInst_interruptMaskRegisterInst_SLICE_498 
    \mcuResourcesInst/interruptMaskRegisterInst/SLICE_498 ( 
    .D1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[3] ), 
    .B1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[1] ), 
    .A1(\mcuResourcesInst/interruptMaskRegisterInst/INTS[2] ), 
    .D0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[6] ), 
    .C0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[5] ), 
    .A0(\mcuResourcesInst/interruptMaskRegisterInst/INTS[7] ), 
    .DI0(\mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[0] ), 
    .M0(\mcuResourcesInst/interruptMaskRegisterInst/N_2 ), .CLK(PIN_CLK_X1_c), 
    .OFX0(\mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[0] ), 
    .Q0(\mcuResourcesInst/interruptMaskRegisterInst/PRI_REG[0] ));
  mcuResourcesInst_interruptMaskRegisterInst_MASK_REG_RNIDJO72_0__SLICE_499 
    \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/SLICE_499 
    ( .D1(N_332), 
    .B1(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[0] ), .D0(N_332), 
    .C0(PIN_RDN_c), 
    .B0(\mcuResourcesInst/interruptMaskRegisterInst/PRI_REG[0] ), .A0(RESET), 
    .M0(\mcuResourcesInst.memoryMapperInst.CPU_m7_e_1 ), 
    .OFX0(\mcuResourcesInst.interruptMaskRegisterInst.DOUT_i1_mux_i_0 ));
  mcuResourcesInst_UARTInst_uartTxInst_o_TX_Serial_2_6_SLICE_500 
    \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/SLICE_500 ( 
    .D1(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[7] ), 
    .C1(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[0] ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[6] ), 
    .D0(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[5] ), 
    .B0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[0] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[4] ), 
    .M1(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[2] ), 
    .M0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[1] ), 
    .FXB(\mcuResourcesInst/UARTInst/uartTxInst/N_124 ), 
    .FXA(\mcuResourcesInst/UARTInst/uartTxInst/N_121 ), 
    .OFX0(\mcuResourcesInst/UARTInst/uartTxInst/N_124 ), 
    .OFX1(\mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2 ));
  mcuResourcesInst_UARTInst_uartTxInst_o_TX_Serial_2_3_SLICE_501 
    \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/SLICE_501 ( 
    .C1(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[2] ), 
    .B1(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[3] ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[0] ), 
    .D0(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[1] ), 
    .C0(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[0] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[0] ), 
    .M0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[1] ), 
    .OFX0(\mcuResourcesInst/UARTInst/uartTxInst/N_121 ));
  mcuResourcesInst_UARTInst_DOUT_RNO_0_4__SLICE_502 
    \mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/SLICE_502 ( 
    .C1(\mcuResourcesInst/UARTInst/RX_BYTE[4] ), .B1(N_332), 
    .A1(\mcuResourcesInst/TXI_R ), 
    .D0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[4] ), 
    .C0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[4] ), .B0(N_332), .M0(N_330), 
    .OFX0(\mcuResourcesInst/UARTInst/N_139 ));
  mcuResourcesInst_UARTInst_DOUT_RNO_0_2__SLICE_503 
    \mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/SLICE_503 ( 
    .D1(\mcuResourcesInst/UARTInst/TX_COMPLETE_R ), 
    .C1(\mcuResourcesInst/UARTInst/RX_BYTE[2] ), .B1(N_332), 
    .D0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[2] ), .B0(N_332), 
    .A0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[2] ), .M0(N_330), 
    .OFX0(\mcuResourcesInst/UARTInst/N_140 ));
  mcuResourcesInst_UARTInst_DOUT_RNO_0_1__SLICE_504 
    \mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/SLICE_504 ( .D1(N_332), 
    .C1(\mcuResourcesInst/UARTInst/RX_BYTE[1] ), 
    .A1(\mcuResourcesInst/UARTInst/TX_ACTIVE_R ), .D0(N_332), 
    .C0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[1] ), 
    .B0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[1] ), .M0(N_330), 
    .OFX0(\mcuResourcesInst/UARTInst/N_125 ));
  mcuResourcesInst_UARTInst_DOUT_RNO_0_0__SLICE_505 
    \mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/SLICE_505 ( .D1(N_332), 
    .C1(\mcuResourcesInst/DATA_AVAILABLE_R ), 
    .A1(\mcuResourcesInst/UARTInst/RX_BYTE[0] ), .D0(N_332), 
    .B0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[0] ), 
    .A0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[0] ), .M0(N_330), 
    .OFX0(\mcuResourcesInst/UARTInst/N_141 ));
  mcuResourcesInst_RAMInst_mux_0_MUX21_SLICE_506 
    \mcuResourcesInst/RAMInst/mux_0/MUX21/SLICE_506 ( 
    .D1(\mcuResourcesInst/RAMInst/mdout0_2_16 ), 
    .C1(\mcuResourcesInst/RAMInst/mdout0_3_16 ), 
    .A1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .D0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .C0(\mcuResourcesInst/RAMInst/mdout0_0_16 ), 
    .A0(\mcuResourcesInst/RAMInst/mdout0_1_16 ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst/DIN_RAM[15] ));
  mcuResourcesInst_RAMInst_mux_15_MUX21_SLICE_507 
    \mcuResourcesInst/RAMInst/mux_15/MUX21/SLICE_507 ( 
    .C1(\mcuResourcesInst/RAMInst/mdout0_3_0 ), 
    .B1(\mcuResourcesInst/RAMInst/mdout0_2_0 ), 
    .A1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .C0(\mcuResourcesInst/RAMInst/mdout0_1_0 ), 
    .B0(\mcuResourcesInst/RAMInst/mdout0_0_0 ), 
    .A0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst/DIN_RAM[0] ));
  mcuResourcesInst_RAMInst_mux_14_MUX21_SLICE_508 
    \mcuResourcesInst/RAMInst/mux_14/MUX21/SLICE_508 ( 
    .D1(\mcuResourcesInst/RAMInst/mdout0_3_1 ), 
    .C1(\mcuResourcesInst/RAMInst/mdout0_2_1 ), 
    .A1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .C0(\mcuResourcesInst/RAMInst/mdout0_0_1 ), 
    .B0(\mcuResourcesInst/RAMInst/mdout0_1_1 ), 
    .A0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst.DIN_RAM[1] ));
  mcuResourcesInst_RAMInst_mux_13_MUX21_SLICE_509 
    \mcuResourcesInst/RAMInst/mux_13/MUX21/SLICE_509 ( 
    .D1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .C1(\mcuResourcesInst/RAMInst/mdout0_2_2 ), 
    .A1(\mcuResourcesInst/RAMInst/mdout0_3_2 ), 
    .D0(\mcuResourcesInst/RAMInst/mdout0_1_2 ), 
    .C0(\mcuResourcesInst/RAMInst/mdout0_0_2 ), 
    .A0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst/DIN_RAM[2] ));
  mcuResourcesInst_RAMInst_mux_12_MUX21_SLICE_510 
    \mcuResourcesInst/RAMInst/mux_12/MUX21/SLICE_510 ( 
    .D1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .C1(\mcuResourcesInst/RAMInst/mdout0_3_3 ), 
    .A1(\mcuResourcesInst/RAMInst/mdout0_2_3 ), 
    .D0(\mcuResourcesInst/RAMInst/mdout0_1_3 ), 
    .C0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .B0(\mcuResourcesInst/RAMInst/mdout0_0_3 ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst/DIN_RAM[3] ));
  mcuResourcesInst_RAMInst_mux_11_MUX21_SLICE_511 
    \mcuResourcesInst/RAMInst/mux_11/MUX21/SLICE_511 ( 
    .D1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .B1(\mcuResourcesInst/RAMInst/mdout0_2_4 ), 
    .A1(\mcuResourcesInst/RAMInst/mdout0_3_4 ), 
    .D0(\mcuResourcesInst/RAMInst/mdout0_0_4 ), 
    .B0(\mcuResourcesInst/RAMInst/mdout0_1_4 ), 
    .A0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst/DIN_RAM[4] ));
  mcuResourcesInst_RAMInst_mux_10_MUX21_SLICE_512 
    \mcuResourcesInst/RAMInst/mux_10/MUX21/SLICE_512 ( 
    .D1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .C1(\mcuResourcesInst/RAMInst/mdout0_3_5 ), 
    .B1(\mcuResourcesInst/RAMInst/mdout0_2_5 ), 
    .D0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .C0(\mcuResourcesInst/RAMInst/mdout0_0_5 ), 
    .A0(\mcuResourcesInst/RAMInst/mdout0_1_5 ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst/DIN_RAM[5] ));
  mcuResourcesInst_RAMInst_mux_9_MUX21_SLICE_513 
    \mcuResourcesInst/RAMInst/mux_9/MUX21/SLICE_513 ( 
    .D1(\mcuResourcesInst/RAMInst/mdout0_3_6 ), 
    .C1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .A1(\mcuResourcesInst/RAMInst/mdout0_2_6 ), 
    .C0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .B0(\mcuResourcesInst/RAMInst/mdout0_0_6 ), 
    .A0(\mcuResourcesInst/RAMInst/mdout0_1_6 ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst/DIN_RAM[6] ));
  mcuResourcesInst_RAMInst_mux_8_MUX21_SLICE_514 
    \mcuResourcesInst/RAMInst/mux_8/MUX21/SLICE_514 ( 
    .C1(\mcuResourcesInst/RAMInst/mdout0_2_7 ), 
    .B1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .A1(\mcuResourcesInst/RAMInst/mdout0_3_7 ), 
    .D0(\mcuResourcesInst/RAMInst/mdout0_1_7 ), 
    .B0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .A0(\mcuResourcesInst/RAMInst/mdout0_0_7 ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst/DIN_RAM[7] ));
  mcuResourcesInst_RAMInst_mux_7_MUX21_SLICE_515 
    \mcuResourcesInst/RAMInst/mux_7/MUX21/SLICE_515 ( 
    .D1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .C1(\mcuResourcesInst/RAMInst/mdout0_3_9 ), 
    .B1(\mcuResourcesInst/RAMInst/mdout0_2_9 ), 
    .D0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .C0(\mcuResourcesInst/RAMInst/mdout0_0_9 ), 
    .B0(\mcuResourcesInst/RAMInst/mdout0_1_9 ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst/RAMInst/DIN_RAM[8] ));
  mcuResourcesInst_RAMInst_mux_6_MUX21_SLICE_516 
    \mcuResourcesInst/RAMInst/mux_6/MUX21/SLICE_516 ( 
    .D1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .C1(\mcuResourcesInst/RAMInst/mdout0_2_10 ), 
    .A1(\mcuResourcesInst/RAMInst/mdout0_3_10 ), 
    .D0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .B0(\mcuResourcesInst/RAMInst/mdout0_1_10 ), 
    .A0(\mcuResourcesInst/RAMInst/mdout0_0_10 ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst/DIN_RAM[9] ));
  mcuResourcesInst_RAMInst_mux_5_MUX21_SLICE_517 
    \mcuResourcesInst/RAMInst/mux_5/MUX21/SLICE_517 ( 
    .C1(\mcuResourcesInst/RAMInst/mdout0_2_11 ), 
    .B1(\mcuResourcesInst/RAMInst/mdout0_3_11 ), 
    .A1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .D0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .C0(\mcuResourcesInst/RAMInst/mdout0_1_11 ), 
    .A0(\mcuResourcesInst/RAMInst/mdout0_0_11 ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst/DIN_RAM[10] ));
  mcuResourcesInst_RAMInst_mux_4_MUX21_SLICE_518 
    \mcuResourcesInst/RAMInst/mux_4/MUX21/SLICE_518 ( 
    .D1(\mcuResourcesInst/RAMInst/mdout0_2_12 ), 
    .C1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .B1(\mcuResourcesInst/RAMInst/mdout0_3_12 ), 
    .D0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .C0(\mcuResourcesInst/RAMInst/mdout0_1_12 ), 
    .B0(\mcuResourcesInst/RAMInst/mdout0_0_12 ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst/DIN_RAM[11] ));
  mcuResourcesInst_RAMInst_mux_3_MUX21_SLICE_519 
    \mcuResourcesInst/RAMInst/mux_3/MUX21/SLICE_519 ( 
    .D1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .C1(\mcuResourcesInst/RAMInst/mdout0_2_13 ), 
    .A1(\mcuResourcesInst/RAMInst/mdout0_3_13 ), 
    .D0(\mcuResourcesInst/RAMInst/mdout0_1_13 ), 
    .C0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .B0(\mcuResourcesInst/RAMInst/mdout0_0_13 ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst/DIN_RAM[12] ));
  mcuResourcesInst_RAMInst_mux_2_MUX21_SLICE_520 
    \mcuResourcesInst/RAMInst/mux_2/MUX21/SLICE_520 ( 
    .C1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .B1(\mcuResourcesInst/RAMInst/mdout0_2_14 ), 
    .A1(\mcuResourcesInst/RAMInst/mdout0_3_14 ), 
    .C0(\mcuResourcesInst/RAMInst/mdout0_1_14 ), 
    .B0(\mcuResourcesInst/RAMInst/mdout0_0_14 ), 
    .A0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst/DIN_RAM[13] ));
  mcuResourcesInst_RAMInst_mux_1_MUX21_SLICE_521 
    \mcuResourcesInst/RAMInst/mux_1/MUX21/SLICE_521 ( 
    .D1(\mcuResourcesInst/RAMInst/mdout0_2_15 ), 
    .C1(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .A1(\mcuResourcesInst/RAMInst/mdout0_3_15 ), 
    .D0(\mcuResourcesInst/RAMInst/addr10_ff ), 
    .C0(\mcuResourcesInst/RAMInst/mdout0_1_15 ), 
    .B0(\mcuResourcesInst/RAMInst/mdout0_0_15 ), 
    .M0(\mcuResourcesInst/RAMInst/addr11_ff ), 
    .OFX0(\mcuResourcesInst/DIN_RAM[14] ));
  mcuResourcesInst_memoryMapperInst_CPU_DIN_1_11__SLICE_522 
    \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/SLICE_522 ( 
    .D1(\mcuResourcesInst/DIN_RAM[11] ), .C1(\mcuResourcesInst/DIN_ROM[11] ), 
    .B1(\mcuResourcesInst.memoryMapperInst.un5_ROM_MAP ), 
    .D0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .C0(\mcuResourcesInst/DIN_UART[11] ), .A0(\PIN_DIN_GPIO_c[11] ), 
    .M0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ), 
    .OFX0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11] ));
  mcuResourcesInst_memoryMapperInst_CPU_DIN_1_12__SLICE_523 
    \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/SLICE_523 ( 
    .D1(\mcuResourcesInst/DIN_ROM[12] ), .C1(\mcuResourcesInst/DIN_RAM[12] ), 
    .A1(\mcuResourcesInst.memoryMapperInst.un5_ROM_MAP ), 
    .C0(\PIN_DIN_GPIO_c[12] ), .B0(\mcuResourcesInst/DIN_UART[12] ), 
    .A0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .M0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ), 
    .OFX0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12] ));
  mcuResourcesInst_memoryMapperInst_CPU_DIN_1_9__SLICE_524 
    \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/SLICE_524 ( 
    .D1(\mcuResourcesInst/DIN_RAM[9] ), 
    .C1(\mcuResourcesInst/memoryMapperInst/un5_ROM_MAP_1 ), 
    .B1(\mcuResourcesInst/DIN_ROM[9] ), 
    .D0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .C0(\PIN_DIN_GPIO_c[9] ), .A0(\mcuResourcesInst/DIN_UART[9] ), 
    .M0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ), 
    .OFX0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9] ));
  mcuResourcesInst_memoryMapperInst_CPU_DIN_3_2__SLICE_525 
    \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/SLICE_525 ( 
    .D1(\mcuResourcesInst/memoryMapperInst/un5_ROM_MAP_1 ), 
    .C1(\mcuResourcesInst/DIN_ROM[2] ), .A1(\mcuResourcesInst/DIN_RAM[2] ), 
    .D0(\mcuResourcesInst.DIN_UART[2] ), .C0(\PIN_DIN_GPIO_c[2] ), 
    .B0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .M0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ), 
    .OFX0(\mcuResourcesInst/memoryMapperInst/N_83 ));
  mcuResourcesInst_memoryMapperInst_CPU_DIN_3_7__SLICE_526 
    \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/SLICE_526 ( 
    .C1(\mcuResourcesInst/DIN_RAM[7] ), 
    .B1(\mcuResourcesInst.memoryMapperInst.un5_ROM_MAP ), 
    .A1(\mcuResourcesInst/DIN_ROM[7] ), .D0(\PIN_DIN_GPIO_c[7] ), 
    .C0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .B0(\mcuResourcesInst/DIN_UART[7] ), 
    .M0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ), 
    .OFX0(\mcuResourcesInst/memoryMapperInst/N_88 ));
  mcuResourcesInst_memoryMapperInst_CPU_DIN_3_1__SLICE_527 
    \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/SLICE_527 ( 
    .D1(\mcuResourcesInst.memoryMapperInst.un5_ROM_MAP ), 
    .C1(\mcuResourcesInst.DIN_RAM[1] ), .B1(\mcuResourcesInst.DIN_ROM[1] ), 
    .D0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .C0(\PIN_DIN_GPIO_c[1] ), .A0(\mcuResourcesInst.DIN_UART[1] ), 
    .M0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ), 
    .OFX0(\mcuResourcesInst.N_82 ));
  mcuResourcesInst_memoryMapperInst_CPU_DIN_3_0__SLICE_528 
    \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/SLICE_528 ( 
    .C1(\mcuResourcesInst.memoryMapperInst.un5_ROM_MAP ), 
    .B1(\mcuResourcesInst/DIN_RAM[0] ), .A1(\mcuResourcesInst/DIN_ROM[0] ), 
    .D0(\mcuResourcesInst.DIN_UART[0] ), 
    .C0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .A0(\PIN_DIN_GPIO_c[0] ), 
    .M0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ), 
    .OFX0(\mcuResourcesInst/memoryMapperInst/N_81 ));
  mcuResourcesInst_memoryMapperInst_CPU_DIN_3_15__SLICE_529 
    \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/SLICE_529 ( 
    .D1(\mcuResourcesInst/DIN_RAM[15] ), 
    .C1(\mcuResourcesInst.memoryMapperInst.un5_ROM_MAP ), 
    .B1(\mcuResourcesInst/DIN_ROM[15] ), .D0(\mcuResourcesInst/DIN_UART[15] ), 
    .C0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .A0(\PIN_DIN_GPIO_c[15] ), 
    .M0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ), 
    .OFX0(\mcuResourcesInst/memoryMapperInst/N_96 ));
  mcuResourcesInst_memoryMapperInst_CPU_DIN_3_14__SLICE_530 
    \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/SLICE_530 ( 
    .D1(\mcuResourcesInst.memoryMapperInst.un5_ROM_MAP ), 
    .C1(\mcuResourcesInst/DIN_RAM[14] ), .B1(\mcuResourcesInst/DIN_ROM[14] ), 
    .D0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .C0(\mcuResourcesInst/DIN_UART[14] ), .B0(\PIN_DIN_GPIO_c[14] ), 
    .M0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ), 
    .OFX0(\mcuResourcesInst/memoryMapperInst/N_95 ));
  mcuResourcesInst_memoryMapperInst_CPU_DIN_3_13__SLICE_531 
    \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/SLICE_531 ( 
    .D1(\mcuResourcesInst/DIN_ROM[13] ), 
    .C1(\mcuResourcesInst.memoryMapperInst.un5_ROM_MAP ), 
    .A1(\mcuResourcesInst/DIN_RAM[13] ), .D0(\mcuResourcesInst/DIN_UART[13] ), 
    .C0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .A0(\PIN_DIN_GPIO_c[13] ), 
    .M0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ), 
    .OFX0(\mcuResourcesInst/memoryMapperInst/N_94 ));
  coreInst_opxMultiplexerInst_REGB_ADDRX_0__SLICE_532 
    \coreInst/opxMultiplexerInst/REGB_ADDRX[0]/SLICE_532 ( 
    .D1(\coreInst/ALU_ALU_OPX[0] ), .C1(\coreInst/INSTRUCTION[9] ), 
    .A1(\coreInst/ALUB_SRCX_ss0_i_0_i ), .D0(\coreInst/N_476 ), 
    .C0(\coreInst/GROUPX[0] ), .B0(\coreInst/N_429_i ), 
    .A0(\coreInst/ALU_ALU_OPX[3] ), .M0(\coreInst/d_m8_0_o4_0 ), 
    .OFX0(\coreInst/REGB_ADDRX[0] ));
  coreInst_opxMultiplexerInst_PC_OFFSETX_0__SLICE_533 
    \coreInst/opxMultiplexerInst/PC_OFFSETX[0]/SLICE_533 ( 
    .D1(\coreInst/N_497 ), .C1(\coreInst/opxMultiplexerInst/N_3_i_0 ), 
    .B1(\coreInst/ALU_ALU_OPX[0] ), .A1(\coreInst/N_1014 ), 
    .D0(\coreInst/INSTRUCTION[9] ), .C0(\coreInst/N_168_1 ), 
    .A0(\coreInst/INSTRUCTION[8] ), .M0(\coreInst/N_444 ), 
    .OFX0(\coreInst/PC_OFFSETX[0] ));
  coreInst_opxMultiplexerInst_PC_OFFSETX_1__SLICE_534 
    \coreInst/opxMultiplexerInst/PC_OFFSETX[1]/SLICE_534 ( 
    .D1(\coreInst/ALU_ALU_OPX[0] ), .C1(\coreInst/opxMultiplexerInst/N_3_i_0 ), 
    .B1(\coreInst/N_497 ), .A1(\coreInst/N_1014 ), .D0(\coreInst/N_168_1 ), 
    .C0(\coreInst/INSTRUCTION[8] ), .A0(\coreInst/INSTRUCTION[9] ), 
    .M0(\coreInst/N_444 ), .OFX0(\coreInst/PC_OFFSETX[1] ));
  coreInst_opxMultiplexerInst_PC_m3_SLICE_535 
    \coreInst/opxMultiplexerInst/PC_m3/SLICE_535 ( .D1(\coreInst/i17_mux_4 ), 
    .C1(\coreInst/i17_mux_0 ), .A1(\coreInst/LDS_BYTEX ), 
    .D0(\coreInst/CC_RUN_REG[1] ), .B0(\coreInst/CC_RUN_REG[3] ), 
    .A0(\coreInst/LDS_BYTEX ), .M0(\coreInst/N_27 ), .OFX0(\coreInst/PC_m3 ));
  coreInst_opxMultiplexerInst_BUS_SEQX_1__SLICE_536 
    \coreInst/opxMultiplexerInst/BUS_SEQX[1]/SLICE_536 ( 
    .D1(\coreInst/opxMultiplexerInst/N_543 ), .C1(\coreInst/DEBUG_OPX[2] ), 
    .B1(\coreInst/DEBUG_OPX[3] ), .A1(\coreInst/DEBUG_OPX[1] ), 
    .D0(\coreInst/opxMultiplexerInst/N_543 ), .B0(\coreInst/JMP_BUS_SEQX[1] ), 
    .M0(\coreInst/opxMultiplexerInst/N_3_i_0 ), .OFX0(\coreInst/BUS_SEQX[1] ));
  coreInst_opxMultiplexerInst_BUS_SEQX_0__SLICE_537 
    \coreInst/opxMultiplexerInst/BUS_SEQX[0]/SLICE_537 ( 
    .D1(\coreInst/opxMultiplexerInst/N_543 ), .C1(\coreInst/DEBUG_OPX[1] ), 
    .B1(\coreInst/DEBUG_OPX[3] ), .A1(\coreInst/DEBUG_OPX[2] ), 
    .D0(\coreInst/opxMultiplexerInst/N_543 ), .B0(\coreInst/ALU_ALU_OPX[2] ), 
    .M0(\coreInst/opxMultiplexerInst/N_3_i_0 ), .OFX0(\coreInst/BUS_SEQX[0] ));
  coreInst_programCounterInst_ARGA_m6_RNO_0_SLICE_538 
    \coreInst/programCounterInst/ARGA_m6_RNO_0/SLICE_538 ( 
    .D1(\mcuResourcesInst.interruptMaskRegisterInst.INTS_REG[2] ), .B1(N_332), 
    .A1(\mcuResourcesInst.interruptMaskRegisterInst.MASK_REG[2] ), 
    .D0(\mcuResourcesInst.interruptMaskRegisterInst.PRI_REG[2] ), 
    .C0(PIN_RDN_c), .B0(N_332), .A0(RESET), 
    .M0(\mcuResourcesInst.memoryMapperInst.CPU_m7_e_1 ), 
    .OFX0(\coreInst/programCounterInst/r_m2_N_7 ));
  coreInst_busControllerInst_ADDR_BUF_i_15__SLICE_539 
    \coreInst/busControllerInst/ADDR_BUF_i[15]/SLICE_539 ( 
    .D1(\coreInst/un21_RESULT_s1_i[15] ), .A1(\coreInst/madd_14[15] ), 
    .C0(\coreInst.busControllerInst.ADDR_m4_e_2 ), .B0(\coreInst/un3_sex[15] ), 
    .A0(\ADDR_BUF_i_2_RNIQHDJ2[15] ), 
    .M0(\coreInst/busControllerInst/ADDR_N_3_mux ), .OFX0(N_314));
  coreInst_busControllerInst_sequencer_ADDR_m10_i_m2_SLICE_540 
    \coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/SLICE_540 ( 
    .D1(\coreInst/i17_mux_6 ), .C1(\coreInst/LDS_BYTEX ), 
    .A1(\coreInst/i17_mux_2 ), .C0(\coreInst/LDS_BYTEX ), 
    .B0(\coreInst/CC_RUN_REG[2] ), .A0(\coreInst/CC_RUN_REG[0] ), 
    .M0(\coreInst/N_27 ), .OFX0(\coreInst/ADDR_N_8 ));
  coreInst_busControllerInst_sequencer_ADDR_m10_i_m4_SLICE_541 
    \coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/SLICE_541 ( 
    .D1(\coreInst/N_1011 ), .C1(\coreInst/CCL_ENRX ), 
    .B1(\coreInst/DEBUG_MODE_rep1 ), .D0(\coreInst/N_1001 ), 
    .C0(\coreInst/DEBUG_OPX_fast[3] ), 
    .B0(\coreInst/busControllerInst/sequencer/ADDR_m10_i_m4_N_2L1 ), 
    .A0(\coreInst/DEBUG_OPX_fast[1] ), .M0(\coreInst/DEBUG_OPX_fast[2] ), 
    .OFX0(\coreInst/N_27 ));
  coreInst_fullALUInst_muxA_ALUA_DATA_1__SLICE_542 
    \coreInst/fullALUInst/muxA/ALUA_DATA[1]/SLICE_542 ( .D1(\coreInst/N_514 ), 
    .C1(\coreInst/LDS_BYTEX ), .B1(\coreInst/N_263_1 ), 
    .A1(\coreInst/ARGB_X[0] ), .D0(\coreInst/N_267 ), 
    .C0(\coreInst/LDS_BYTEX ), .B0(\coreInst/N_263_1 ), 
    .A0(\coreInst/REGA_DOUT[1] ), .M0(\coreInst/N_985 ), 
    .OFX0(\coreInst/fullALUInst/ALUA_DATA[1] ));
  coreInst_fullALUInst_muxA_ALUA_DATA_2__SLICE_543 
    \coreInst/fullALUInst/muxA/ALUA_DATA[2]/SLICE_543 ( .D1(\coreInst/N_514 ), 
    .C1(\coreInst/N_487 ), .B1(\coreInst/N_263_1 ), .A1(\coreInst/LDS_BYTEX ), 
    .C0(\coreInst/REGA_DOUT[2] ), .B0(\coreInst/N_263_1 ), 
    .A0(\coreInst/N_267 ), .M0(\coreInst/N_985 ), 
    .OFX0(\coreInst/fullALUInst/ALUA_DATA[2] ));
  coreInst_fullALUInst_muxA_ALUA_DATA_3__SLICE_544 
    \coreInst/fullALUInst/muxA/ALUA_DATA[3]/SLICE_544 ( .D1(\coreInst/N_513 ), 
    .C1(\coreInst/N_487 ), .B1(\coreInst/N_263_1 ), .A1(\coreInst/LDS_BYTEX ), 
    .C0(\coreInst/REGA_DOUT[3] ), .B0(\coreInst/N_263_1 ), 
    .A0(\coreInst/N_267 ), .M0(\coreInst/N_985 ), 
    .OFX0(\coreInst/fullALUInst/ALUA_DATA[3] ));
  coreInst_fullALUInst_muxA_ALUA_DATA_4__SLICE_545 
    \coreInst/fullALUInst/muxA/ALUA_DATA[4]/SLICE_545 ( 
    .D1(\coreInst/N_263_1 ), .C1(\coreInst/N_513 ), .B1(\coreInst/LDS_BYTEX ), 
    .A1(\coreInst/ALU_ALU_OPX[3] ), .D0(\coreInst/N_263_1 ), 
    .B0(\coreInst/REGA_DOUT[4] ), .A0(\coreInst/N_267 ), .M0(\coreInst/N_985 ), 
    .OFX0(\coreInst/fullALUInst/ALUA_DATA[4] ));
  coreInst_fullALUInst_aluInst_PARITY_2_0_SLICE_546 
    \coreInst/fullALUInst/aluInst/PARITY_2_0/SLICE_546 ( 
    .C1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[16] ), 
    .B1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[17] ), 
    .D0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[17] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_14[16] ), 
    .A0(\coreInst/fullALUInst/aluInst/madd_13[16] ), 
    .M0(\coreInst/madd_14[15] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/PARITY_2_0 ));
  coreInst_fullALUInst_aluInst_PARITY_2_12_SLICE_547 
    \coreInst/fullALUInst/aluInst/PARITY_2_12/SLICE_547 ( 
    .D1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[20] ), 
    .C1(\coreInst/fullALUInst/aluInst/PARITY_2_9 ), 
    .B1(\coreInst/fullALUInst/aluInst/madd_cry_15_s1_0_RNI0P3P ), 
    .A1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[21] ), 
    .D0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[21] ), 
    .C0(\coreInst/fullALUInst/aluInst/PARITY_2_9 ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_cry_15_s1_0_RNI0P3P ), 
    .A0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[20] ), 
    .M0(\coreInst/madd_14[15] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/PARITY_2_12 ));
  coreInst_fullALUInst_aluInst_un38_RESULT_105_0_SLICE_548 
    \coreInst/fullALUInst/aluInst/un38_RESULT_105_0/SLICE_548 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_20_2 ), 
    .C1(\coreInst/fullALUInst/aluInst/N_24_2 ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), .A1(\coreInst/ALUB_DATA[4] ), 
    .D0(\coreInst/ALUB_DATA[4] ), .C0(\coreInst/fullALUInst/aluInst/N_32_2 ), 
    .B0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_28_2 ), .M0(\coreInst/ALUB_DATA[3] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/un38_RESULT_105_0 ));
  coreInst_fullALUInst_aluInst_un38_RESULT_103_0_SLICE_549 
    \coreInst/fullALUInst/aluInst/un38_RESULT_103_0/SLICE_549 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_18_2 ), 
    .C1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_22_2 ), .A1(\coreInst/ALUB_DATA[4] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_26_2 ), 
    .C0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_30_2 ), .A0(\coreInst/ALUB_DATA[4] ), 
    .M0(\coreInst/ALUB_DATA[3] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/un38_RESULT_103_0 ));
  coreInst_fullALUInst_aluInst_un38_RESULT_100_0_SLICE_550 
    \coreInst/fullALUInst/aluInst/un38_RESULT_100_0/SLICE_550 ( 
    .D1(\coreInst/ALUB_DATA[1] ), .C1(\coreInst/ALUB_DATA[4] ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_2_2 ), 
    .D0(\coreInst/fullALUInst/ALUB_DATA[2] ), .C0(\coreInst/ALUB_DATA[4] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_27_2 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_23_2 ), .M0(\coreInst/ALUB_DATA[3] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/un38_RESULT_100_0 ));
  coreInst_fullALUInst_aluInst_RESULT_13__SLICE_551 
    \coreInst/fullALUInst/aluInst/RESULT[13]/SLICE_551 ( 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_8 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_232 ), 
    .A1(\coreInst/fullALUInst/aluInst/N_216 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_134_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d[13] ), 
    .A0(\coreInst/RESULT_12_0_s[14] ), .M0(\coreInst/RESULT_sn_N_9 ), 
    .OFX0(\coreInst/ALU_R[13] ));
  coreInst_fullALUInst_aluInst_RESULT_12_0_10__SLICE_552 
    \coreInst/fullALUInst/aluInst/RESULT_12_0[10]/SLICE_552 ( 
    .D1(\coreInst/un21_RESULT[10] ), .C1(\coreInst/RESULT109_2 ), 
    .B1(\coreInst/fullALUInst/aluInst/RESULT_10_d[10] ), 
    .D0(\coreInst/ALU_OPX[1] ), .C0(\coreInst/fullALUInst/aluInst/N_197 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_77 ), .M0(\coreInst/RESULT109_1 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_279 ));
  coreInst_fullALUInst_aluInst_RESULT_8__SLICE_553 
    \coreInst/fullALUInst/aluInst/RESULT[8]/SLICE_553 ( 
    .C1(\coreInst/ALU_OPX[3] ), .B1(\coreInst/fullALUInst/aluInst/N_211 ), 
    .A1(\coreInst/fullALUInst/aluInst/N_227 ), 
    .D0(\coreInst/fullALUInst/aluInst/N_243 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_259 ), .A0(\coreInst/RESULT109_1 ), 
    .M0(\coreInst/RESULT_sn_N_9 ), .OFX0(\coreInst/ALU_R[8] ));
  coreInst_fullALUInst_aluInst_RESULT_12_1_RNO_6__SLICE_554 
    \coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/SLICE_554 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_176 ), 
    .C1(\coreInst/fullALUInst/aluInst/un3_tmp[6] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[6] ), .A1(\coreInst/N_171 ), 
    .D0(\coreInst/fullALUInst/aluInst/N_193 ), .B0(\coreInst/ALU_OPX[1] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_73 ), .M0(\coreInst/RESULT109_1 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6] ));
  coreInst_fullALUInst_aluInst_RESULT_12_0_3__SLICE_555 
    \coreInst/fullALUInst/aluInst/RESULT_12_0[3]/SLICE_555 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_173 ), .B1(\coreInst/N_171 ), 
    .A1(\coreInst/fullALUInst/aluInst/N_124 ), 
    .D0(\coreInst/fullALUInst/aluInst/N_190 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_70 ), .A0(\coreInst/ALU_OPX[1] ), 
    .M0(\coreInst/RESULT109_1 ), .OFX0(\coreInst/fullALUInst/aluInst/N_272 ));
  coreInst_fullALUInst_aluInst_RESULT_10_4__SLICE_556 
    \coreInst/fullALUInst/aluInst/RESULT_10[4]/SLICE_556 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[4] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[4] ), 
    .B1(\coreInst/fullALUInst/aluInst/un21_RESULT[4] ), 
    .A1(\coreInst/ALU_OPX[3] ), .D0(\coreInst/fullALUInst/aluInst/tmp_3[3] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[4] ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp[4] ), 
    .A0(\coreInst/fullALUInst/aluInst/RESULT_10[0] ), 
    .M1(\coreInst/RESULT109_1 ), .M0(\coreInst/N_171 ), 
    .FXB(\coreInst/fullALUInst/aluInst/N_239 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_255 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_239 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_273 ));
  coreInst_fullALUInst_aluInst_RESULT_13_15__SLICE_557 
    \coreInst/fullALUInst/aluInst/RESULT_13[15]/SLICE_557 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_13_bm_1[15] ), 
    .C1(\coreInst/fullALUInst/aluInst/un3_tmp[15] ), .B1(\coreInst/N_171 ), 
    .A1(\coreInst/ALU_OPX_i_1[0] ), .D0(\coreInst/fullALUInst/aluInst/N_100 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_168 ), .A0(\coreInst/ALU_OPX_i_1[0] ), 
    .M0(\coreInst/fullALUInst/aluInst/RESULT_sn_N_8 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_301 ));
  coreInst_fullALUInst_aluInst_RESULT_10_d_10__SLICE_558 
    \coreInst/fullALUInst/aluInst/RESULT_10_d[10]/SLICE_558 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[10] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[10] ), 
    .D0(\coreInst/fullALUInst/aluInst/tmp_3_0[10] ), 
    .C0(\coreInst/fullALUInst/aluInst/tmp_3_5[9] ), 
    .B0(\coreInst/fullALUInst/aluInst/RESULT_10[0] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[10] ), .M0(\coreInst/N_171 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/RESULT_10_d[10] ));
  coreInst_fullALUInst_aluInst_RESULT_10_2__SLICE_559 
    \coreInst/fullALUInst/aluInst/RESULT_10[2]/SLICE_559 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[2] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[2] ), .B1(\coreInst/ALU_OPX[3] ), 
    .A1(\coreInst/fullALUInst/aluInst/un21_RESULT[2] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp[2] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[2] ), 
    .B0(\coreInst/fullALUInst/aluInst/tmp_3[1] ), 
    .A0(\coreInst/fullALUInst/aluInst/RESULT_10[0] ), 
    .M1(\coreInst/RESULT109_1 ), .M0(\coreInst/N_171 ), 
    .FXB(\coreInst/fullALUInst/aluInst/N_237 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_253 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_237 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_271 ));
  coreInst_fullALUInst_aluInst_RESULT_12_0_15__SLICE_560 
    \coreInst/fullALUInst/aluInst/RESULT_12_0[15]/SLICE_560 ( 
    .D1(\coreInst.fullALUInst.aluInst.N_136 ), .C1(\coreInst/N_171 ), 
    .B1(\coreInst/fullALUInst/aluInst/RESULT_11[0] ), 
    .D0(\coreInst/ALU_OPX[1] ), .B0(\coreInst/fullALUInst/aluInst/N_82 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_202 ), .M0(\coreInst/RESULT109_1 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_284 ));
  coreInst_fullALUInst_aluInst_RESULT_10_1__SLICE_561 
    \coreInst/fullALUInst/aluInst/RESULT_10[1]/SLICE_561 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[1] ), 
    .B1(\coreInst/fullALUInst/aluInst/un21_RESULT[1] ), 
    .A1(\coreInst/ALU_OPX[3] ), .D0(\coreInst/fullALUInst/aluInst/un3_tmp[1] ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_10[0] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .A0(\coreInst/fullALUInst/aluInst/un3_tmp[0] ), 
    .M1(\coreInst/RESULT109_1 ), .M0(\coreInst/N_171 ), 
    .FXB(\coreInst/fullALUInst/aluInst/N_236 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_252 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_236 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_270 ));
  coreInst_fullALUInst_aluInst_RESULT_11_1__SLICE_562 
    \coreInst/fullALUInst/aluInst/RESULT_11[1]/SLICE_562 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_12[1] ), 
    .C1(\coreInst/fullALUInst/aluInst/un10_RESULT[1] ), 
    .B1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .D0(\coreInst/ALU_OPX_i_1[0] ), 
    .C0(\coreInst/fullALUInst/aluInst/un1_RESULT[1] ), 
    .A0(\coreInst/ALUB_DATA[1] ), .M0(\coreInst/ALU_OPX[1] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_252 ));
  coreInst_fullALUInst_aluInst_RESULT_8_0_7__SLICE_563 
    \coreInst/fullALUInst/aluInst/RESULT_8_0[7]/SLICE_563 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[7] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_10[7] ), .B1(\coreInst/N_171 ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp[7] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[7] ), .B0(\coreInst/N_171 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_129_mux ), .M1(\coreInst/ALU_OPX[3] ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), .FXB(\coreInst/fullALUInst/aluInst/N_210 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_226 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_210 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_293 ));
  coreInst_fullALUInst_aluInst_RESULT_11_7__SLICE_564 
    \coreInst/fullALUInst/aluInst/RESULT_11[7]/SLICE_564 ( 
    .D1(\coreInst/fullALUInst/aluInst/un10_RESULT[7] ), 
    .C1(\coreInst/fullALUInst/aluInst/un53_RESULT[7] ), 
    .B1(\coreInst/fullALUInst/aluInst/RESULT_10[7] ), 
    .A1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .C0(\coreInst/fullALUInst/aluInst/un1_RESULT[7] ), 
    .B0(\coreInst/ALU_OPX_i_1[0] ), .A0(\coreInst/ALUB_DATA[7] ), 
    .M0(\coreInst/ALU_OPX[1] ), .OFX0(\coreInst/fullALUInst/aluInst/N_258 ));
  coreInst_fullALUInst_aluInst_RESULT_11_2__SLICE_565 
    \coreInst/fullALUInst/aluInst/RESULT_11[2]/SLICE_565 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_12[2] ), 
    .C1(\coreInst/fullALUInst/aluInst/un10_RESULT[2] ), 
    .B1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .D0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .C0(\coreInst/fullALUInst/aluInst/un1_RESULT[2] ), 
    .B0(\coreInst/ALU_OPX_i_1[0] ), .M0(\coreInst/ALU_OPX[1] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_253 ));
  coreInst_fullALUInst_aluInst_RESULT_11_4__SLICE_566 
    \coreInst/fullALUInst/aluInst/RESULT_11[4]/SLICE_566 ( 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_12[4] ), 
    .B1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .A1(\coreInst/fullALUInst/aluInst/un10_RESULT[4] ), 
    .C0(\coreInst/fullALUInst/aluInst/un1_RESULT[4] ), 
    .B0(\coreInst/ALU_OPX_i_1[0] ), .A0(\coreInst/ALUB_DATA[4] ), 
    .M0(\coreInst/ALU_OPX[1] ), .OFX0(\coreInst/fullALUInst/aluInst/N_255 ));
  coreInst_fullALUInst_aluInst_RESULT_11_0__SLICE_567 
    \coreInst/fullALUInst/aluInst/RESULT_11[0]/SLICE_567 ( 
    .D1(\coreInst/fullALUInst/aluInst/un53_RESULT[0] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_10[0] ), 
    .B1(\coreInst/fullALUInst/aluInst/un10_RESULT_axb_0 ), 
    .A1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[0] ), .C0(\coreInst/ALU_OPX_i_1[0] ), 
    .A0(\coreInst/ALUB_DATA[0] ), .M0(\coreInst/ALU_OPX[1] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_251 ));
  coreInst_fullALUInst_aluInst_RESULT_8_0_8__SLICE_568 
    \coreInst/fullALUInst/aluInst/RESULT_8_0[8]/SLICE_568 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[8] ), .C1(\coreInst/N_171 ), 
    .B1(\coreInst/fullALUInst/aluInst/RESULT_10[8] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[8] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp[8] ), .C0(\coreInst/N_171 ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[8] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_130_mux ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_211 ));
  coreInst_fullALUInst_aluInst_RESULT_9_8__SLICE_569 
    \coreInst/fullALUInst/aluInst/RESULT_9[8]/SLICE_569 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[8] ), .B1(\coreInst/ALUB_DATA[8] ), 
    .A1(\coreInst/ALU_OPX[1] ), 
    .D0(\coreInst/fullALUInst/aluInst/un38_RESULT_99_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_2 ), 
    .B0(\coreInst/fullALUInst/aluInst/RESULT_7[8] ), 
    .A0(\coreInst/ALU_OPX[1] ), .M0(\coreInst/ALU_OPX_i_1[0] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_227 ));
  coreInst_fullALUInst_aluInst_RESULT_8_0_9__SLICE_570 
    \coreInst/fullALUInst/aluInst/RESULT_8_0[9]/SLICE_570 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[9] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .B1(\coreInst/fullALUInst/aluInst/RESULT_10[9] ), .A1(\coreInst/N_171 ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp[9] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[9] ), .B0(\coreInst/N_171 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_131_mux ), 
    .M1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_8 ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), .FXB(\coreInst/fullALUInst/aluInst/N_212 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_228 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_212 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_295 ));
  coreInst_fullALUInst_aluInst_RESULT_9_9__SLICE_571 
    \coreInst/fullALUInst/aluInst/RESULT_9[9]/SLICE_571 ( 
    .D1(\coreInst/ALU_OPX[1] ), .C1(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .B1(\coreInst/ALUB_DATA[9] ), 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_7[9] ), 
    .C0(\coreInst/fullALUInst/aluInst/un38_RESULT_100_0 ), 
    .B0(\coreInst/ALU_OPX[1] ), .A0(\coreInst/fullALUInst/aluInst/OVER_2 ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_228 ));
  coreInst_fullALUInst_aluInst_RESULT_8_0_10__SLICE_572 
    \coreInst/fullALUInst/aluInst/RESULT_8_0[10]/SLICE_572 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[10] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_10[10] ), .B1(\coreInst/N_171 ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[10] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp[10] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_132_mux ), .B0(\coreInst/N_171 ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[10] ), .M1(\coreInst/ALU_OPX[3] ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), .FXB(\coreInst/fullALUInst/aluInst/N_213 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_229 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_213 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_296 ));
  coreInst_fullALUInst_aluInst_RESULT_9_10__SLICE_573 
    \coreInst/fullALUInst/aluInst/RESULT_9[10]/SLICE_573 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[10] ), .B1(\coreInst/ALU_OPX[1] ), 
    .A1(\coreInst/ALUB_DATA[10] ), 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_7[10] ), 
    .C0(\coreInst/fullALUInst/aluInst/un38_RESULT_101_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_2 ), .A0(\coreInst/ALU_OPX[1] ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_229 ));
  coreInst_fullALUInst_aluInst_RESULT_8_0_11__SLICE_574 
    \coreInst/fullALUInst/aluInst/RESULT_8_0[11]/SLICE_574 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10[11] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .B1(\coreInst/fullALUInst/aluInst/un3_tmp[11] ), .A1(\coreInst/N_171 ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp[11] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[11] ), .B0(\coreInst/N_171 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_133_mux ), 
    .M1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_8 ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), .FXB(\coreInst/fullALUInst/aluInst/N_214 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_230 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_214 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_297 ));
  coreInst_fullALUInst_aluInst_RESULT_9_11__SLICE_575 
    \coreInst/fullALUInst/aluInst/RESULT_9[11]/SLICE_575 ( 
    .D1(\coreInst/ALUB_DATA[11] ), .C1(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .A1(\coreInst/ALU_OPX[1] ), .D0(\coreInst/fullALUInst/aluInst/OVER_2 ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_7[11] ), 
    .B0(\coreInst/fullALUInst/aluInst/un38_RESULT_102_0 ), 
    .A0(\coreInst/ALU_OPX[1] ), .M0(\coreInst/ALU_OPX_i_1[0] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_230 ));
  coreInst_fullALUInst_aluInst_RESULT_8_0_12__SLICE_576 
    \coreInst/fullALUInst/aluInst/RESULT_8_0[12]/SLICE_576 ( 
    .D1(\coreInst/N_171 ), .C1(\coreInst/fullALUInst/aluInst/RESULT_10[12] ), 
    .B1(\coreInst/fullALUInst/aluInst/un3_tmp[12] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[12] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_134_mux ), .C0(\coreInst/N_171 ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp[12] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[12] ), .M1(\coreInst/ALU_OPX[3] ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), .FXB(\coreInst/fullALUInst/aluInst/N_215 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_231 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_215 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_298 ));
  coreInst_fullALUInst_aluInst_RESULT_9_12__SLICE_577 
    \coreInst/fullALUInst/aluInst/RESULT_9[12]/SLICE_577 ( 
    .D1(\coreInst/ALUB_DATA[12] ), .C1(\coreInst/ALU_OPX[1] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[12] ), 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_7[12] ), 
    .C0(\coreInst/ALU_OPX[1] ), .B0(\coreInst/fullALUInst/aluInst/OVER_2 ), 
    .A0(\coreInst/fullALUInst/aluInst/un38_RESULT_103_0 ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_231 ));
  coreInst_fullALUInst_aluInst_RESULT_8_0_14__SLICE_578 
    \coreInst/fullALUInst/aluInst/RESULT_8_0[14]/SLICE_578 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .C1(\coreInst/fullALUInst/aluInst/un3_tmp[14] ), 
    .B1(\coreInst/fullALUInst/aluInst/RESULT_10[14] ), .A1(\coreInst/N_171 ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .C0(\coreInst/fullALUInst/aluInst/un3_tmp[14] ), .B0(\coreInst/N_171 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_136_mux ), 
    .M1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_8 ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), .FXB(\coreInst/fullALUInst/aluInst/N_217 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_233 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_217 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_300 ));
  coreInst_fullALUInst_aluInst_RESULT_9_14__SLICE_579 
    \coreInst/fullALUInst/aluInst/RESULT_9[14]/SLICE_579 ( 
    .D1(\coreInst/ALUB_DATA[14] ), .C1(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .A1(\coreInst/ALU_OPX[1] ), 
    .D0(\coreInst/fullALUInst/aluInst/un38_RESULT_105_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_2 ), 
    .B0(\coreInst/fullALUInst/aluInst/RESULT_7[14] ), 
    .A0(\coreInst/ALU_OPX[1] ), .M0(\coreInst/ALU_OPX_i_1[0] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_233 ));
  coreInst_fullALUInst_aluInst_RESULT_8_0_1__SLICE_580 
    \coreInst/fullALUInst/aluInst/RESULT_8_0[1]/SLICE_580 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[1] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_10[1] ), .B1(\coreInst/N_171 ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp[1] ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_11[1] ), .B0(\coreInst/N_171 ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .M1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_8 ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), .FXB(\coreInst/fullALUInst/aluInst/N_204 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_220 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_204 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_287 ));
  coreInst_fullALUInst_aluInst_RESULT_8_0_5__SLICE_581 
    \coreInst/fullALUInst/aluInst/RESULT_8_0[5]/SLICE_581 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10[5] ), .C1(\coreInst/N_171 ), 
    .B1(\coreInst/fullALUInst/aluInst/un3_tmp[5] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[5] ), .D0(\coreInst/N_171 ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_11[5] ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp[5] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[5] ), 
    .M1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_8 ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), .FXB(\coreInst/fullALUInst/aluInst/N_208 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_224 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_208 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_291 ));
  coreInst_fullALUInst_aluInst_RESULT_8_0_2__SLICE_582 
    \coreInst/fullALUInst/aluInst/RESULT_8_0[2]/SLICE_582 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[2] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_10[2] ), 
    .B1(\coreInst/fullALUInst/aluInst/un3_tmp[2] ), .A1(\coreInst/N_171 ), 
    .D0(\coreInst/N_171 ), .C0(\coreInst/fullALUInst/ALUA_DATA[2] ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp[2] ), 
    .A0(\coreInst/fullALUInst/aluInst/RESULT_11[2] ), 
    .M1(\coreInst/ALU_OPX[3] ), .M0(\coreInst/ALU_OPX_i_1[0] ), 
    .FXB(\coreInst/fullALUInst/aluInst/N_205 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_221 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_205 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_288 ));
  coreInst_fullALUInst_aluInst_RESULT_8_0_6__SLICE_583 
    \coreInst/fullALUInst/aluInst/RESULT_8_0[6]/SLICE_583 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[6] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[6] ), .B1(\coreInst/N_171 ), 
    .A1(\coreInst/fullALUInst/aluInst/RESULT_10[6] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp[6] ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_11[6] ), .B0(\coreInst/N_171 ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[6] ), 
    .M1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_8 ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), .FXB(\coreInst/fullALUInst/aluInst/N_209 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_225 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_209 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_292 ));
  coreInst_fullALUInst_aluInst_RESULT_8_0_4__SLICE_584 
    \coreInst/fullALUInst/aluInst/RESULT_8_0[4]/SLICE_584 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10[4] ), 
    .C1(\coreInst/fullALUInst/aluInst/un3_tmp[4] ), .B1(\coreInst/N_171 ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[4] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp[4] ), .C0(\coreInst/N_171 ), 
    .B0(\coreInst/fullALUInst/aluInst/RESULT_11[4] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[4] ), 
    .M1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_8 ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), .FXB(\coreInst/fullALUInst/aluInst/N_207 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_223 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_207 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_290 ));
  coreInst_fullALUInst_aluInst_RESULT_8_0_3__SLICE_585 
    \coreInst/fullALUInst/aluInst/RESULT_8_0[3]/SLICE_585 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[3] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_10[3] ), .B1(\coreInst/N_171 ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp[3] ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_11[3] ), .B0(\coreInst/N_171 ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .M1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_8 ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), .FXB(\coreInst/fullALUInst/aluInst/N_206 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_222 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_206 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_289 ));
  coreInst_fullALUInst_aluInst_RESULT_11_8__SLICE_586 
    \coreInst/fullALUInst/aluInst/RESULT_11[8]/SLICE_586 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .C1(\coreInst/fullALUInst/aluInst/un53_RESULT[8] ), 
    .B1(\coreInst/fullALUInst/aluInst/un10_RESULT[8] ), 
    .A1(\coreInst/fullALUInst/aluInst/RESULT_10[8] ), 
    .D0(\coreInst/ALUB_DATA[8] ), .B0(\coreInst/ALU_OPX_i_1[0] ), 
    .A0(\coreInst/fullALUInst/aluInst/un1_RESULT[8] ), 
    .M0(\coreInst/ALU_OPX[1] ), .OFX0(\coreInst/fullALUInst/aluInst/N_259 ));
  coreInst_fullALUInst_aluInst_RESULT_11_9__SLICE_587 
    \coreInst/fullALUInst/aluInst/RESULT_11[9]/SLICE_587 ( 
    .D1(\coreInst/fullALUInst/aluInst/un53_RESULT[9] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_10[9] ), 
    .B1(\coreInst/fullALUInst/aluInst/un10_RESULT[9] ), 
    .A1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .D0(\coreInst/ALUB_DATA[9] ), 
    .B0(\coreInst/fullALUInst/aluInst/un1_RESULT[9] ), 
    .A0(\coreInst/ALU_OPX_i_1[0] ), .M0(\coreInst/ALU_OPX[1] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_260 ));
  coreInst_fullALUInst_aluInst_RESULT_11_11__SLICE_588 
    \coreInst/fullALUInst/aluInst/RESULT_11[11]/SLICE_588 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10[11] ), 
    .C1(\coreInst/fullALUInst/aluInst/un10_RESULT[11] ), 
    .B1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .A1(\coreInst/fullALUInst/aluInst/un53_RESULT[11] ), 
    .C0(\coreInst/ALUB_DATA[11] ), 
    .B0(\coreInst/fullALUInst/aluInst/un1_RESULT[11] ), 
    .A0(\coreInst/ALU_OPX_i_1[0] ), .M0(\coreInst/ALU_OPX[1] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_262 ));
  coreInst_fullALUInst_aluInst_RESULT_11_12__SLICE_589 
    \coreInst/fullALUInst/aluInst/RESULT_11[12]/SLICE_589 ( 
    .D1(\coreInst/fullALUInst/aluInst/un10_RESULT[12] ), 
    .C1(\coreInst/fullALUInst/aluInst/un53_RESULT[12] ), 
    .B1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .A1(\coreInst/fullALUInst/aluInst/RESULT_10[12] ), 
    .C0(\coreInst/ALUB_DATA[12] ), .B0(\coreInst/ALU_OPX_i_1[0] ), 
    .A0(\coreInst/fullALUInst/aluInst/un1_RESULT[12] ), 
    .M0(\coreInst/ALU_OPX[1] ), .OFX0(\coreInst/fullALUInst/aluInst/N_263 ));
  coreInst_fullALUInst_aluInst_RESULT_11_13__SLICE_590 
    \coreInst/fullALUInst/aluInst/RESULT_11[13]/SLICE_590 ( 
    .D1(\coreInst/fullALUInst/aluInst/un53_RESULT[13] ), 
    .C1(\coreInst/fullALUInst/aluInst/un10_RESULT[13] ), 
    .B1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .A1(\coreInst/fullALUInst/aluInst/RESULT_10[13] ), 
    .D0(\coreInst/ALUB_DATA[13] ), .B0(\coreInst/ALU_OPX_i_1[0] ), 
    .A0(\coreInst/fullALUInst/aluInst/un1_RESULT[13] ), 
    .M0(\coreInst/ALU_OPX[1] ), .OFX0(\coreInst/fullALUInst/aluInst/N_264 ));
  coreInst_fullALUInst_aluInst_RESULT_11_14__SLICE_591 
    \coreInst/fullALUInst/aluInst/RESULT_11[14]/SLICE_591 ( 
    .D1(\coreInst/fullALUInst/aluInst/un53_RESULT[14] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .B1(\coreInst/fullALUInst/aluInst/RESULT_10[14] ), 
    .A1(\coreInst/fullALUInst/aluInst/un10_RESULT[14] ), 
    .D0(\coreInst/ALUB_DATA[14] ), .B0(\coreInst/ALU_OPX_i_1[0] ), 
    .A0(\coreInst/fullALUInst/aluInst/un1_RESULT[14] ), 
    .M0(\coreInst/ALU_OPX[1] ), .OFX0(\coreInst/fullALUInst/aluInst/N_265 ));
  coreInst_fullALUInst_aluInst_RESULT_8_0_0__SLICE_592 
    \coreInst/fullALUInst/aluInst/RESULT_8_0[0]/SLICE_592 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[0] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_10[0] ), .B1(\coreInst/N_171 ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[0] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp[0] ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_11[0] ), .B0(\coreInst/N_171 ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[0] ), .M1(\coreInst/ALU_OPX[3] ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), .FXB(\coreInst/fullALUInst/aluInst/N_203 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_219 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_203 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_286 ));
  coreInst_fullALUInst_aluInst_RESULT_9_1__SLICE_593 
    \coreInst/fullALUInst/aluInst/RESULT_9[1]/SLICE_593 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[1] ), .B1(\coreInst/ALUB_DATA[1] ), 
    .A1(\coreInst/ALU_OPX[1] ), 
    .D0(\coreInst/fullALUInst/aluInst/un38_RESULT_92_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_2 ), 
    .B0(\coreInst/fullALUInst/aluInst/RESULT_7[1] ), 
    .A0(\coreInst/ALU_OPX[1] ), .M1(\coreInst/RESULT_sn_N_9 ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), .FXB(\coreInst/fullALUInst/aluInst/N_287 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_270 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_220 ), .OFX1(\coreInst/ALU_R[1] ));
  coreInst_fullALUInst_aluInst_RESULT_9_5__SLICE_594 
    \coreInst/fullALUInst/aluInst/RESULT_9[5]/SLICE_594 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[5] ), .C1(\coreInst/ALU_OPX[1] ), 
    .A1(\coreInst/ALUB_DATA[5] ), .D0(\coreInst/fullALUInst/ALUA_DATA[5] ), 
    .C0(\coreInst/ALU_OPX[1] ), 
    .B0(\coreInst/fullALUInst/aluInst/un38_RESULT[5] ), 
    .A0(\coreInst/ALUB_DATA[5] ), .M0(\coreInst/ALU_OPX_i_1[0] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_224 ));
  coreInst_fullALUInst_aluInst_RESULT_9_7__SLICE_595 
    \coreInst/fullALUInst/aluInst/RESULT_9[7]/SLICE_595 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[7] ), .B1(\coreInst/ALU_OPX[1] ), 
    .A1(\coreInst/ALUB_DATA[7] ), 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_7[7] ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_2 ), .B0(\coreInst/ALU_OPX[1] ), 
    .A0(\coreInst/fullALUInst/aluInst/un38_RESULT_98_0 ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_226 ));
  coreInst_fullALUInst_aluInst_RESULT_9_2__SLICE_596 
    \coreInst/fullALUInst/aluInst/RESULT_9[2]/SLICE_596 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[2] ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), .A1(\coreInst/ALU_OPX[1] ), 
    .D0(\coreInst/ALU_OPX[1] ), .C0(\coreInst/fullALUInst/aluInst/OVER_2 ), 
    .B0(\coreInst/fullALUInst/aluInst/RESULT_7[2] ), 
    .A0(\coreInst/fullALUInst/aluInst/un38_RESULT_93_0 ), 
    .M1(\coreInst/RESULT_sn_N_9 ), .M0(\coreInst/ALU_OPX_i_1[0] ), 
    .FXB(\coreInst/fullALUInst/aluInst/N_288 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_271 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_221 ), .OFX1(\coreInst/ALU_R[2] ));
  coreInst_fullALUInst_aluInst_RESULT_9_6__SLICE_597 
    \coreInst/fullALUInst/aluInst/RESULT_9[6]/SLICE_597 ( 
    .D1(\coreInst/ALUB_DATA[6] ), .B1(\coreInst/fullALUInst/ALUA_DATA[6] ), 
    .A1(\coreInst/ALU_OPX[1] ), .D0(\coreInst/ALU_OPX[1] ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_2 ), 
    .B0(\coreInst/fullALUInst/aluInst/un38_RESULT_97_0 ), 
    .A0(\coreInst/fullALUInst/aluInst/RESULT_7[6] ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_225 ));
  coreInst_fullALUInst_aluInst_RESULT_9_4__SLICE_598 
    \coreInst/fullALUInst/aluInst/RESULT_9[4]/SLICE_598 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[4] ), .C1(\coreInst/ALUB_DATA[4] ), 
    .A1(\coreInst/ALU_OPX[1] ), 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_7[4] ), 
    .C0(\coreInst/fullALUInst/aluInst/un38_RESULT_95_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_2 ), .A0(\coreInst/ALU_OPX[1] ), 
    .M1(\coreInst/RESULT_sn_N_9 ), .M0(\coreInst/ALU_OPX_i_1[0] ), 
    .FXB(\coreInst/fullALUInst/aluInst/N_290 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_273 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_223 ), .OFX1(\coreInst/ALU_R[4] ));
  coreInst_fullALUInst_aluInst_RESULT_9_3__SLICE_599 
    \coreInst/fullALUInst/aluInst/RESULT_9[3]/SLICE_599 ( 
    .D1(\coreInst/ALU_OPX[1] ), .C1(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .B1(\coreInst/ALUB_DATA[3] ), 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_7[3] ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_2 ), .B0(\coreInst/ALU_OPX[1] ), 
    .A0(\coreInst/fullALUInst/aluInst/un38_RESULT_94_0 ), 
    .M0(\coreInst/ALU_OPX_i_1[0] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_222 ));
  coreInst_fullALUInst_aluInst_RESULT_9_0__SLICE_600 
    \coreInst/fullALUInst/aluInst/RESULT_9[0]/SLICE_600 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[0] ), .C1(\coreInst/ALUB_DATA[0] ), 
    .B1(\coreInst/ALU_OPX[1] ), 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_7[0] ), 
    .C0(\coreInst/fullALUInst/aluInst/un38_RESULT[0] ), 
    .A0(\coreInst/ALU_OPX[1] ), .M0(\coreInst/ALU_OPX_i_1[0] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_219 ));
  coreInst_fullALUInst_aluInst_RESULT_4_13__SLICE_601 
    \coreInst/fullALUInst/aluInst/RESULT_4[13]/SLICE_601 ( 
    .D1(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[15] ), .B1(\coreInst/ALUB_DATA[3] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_46_1 ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp[13] ), .M0(\coreInst/N_171 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_150 ));
  coreInst_fullALUInst_aluInst_RESULT_1_13__SLICE_602 
    \coreInst/fullALUInst/aluInst/RESULT_1[13]/SLICE_602 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_65_0 ), .B1(\coreInst/ALUB_DATA[4] ), 
    .A1(\coreInst/fullALUInst/aluInst/OVER_2 ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[13] ), .A0(\coreInst/ALUB_DATA[13] ), 
    .M0(\coreInst/ALU_OPX[1] ), .OFX0(\coreInst/fullALUInst/aluInst/N_98 ));
  coreInst_fullALUInst_aluInst_RESULT_2_13__SLICE_603 
    \coreInst/fullALUInst/aluInst/RESULT_2[13]/SLICE_603 ( 
    .D1(\coreInst/fullALUInst/aluInst/OVER_0 ), .C1(\coreInst/ALUB_DATA[3] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_46_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp[13] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[13] ), .M1(\coreInst/ALU_OPX_i_1[0] ), 
    .M0(\coreInst/N_171 ), .FXB(\coreInst/fullALUInst/aluInst/N_116 ), 
    .FXA(\coreInst/fullALUInst/aluInst/N_150 ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_116 ), 
    .OFX1(\coreInst/fullALUInst/aluInst/N_216 ));
  coreInst_fullALUInst_aluInst_un38_RESULT_72_SLICE_604 
    \coreInst/fullALUInst/aluInst/un38_RESULT_72/SLICE_604 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_22_2 ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_26_2 ), 
    .D0(\coreInst/fullALUInst/aluInst/N_30_2 ), 
    .B0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_34_2 ), .M0(\coreInst/ALUB_DATA[3] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_68_0 ));
  coreInst_fullALUInst_aluInst_un38_RESULT_51_SLICE_605 
    \coreInst/fullALUInst/aluInst/un38_RESULT_51/SLICE_605 ( 
    .C1(\coreInst/fullALUInst/aluInst/N_8_2 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_10_2 ), .A1(\coreInst/ALUB_DATA[1] ), 
    .D0(\coreInst/ALUB_DATA[1] ), .B0(\coreInst/fullALUInst/aluInst/N_12_2 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_14_2 ), 
    .M0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_48_2 ));
  coreInst_fullALUInst_aluInst_RESULT_11_42_SLICE_606 
    \coreInst/fullALUInst/aluInst/RESULT_11_42/SLICE_606 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_14_0 ), .A1(\coreInst/ALUB_DATA[1] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_10_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_12_0 ), .A0(\coreInst/ALUB_DATA[1] ), 
    .M0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_42_1 ));
  coreInst_fullALUInst_aluInst_RESULT_10_44_SLICE_607 
    \coreInst/fullALUInst/aluInst/RESULT_10_44/SLICE_607 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_14_0 ), .C1(\coreInst/ALUB_DATA[1] ), 
    .A1(\coreInst/fullALUInst/aluInst/a15_b_i[0] ), 
    .C0(\coreInst/ALUB_DATA[1] ), .B0(\coreInst/fullALUInst/aluInst/N_10_0 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_12_0 ), 
    .M0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_42_0 ));
  coreInst_fullALUInst_aluInst_RESULT_10_41_SLICE_608 
    \coreInst/fullALUInst/aluInst/RESULT_10_41/SLICE_608 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_11_0 ), 
    .C1(\coreInst/fullALUInst/aluInst/N_13_0 ), .B1(\coreInst/ALUB_DATA[1] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_7_0 ), .B0(\coreInst/ALUB_DATA[1] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_9_0 ), 
    .M0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_39_0 ));
  coreInst_fullALUInst_aluInst_un38_RESULT_45_SLICE_609 
    \coreInst/fullALUInst/aluInst/un38_RESULT_45/SLICE_609 ( 
    .C1(\coreInst/fullALUInst/aluInst/N_2_2 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_4_3 ), .A1(\coreInst/ALUB_DATA[1] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_6_2 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_8_2 ), .A0(\coreInst/ALUB_DATA[1] ), 
    .M0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_42_2 ));
  coreInst_fullALUInst_aluInst_RESULT_10_37_SLICE_610 
    \coreInst/fullALUInst/aluInst/RESULT_10_37/SLICE_610 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_9_0 ), .B1(\coreInst/ALUB_DATA[1] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_7_0 ), 
    .D0(\coreInst/fullALUInst/aluInst/N_3_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_5_1 ), .B0(\coreInst/ALUB_DATA[1] ), 
    .M0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_35_0_0 ));
  coreInst_fullALUInst_aluInst_un53_RESULT_49_SLICE_611 
    \coreInst/fullALUInst/aluInst/un53_RESULT_49/SLICE_611 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_8 ), 
    .C1(\coreInst/fullALUInst/aluInst/N_10 ), 
    .A1(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_12 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_14 ), 
    .A0(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .M0(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_46 ));
  coreInst_fullALUInst_aluInst_un53_RESULT_43_SLICE_612 
    \coreInst/fullALUInst/aluInst/un53_RESULT_43/SLICE_612 ( 
    .C1(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_4_0 ), 
    .A1(\coreInst/fullALUInst/aluInst/N_2 ), 
    .D0(\coreInst/fullALUInst/aluInst/N_8 ), 
    .C0(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_6 ), 
    .M0(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_40 ));
  coreInst_fullALUInst_aluInst_RESULT_10_21_SLICE_613 
    \coreInst/fullALUInst/aluInst/RESULT_10_21/SLICE_613 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[6] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[5] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[4] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[3] ), .A0(\coreInst/ALUB_DATA[0] ), 
    .M0(\coreInst/ALUB_DATA[1] ), .OFX0(\coreInst/fullALUInst/aluInst/N_20_0 ));
  coreInst_fullALUInst_aluInst_RESULT_10_19_SLICE_614 
    \coreInst/fullALUInst/aluInst/RESULT_10_19/SLICE_614 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[4] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[2] ), .A0(\coreInst/ALUB_DATA[0] ), 
    .M0(\coreInst/ALUB_DATA[1] ), .OFX0(\coreInst/fullALUInst/aluInst/N_18_0 ));
  coreInst_fullALUInst_aluInst_RESULT_10_30_SLICE_615 
    \coreInst/fullALUInst/aluInst/RESULT_10_30/SLICE_615 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[15] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[12] ), .A0(\coreInst/ALUB_DATA[0] ), 
    .M0(\coreInst/ALUB_DATA[1] ), .OFX0(\coreInst/fullALUInst/aluInst/N_29_0 ));
  coreInst_fullALUInst_aluInst_RESULT_10_18_SLICE_616 
    \coreInst/fullALUInst/aluInst/RESULT_10_18/SLICE_616 ( 
    .D1(\coreInst/ALUB_DATA[0] ), .C1(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[2] ), .D0(\coreInst/ALUB_DATA[0] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[0] ), .M0(\coreInst/ALUB_DATA[1] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_17_0 ));
  coreInst_fullALUInst_aluInst_un53_RESULT_25_SLICE_617 
    \coreInst/fullALUInst/aluInst/un53_RESULT_25/SLICE_617 ( 
    .D1(\coreInst/ALUB_DATA[0] ), .B1(\coreInst/fullALUInst/ALUA_DATA[4] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[3] ), .D0(\coreInst/ALUB_DATA[0] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[6] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[5] ), 
    .M0(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_23 ));
  coreInst_fullALUInst_aluInst_un53_RESULT_23_SLICE_618 
    \coreInst/fullALUInst/aluInst/un53_RESULT_23/SLICE_618 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[2] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[1] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[4] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[3] ), .A0(\coreInst/ALUB_DATA[0] ), 
    .M0(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_21 ));
  coreInst_fullALUInst_aluInst_un53_RESULT_33_SLICE_619 
    \coreInst/fullALUInst/aluInst/un53_RESULT_33/SLICE_619 ( 
    .D1(\coreInst/ALUB_DATA[0] ), .C1(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[12] ), .D0(\coreInst/ALUB_DATA[0] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .M0(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_31 ));
  coreInst_fullALUInst_aluInst_un53_RESULT_29_SLICE_620 
    \coreInst/fullALUInst/aluInst/un53_RESULT_29/SLICE_620 ( 
    .C1(\coreInst/ALUB_DATA[0] ), .B1(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[8] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[10] ), .C0(\coreInst/ALUB_DATA[0] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .M0(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_27 ));
  coreInst_fullALUInst_aluInst_un53_RESULT_27_SLICE_621 
    \coreInst/fullALUInst/aluInst/un53_RESULT_27/SLICE_621 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[6] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[5] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[8] ), .A0(\coreInst/ALUB_DATA[0] ), 
    .M0(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_25 ));
  coreInst_fullALUInst_aluInst_un53_RESULT_31_SLICE_622 
    \coreInst/fullALUInst/aluInst/un53_RESULT_31/SLICE_622 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[10] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[9] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[12] ), .B0(\coreInst/ALUB_DATA[0] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .M0(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .OFX0(\coreInst/fullALUInst/aluInst/N_29 ));
  coreInst_fullALUInst_aluInst_RESULT_11_5__SLICE_623 
    \coreInst/fullALUInst/aluInst/RESULT_11[5]/SLICE_623 ( 
    .D1(\coreInst/fullALUInst/aluInst/un53_RESULT[5] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .B1(\coreInst/fullALUInst/aluInst/un10_RESULT[5] ), 
    .A1(\coreInst/fullALUInst/aluInst/RESULT_10[5] ), 
    .D0(\coreInst/fullALUInst/aluInst/un1_RESULT[5] ), .C0(\coreInst/N_38 ), 
    .B0(\coreInst/ALU_OPX_i_1[0] ), .A0(\coreInst/N_134 ), 
    .M0(\coreInst/ALU_OPX[1] ), .OFX0(\coreInst/fullALUInst/aluInst/N_256 ));
  coreInst_registerSequencerInst_SLICE_624 
    \coreInst/registerSequencerInst/SLICE_624 ( .D1(\coreInst/INSTRUCTION[7] ), 
    .C1(\coreInst/GROUPX[0] ), 
    .B1(\coreInst/registerSequencerInst/REGA_WEN_3_i_1 ), 
    .A1(\coreInst/GROUPX[1] ), 
    .D0(\coreInst/registerSequencerInst/REGA_WEN_3_i_a2_4_0_0 ), 
    .C0(\coreInst/GROUPX[0] ), 
    .B0(\coreInst/registerSequencerInst/REGA_WEN_3_i_2 ), 
    .A0(\coreInst/GROUPX[1] ), 
    .F0(\coreInst/registerSequencerInst/REGA_WEN_3_i_3 ), 
    .F1(\coreInst/registerSequencerInst/REGA_WEN_3_i_2 ));
  coreInst_SLICE_625 \coreInst/SLICE_625 ( .D1(\coreInst/GROUPX[1] ), 
    .C1(\coreInst/REGA_DINX[0] ), .B1(\coreInst/DEBUG_MODE ), 
    .A1(\coreInst/N_440 ), .D0(\coreInst/GROUPX[1] ), 
    .C0(\coreInst/REGA_DINX_m1_1[0] ), .B0(\coreInst/GROUPX[0] ), 
    .A0(\coreInst/DEBUG_MODE ), .F0(\coreInst/REGA_DINX[0] ), 
    .F1(\coreInst/registerFileInst/N_456 ));
  mcuResourcesInst_SLICE_626 \mcuResourcesInst/SLICE_626 ( .D1(N_332), 
    .C1(\mcuResourcesInst/N_11 ), .B1(\mcuResourcesInst/PRI_REG[1] ), 
    .A1(N_330), .D0(\mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[1] ), 
    .C0(N_332), .B0(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[1] ), 
    .F0(\mcuResourcesInst/N_11 ), 
    .F1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_4_RNO[1] ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_627 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_627 ( .D1(PIN_RXD_c), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/N_174 ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_I_51_0_S0 ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[1] ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[2] ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/N_164 ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[1] ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/N_164 ));
  mcuResourcesInst_memoryMapperInst_SLICE_628 
    \mcuResourcesInst/memoryMapperInst/SLICE_628 ( 
    .D1(\mcuResourcesInst/WRITE ), .C1(PIN_RDN_c), .B1(RESET), 
    .A1(\mcuResourcesInst/memoryMapperInst/RAM_MAP ), .D0(PIN_WRN0), 
    .C0(\mcuResourcesInst/memoryMapperInst/un1_RESET ), .B0(PIN_RDN_c), 
    .F0(\mcuResourcesInst/BE1 ), 
    .F1(\mcuResourcesInst/memoryMapperInst/un1_RESET ));
  mcuResourcesInst_memoryMapperInst_SLICE_629 
    \mcuResourcesInst/memoryMapperInst/SLICE_629 ( 
    .D1(\mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_4_RNIOQQP ), 
    .C1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_m3_N_3L3 ), 
    .B1(\mcuResourcesInst.memoryMapperInst.GPIO_m3_0_a2_sx ), .A1(N_316), 
    .D0(N_316), .C0(\mcuResourcesInst/memoryMapperInst/GPIO_m3_0_a2_1 ), 
    .B0(N_320), .A0(N_322), 
    .F0(\mcuResourcesInst.memoryMapperInst.GPIO_m3_0_a2_sx ), 
    .F1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_N_4_i_li ));
  coreInst_registerSequencerInst_SLICE_630 
    \coreInst/registerSequencerInst/SLICE_630 ( 
    .D1(\coreInst/registerSequencerInst/REGB_EN_3_i_o2_1_0 ), 
    .C1(\coreInst/registerSequencerInst/N_938 ), .B1(\coreInst/N_437 ), 
    .A1(\coreInst/GROUPX[0] ), .D0(\coreInst/INSTRUCTION[9] ), 
    .C0(\coreInst/GROUPX[1] ), .B0(\coreInst/GROUPX[0] ), 
    .A0(\coreInst/INSTRUCTION[8] ), 
    .F0(\coreInst/registerSequencerInst/REGB_EN_3_i_o2_1_0 ), 
    .F1(\coreInst/registerSequencerInst/N_1019 ));
  coreInst_SLICE_631 \coreInst/SLICE_631 ( .D1(\coreInst/ALUB_SRCX_ss0_i_0_i ), 
    .C1(\coreInst/ADDR_N_8 ), 
    .B1(\coreInst/opxMultiplexerInst/ALUB_SRCX_0_2_N_2L1 ), 
    .A1(\coreInst/opxMultiplexerInst/ALUB_SRCX_0_2_N_3L3 ), 
    .D0(\coreInst/ADDR_N_8 ), .C0(\coreInst/ALUB_SRCX_0_2[1] ), 
    .B0(\coreInst/ALUB_SRCX_a3_1[1] ), .A0(\coreInst/ALUB_SRCX_0_3[1] ), 
    .M1(\CPU_DIN[2] ), .M0(\CPU_DIN[1] ), .CE(\coreInst/EXECUTE ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/ALUB_SRCX[1] ), 
    .Q0(\coreInst/INSTRUCTION[1] ), .F1(\coreInst/ALUB_SRCX_0_2[1] ), 
    .Q1(\coreInst/INSTRUCTION[2] ));
  coreInst_SLICE_632 \coreInst/SLICE_632 ( .D1(\coreInst/ALUB_N_14 ), 
    .C1(\coreInst/N_514 ), .B1(\coreInst/DEBUG_MODE ), 
    .A1(\coreInst/INSTRUCTION[0] ), .D0(\coreInst/DEBUG_ADDR_OUT[1] ), 
    .C0(\coreInst/INSTRUCTION[1] ), .B0(\coreInst/DEBUG_MODE ), 
    .F0(\coreInst/N_514 ), .F1(\coreInst/fullALUInst/muxB/ALUB_DATA_6_RNO[1] ));
  coreInst_programCounterInst_SLICE_633 
    \coreInst/programCounterInst/SLICE_633 ( 
    .D1(\mcuResourcesInst.memoryMapperInst.un5_RAM_MAP ), 
    .C1(\coreInst/programCounterInst/ARGA_i_0_2_1[0] ), 
    .B1(\mcuResourcesInst.memoryMapperInst.INT_MAP ), 
    .A1(\mcuResourcesInst.memoryMapperInst.UART_MAP ), 
    .D0(\mcuResourcesInst.N_27 ), 
    .C0(\mcuResourcesInst.interruptMaskRegisterInst.DOUT_i1_mux_i_0 ), 
    .A0(\mcuResourcesInst.memoryMapperInst.un5_RAM_MAP ), 
    .F0(\coreInst/programCounterInst/ARGA_i_0_2_1[0] ), 
    .F1(\coreInst/programCounterInst/ARGA_i_0_2[0] ));
  coreInst_programCounterInst_SLICE_634 
    \coreInst/programCounterInst/SLICE_634 ( 
    .D1(\mcuResourcesInst.memoryMapperInst.INT_MAP ), 
    .C1(\mcuResourcesInst.DIN_UART[0] ), 
    .B1(\coreInst/programCounterInst/ARGA_i_0_3_N_3L3 ), 
    .A1(\mcuResourcesInst.memoryMapperInst.UART_MAP ), 
    .D0(\mcuResourcesInst.memoryMapperInst.UART_MAP ), 
    .C0(\coreInst/programCounterInst/ARGA_i_0_3_N_5L8 ), 
    .B0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .A0(\coreInst/programCounterInst/ARGA_i_0_3_N_4L6 ), 
    .F0(\coreInst/programCounterInst/ARGA_i_0_3[0] ), 
    .F1(\coreInst/programCounterInst/ARGA_i_0_3_N_5L8 ));
  coreInst_busControllerInst_sequencer_SLICE_635 
    \coreInst/busControllerInst/sequencer/SLICE_635 ( 
    .D1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUSX_R[0] ), .B1(\coreInst/PC_A[0] ), 
    .A1(\coreInst/busControllerInst/ADDR_BUSX_R[1] ), 
    .D0(\coreInst/busControllerInst/sequencer/N_431 ), 
    .C0(\coreInst/busControllerInst/sequencer/WRN0_BUF_3_0_o2_0 ), 
    .B0(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .A0(\coreInst/busControllerInst/sequencer/N_963 ), .F0(\coreInst/N_964 ), 
    .F1(\coreInst/busControllerInst/sequencer/WRN0_BUF_3_0_o2_0 ));
  coreInst_busControllerInst_sequencer_SLICE_636 
    \coreInst/busControllerInst/sequencer/SLICE_636 ( 
    .D1(\coreInst/GROUPX[0] ), .C1(\coreInst/N_476 ), 
    .B1(\coreInst/busControllerInst/sequencer/N_512 ), .A1(\coreInst/FETCH ), 
    .D0(\coreInst/GROUPX[0] ), 
    .C0(\coreInst/busControllerInst/sequencer/ADDR_BUSX_R_3_0_iv_i_1[1] ), 
    .B0(\coreInst/GROUPX[1] ), .A0(\coreInst/DEBUG_MODE ), 
    .F0(\coreInst/busControllerInst/sequencer/ADDR_BUSX_R_3_0_iv_i_2[1] ), 
    .F1(\coreInst/busControllerInst/sequencer/ADDR_BUSX_R_3_0_iv_i_1[1] ));
  coreInst_busControllerInst_SLICE_637 \coreInst/busControllerInst/SLICE_637 
    ( .D1(\coreInst/N_976 ), 
    .C1(\coreInst/busControllerInst/ADDR_BUF_i_2[14] ), 
    .B1(\coreInst/ALU_OPX[3] ), .A1(\coreInst/RESULT_12_0_s[14] ), 
    .D0(\coreInst/un21_RESULT[14] ), 
    .C0(\coreInst/busControllerInst/ADDR_BUF_i_2[14] ), 
    .B0(\coreInst/RESULT_13_RNIB0613[14] ), 
    .A0(\coreInst/busControllerInst/ADDR_BUF_i_3_mb_mb_sn[14] ), .F0(N_316_i), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_3_mb_mb_sn[14] ));
  coreInst_busControllerInst_SLICE_638 \coreInst/busControllerInst/SLICE_638 
    ( .D1(\coreInst/PC_A[0] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUSX_R[0] ), 
    .A1(\coreInst/busControllerInst/ADDR_BUSX_R[1] ), 
    .D0(\coreInst/busControllerInst/ADDR_BUF_i_o2_1[0] ), 
    .C0(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .B0(\coreInst/busControllerInst/N_430 ), .F0(N_439_i), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_o2_1[0] ));
  coreInst_busControllerInst_SLICE_639 \coreInst/busControllerInst/SLICE_639 
    ( .D1(\coreInst/PC_A[1] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUF_i_1_1[1] ), 
    .B1(\coreInst/busControllerInst/N_428 ), 
    .A1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .D0(\coreInst/busControllerInst/ADDR_BUSX_R[1] ), 
    .B0(\coreInst/busControllerInst/ADDR_BUSX_R[0] ), 
    .A0(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .F0(\coreInst/busControllerInst/N_428 ), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_1[1] ));
  coreInst_busControllerInst_SLICE_640 \coreInst/busControllerInst/SLICE_640 
    ( .D1(\coreInst/RESULT_13_RNI4AK82[10] ), .C1(\coreInst/un21_RESULT[10] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUF_i_3_sn[10] ), 
    .A1(\coreInst/busControllerInst/ADDR_BUF_i_2[10] ), .D0(\coreInst/N_976 ), 
    .C0(\coreInst/RESULT109_1 ), .B0(\coreInst/RESULT109_2 ), 
    .A0(\coreInst/busControllerInst/ADDR_BUF_i_2[10] ), 
    .F0(\coreInst/busControllerInst/ADDR_BUF_i_3_sn[10] ), .F1(N_156));
  coreInst_busControllerInst_SLICE_641 \coreInst/busControllerInst/SLICE_641 
    ( .D1(\coreInst/RESULT_13_RNIR8583[9] ), .C1(\coreInst/un21_RESULT[9] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUF_i_2[9] ), 
    .A1(\coreInst/busControllerInst/ADDR_BUF_i_3_sn[9] ), 
    .D0(\coreInst/busControllerInst/ADDR_BUF_i_2[9] ), 
    .C0(\coreInst/RESULT_12_0_s[14] ), .B0(\coreInst/N_976 ), 
    .A0(\coreInst/ALU_OPX[3] ), 
    .F0(\coreInst/busControllerInst/ADDR_BUF_i_3_sn[9] ), .F1(N_324));
  coreInst_registerFileInst_SLICE_642 \coreInst/registerFileInst/SLICE_642 ( 
    .C1(\coreInst/INSTRUCTION[9] ), .B1(\coreInst/N_985 ), 
    .A1(\coreInst/INSTRUCTION[8] ), .D0(\coreInst/N_1001 ), 
    .C0(\coreInst/registerFileInst/N_871 ), .B0(\coreInst/N_476 ), 
    .A0(\coreInst/N_985 ), .F0(\coreInst/registerFileInst/ADDRB_0_1[1] ), 
    .F1(\coreInst/registerFileInst/N_871 ));
  coreInst_SLICE_643 \coreInst/SLICE_643 ( .D1(\coreInst/fullALUInst/N_44_0 ), 
    .C1(\coreInst/N_985 ), .B1(\coreInst/INSTRUCTION[0] ), 
    .A1(\coreInst/DEBUG_MODE ), .D0(\coreInst/GROUPX[1] ), 
    .C0(\coreInst/ALU_ALU_OPX[0] ), .B0(\coreInst/DEBUG_MODE ), 
    .A0(\coreInst/GROUPX_0_rep1 ), .F0(\coreInst/N_985 ), 
    .F1(\coreInst/fullALUInst/ALUA_DATA[0] ));
  coreInst_fullALUInst_muxB_SLICE_644 \coreInst/fullALUInst/muxB/SLICE_644 ( 
    .D1(\coreInst/ALUB_SRCX[1] ), .C1(\coreInst/ALUB_N_14 ), 
    .B1(\coreInst/ARGB_X[0] ), .A1(\coreInst/REGB_DOUT[8] ), 
    .D0(\coreInst/INSTRUCTION[7] ), .C0(\coreInst/ALUB_DATA_0_0[8] ), 
    .B0(\coreInst/N_134 ), .A0(\coreInst/ALUB_SRCX[1] ), 
    .F0(\coreInst/ALUB_DATA[8] ), .F1(\coreInst/ALUB_DATA_0_0[8] ));
  coreInst_fullALUInst_muxB_SLICE_645 \coreInst/fullALUInst/muxB/SLICE_645 ( 
    .D1(\coreInst/ALUB_SRCX[1] ), .C1(\coreInst/ALUB_N_14 ), 
    .B1(\coreInst/N_487 ), .A1(\coreInst/REGB_DOUT[10] ), 
    .D0(\coreInst/ALUB_DATA_0[10] ), .C0(\coreInst/N_134 ), 
    .B0(\coreInst/INSTRUCTION[7] ), .A0(\coreInst/ALUB_SRCX[1] ), 
    .F0(\coreInst/ALUB_DATA[10] ), .F1(\coreInst/ALUB_DATA_0[10] ));
  coreInst_fullALUInst_muxB_SLICE_646 \coreInst/fullALUInst/muxB/SLICE_646 ( 
    .D1(\coreInst/ALUB_N_14 ), .C1(\coreInst/INSTRUCTION[4] ), 
    .A1(\coreInst/REGB_DOUT[12] ), .D0(\coreInst/ALUB_SRCX[1] ), 
    .C0(\coreInst/fullALUInst/muxB/N_13 ), .B0(\coreInst/ALUB_N_14 ), 
    .A0(\coreInst/INSTRUCTION[7] ), .F0(\coreInst/fullALUInst/N_45 ), 
    .F1(\coreInst/fullALUInst/muxB/N_13 ));
  coreInst_fullALUInst_muxB_SLICE_647 \coreInst/fullALUInst/muxB/SLICE_647 ( 
    .D1(\coreInst/ALUB_N_14 ), .C1(\coreInst/REGB_DOUT[13] ), 
    .B1(\coreInst/INSTRUCTION[5] ), .D0(\coreInst/ALUB_SRCX[1] ), 
    .C0(\coreInst/fullALUInst/muxB/N_14 ), .B0(\coreInst/INSTRUCTION[7] ), 
    .A0(\coreInst/ALUB_N_14 ), .F0(\coreInst/fullALUInst/N_46 ), 
    .F1(\coreInst/fullALUInst/muxB/N_14 ));
  coreInst_fullALUInst_muxB_SLICE_648 \coreInst/fullALUInst/muxB/SLICE_648 ( 
    .C1(\coreInst/REGB_DOUT[14] ), .B1(\coreInst/INSTRUCTION[6] ), 
    .A1(\coreInst/ALUB_N_14 ), .D0(\coreInst/fullALUInst/muxB/N_15 ), 
    .C0(\coreInst/ALUB_N_14 ), .B0(\coreInst/ALUB_SRCX[1] ), 
    .A0(\coreInst/INSTRUCTION[7] ), .F0(\coreInst/fullALUInst/N_47 ), 
    .F1(\coreInst/fullALUInst/muxB/N_15 ));
  coreInst_fullALUInst_muxB_SLICE_649 \coreInst/fullALUInst/muxB/SLICE_649 ( 
    .D1(\coreInst/N_513 ), .C1(\coreInst/ALUB_N_14 ), 
    .A1(\coreInst/REGB_DOUT[11] ), .D0(\coreInst/ALUB_SRCX[1] ), 
    .C0(\coreInst/fullALUInst/muxB/N_12 ), .B0(\coreInst/INSTRUCTION[7] ), 
    .A0(\coreInst/ALUB_N_14 ), .F0(\coreInst/fullALUInst/N_44 ), 
    .F1(\coreInst/fullALUInst/muxB/N_12 ));
  coreInst_fullALUInst_muxB_SLICE_650 \coreInst/fullALUInst/muxB/SLICE_650 ( 
    .D1(\coreInst/ALUB_SRCX[1] ), .C1(\coreInst/ALUB_DATA_0[9] ), 
    .B1(\coreInst/INSTRUCTION[7] ), .A1(\coreInst/N_134 ), 
    .D0(\coreInst/ALUB_SRCX[1] ), .C0(\coreInst/ALUB_N_14 ), 
    .B0(\coreInst/REGB_DOUT[9] ), .A0(\coreInst/N_514 ), 
    .F0(\coreInst/ALUB_DATA_0[9] ), .F1(\coreInst/ALUB_DATA[9] ));
  coreInst_fullALUInst_SLICE_651 \coreInst/fullALUInst/SLICE_651 ( 
    .D1(\coreInst/N_67 ), .C1(\coreInst/ALUB_DATA[1] ), .B1(\coreInst/N_134 ), 
    .A1(\coreInst/N_35 ), .D0(\coreInst/fullALUInst/muxB/ALUB_DATA_6_RNO[1] ), 
    .C0(\coreInst/N_34 ), .B0(\coreInst/ALUB_SRCX[1] ), .A0(\coreInst/N_134 ), 
    .F0(\coreInst/ALUB_DATA[1] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_10_0_0 ));
  coreInst_fullALUInst_SLICE_652 \coreInst/fullALUInst/SLICE_652 ( 
    .D1(\coreInst/N_134 ), .C1(\coreInst/N_34 ), .B1(\coreInst/ALUB_DATA[3] ), 
    .A1(\coreInst/N_66 ), .D0(\coreInst/N_36 ), 
    .C0(\coreInst/fullALUInst/muxB/ALUB_DATA_6_RNO[3] ), .B0(\coreInst/N_134 ), 
    .A0(\coreInst/ALUB_SRCX[1] ), .F0(\coreInst/ALUB_DATA[3] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_13_0_0 ));
  coreInst_fullALUInst_muxB_SLICE_653 \coreInst/fullALUInst/muxB/SLICE_653 ( 
    .D1(\coreInst/REGB_DOUT[1] ), .C1(\coreInst/ALUB_SRCX_a3_1[1] ), 
    .B1(\coreInst/ADDR_N_8 ), .A1(\coreInst/N_514 ), 
    .D0(\coreInst/ALUB_SRCX_0_2[1] ), 
    .C0(\coreInst/fullALUInst/muxB/ALUB_DATA_3_N_4L6 ), 
    .B0(\coreInst/REGB_DOUT[1] ), 
    .A0(\coreInst/fullALUInst/muxB/ALUB_DATA_3_N_3L4 ), .F0(\coreInst/N_34 ), 
    .F1(\coreInst/fullALUInst/muxB/ALUB_DATA_3_N_4L6 ));
  coreInst_fullALUInst_aluInst_SLICE_654 
    \coreInst/fullALUInst/aluInst/SLICE_654 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp_1[6] ), 
    .C1(\coreInst/fullALUInst/aluInst/un3_tmp_6_0_0 ), 
    .B1(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .A1(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp[6] ), 
    .C0(\coreInst/fullALUInst/aluInst/un3_tmp[4] ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp_5_0_1 ), 
    .A0(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .F0(\coreInst/fullALUInst/aluInst/tmp_3_0[6] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp[6] ));
  coreInst_fullALUInst_aluInst_SLICE_655 
    \coreInst/fullALUInst/aluInst/SLICE_655 ( .D1(\coreInst/N_171 ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[0] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_121 ), .D0(\coreInst/ALUB_DATA[0] ), 
    .C0(\coreInst/fullALUInst/aluInst/un38_RESULT[0] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[0] ), .A0(\coreInst/ALU_OPX[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_121 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_235 ));
  coreInst_fullALUInst_aluInst_SLICE_656 
    \coreInst/fullALUInst/aluInst/SLICE_656 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_6[15] ), 
    .B1(\coreInst/ALU_OPX[1] ), .A1(\coreInst/ALUB_DATA[15] ), 
    .C0(\coreInst/fullALUInst/N_48 ), .B0(\coreInst/N_134 ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_6[15] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_168 ));
  coreInst_fullALUInst_aluInst_SLICE_657 
    \coreInst/fullALUInst/aluInst/SLICE_657 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_256 ), .B1(\coreInst/RESULT109_1 ), 
    .A1(\coreInst/fullALUInst/aluInst/RESULT_12_1_RNO_0[5] ), 
    .D0(\coreInst/RESULT109_1 ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[5] ), 
    .B0(\coreInst/fullALUInst/aluInst/un21_RESULT[5] ), 
    .A0(\coreInst/RESULT109_2 ), .F0(\coreInst/fullALUInst/aluInst/N_274 ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[5] ));
  coreInst_fullALUInst_aluInst_SLICE_658 
    \coreInst/fullALUInst/aluInst/SLICE_658 ( 
    .D1(\coreInst/fullALUInst/aluInst/tmp_3[3] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_10[0] ), 
    .B1(\coreInst/fullALUInst/aluInst/tmp_3_3[5] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[5] ), .D0(\coreInst/N_171 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_175 ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp[5] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[5] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_12_1_RNO_0[5] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_175 ));
  coreInst_fullALUInst_aluInst_SLICE_659 
    \coreInst/fullALUInst/aluInst/SLICE_659 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_29_0 ), 
    .A1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_45_1 ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_0 ), .B0(\coreInst/ALUB_DATA[3] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_134_mux ), 
    .F1(\coreInst/fullALUInst/aluInst/N_45_1 ));
  coreInst_fullALUInst_aluInst_SLICE_660 
    \coreInst/fullALUInst/aluInst/SLICE_660 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .C1(\coreInst/fullALUInst/aluInst/N_31_1 ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_47_1 ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_0 ), .A0(\coreInst/ALUB_DATA[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_136_mux ), 
    .F1(\coreInst/fullALUInst/aluInst/N_47_1 ));
  coreInst_fullALUInst_aluInst_SLICE_661 
    \coreInst/fullALUInst/aluInst/SLICE_661 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_28_0 ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .A1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_44_1 ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_0 ), .A0(\coreInst/ALUB_DATA[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_133_mux ), 
    .F1(\coreInst/fullALUInst/aluInst/N_44_1 ));
  coreInst_fullALUInst_aluInst_SLICE_662 
    \coreInst/fullALUInst/aluInst/SLICE_662 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp_1[5] ), 
    .C1(\coreInst/ALUB_DATA[1] ), .B1(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .A1(\coreInst/ALUB_DATA[3] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .C0(\coreInst/fullALUInst/aluInst/un3_tmp_5_0_1 ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .A0(\coreInst/fullALUInst/aluInst/un3_tmp_4_0_1 ), 
    .F0(\coreInst/fullALUInst/aluInst/tmp_3_3[5] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_5_0_1 ));
  coreInst_fullALUInst_aluInst_SLICE_663 
    \coreInst/fullALUInst/aluInst/SLICE_663 ( 
    .C1(\coreInst/fullALUInst/aluInst/N_25 ), 
    .B1(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_21 ), 
    .D0(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_41 ), 
    .B0(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_17 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_57 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_41 ));
  coreInst_fullALUInst_aluInst_SLICE_664 
    \coreInst/fullALUInst/aluInst/SLICE_664 ( .C1(\coreInst/ALUB_DATA[1] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_14_0 ), 
    .A1(\coreInst/fullALUInst/aluInst/N_12_0 ), 
    .D0(\coreInst/fullALUInst/aluInst/a15_b_i[0] ), 
    .C0(\coreInst/ALUB_DATA[1] ), .B0(\coreInst/fullALUInst/aluInst/N_28_0 ), 
    .A0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_44_0 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_28_0 ));
  coreInst_fullALUInst_aluInst_SLICE_665 
    \coreInst/fullALUInst/aluInst/SLICE_665 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_4_3 ), 
    .C1(\coreInst/fullALUInst/aluInst/N_6_2 ), .A1(\coreInst/ALUB_DATA[1] ), 
    .D0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_2_2 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_23_2 ), .A0(\coreInst/ALUB_DATA[1] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_40_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_23_2 ));
  coreInst_fullALUInst_aluInst_SLICE_666 
    \coreInst/fullALUInst/aluInst/SLICE_666 ( 
    .D1(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .C1(\coreInst/fullALUInst/aluInst/N_6 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_4_0 ), 
    .D0(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .C0(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_22 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_38 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_22 ));
  coreInst_fullALUInst_aluInst_SLICE_667 
    \coreInst/fullALUInst/aluInst/SLICE_667 ( .D1(\coreInst/ALUB_DATA[0] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[2] ), .D0(\coreInst/ALUB_DATA[0] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_3_2 ), .B0(\coreInst/ALUB_DATA[1] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[0] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_20_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_3_2 ));
  coreInst_fullALUInst_aluInst_SLICE_668 
    \coreInst/fullALUInst/aluInst/SLICE_668 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[2] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[1] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .D0(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[0] ), .B0(\coreInst/ALUB_DATA[0] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_3 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_19 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_3 ));
  coreInst_SLICE_669 \coreInst/SLICE_669 ( 
    .D1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[18] ), 
    .C1(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[18] ), 
    .B1(\coreInst/fullALUInst/aluInst/PARITY_2_1_RNO ), 
    .A1(\coreInst/madd_14[15] ), 
    .D0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[27] ), 
    .C0(\coreInst/fullALUInst/aluInst/PARITY_2_1 ), 
    .B0(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[27] ), 
    .A0(\coreInst/madd_14[15] ), .M1(\PIN_DEBUG_DATA_in[3] ), 
    .M0(\PIN_DEBUG_DATA_in[2] ), .CE(\coreInst/debugger/EN_OP ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .F0(\coreInst/fullALUInst/aluInst/PARITY_2_6 ), 
    .Q0(\coreInst/DEBUG_OP[2] ), 
    .F1(\coreInst/fullALUInst/aluInst/PARITY_2_1 ), 
    .Q1(\coreInst/DEBUG_OP[3] ));
  coreInst_SLICE_670 \coreInst/SLICE_670 ( 
    .D1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[22] ), 
    .C1(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[22] ), 
    .B1(\coreInst/madd_14[15] ), 
    .A1(\coreInst/fullALUInst/aluInst/PARITY_2_3_RNO ), 
    .D0(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[31] ), 
    .C0(\coreInst/fullALUInst/aluInst/PARITY_2_3 ), 
    .B0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[31] ), 
    .A0(\coreInst/madd_14[15] ), .M0(\coreInst/DEBUG_OP[0] ), 
    .CE(\coreInst/debugger/EN_DH ), .LSR(\coreInst/debugger/requestGen/Q_R10 ), 
    .CLK(\coreInst/debugger/requestGen/dhReqReg/un1_DEBUG_WRN_uclk ), 
    .F0(\coreInst/fullALUInst/aluInst/PARITY_2_9 ), 
    .Q0(\coreInst/debugger/requestGen/dhReqReg/Q_R[0] ), 
    .F1(\coreInst/fullALUInst/aluInst/PARITY_2_3 ));
  coreInst_SLICE_671 \coreInst/SLICE_671 ( 
    .C1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[25] ), 
    .B1(\coreInst/madd_14[15] ), 
    .A1(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[25] ), 
    .D0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[24] ), 
    .C0(\coreInst/fullALUInst/aluInst/PARITY_2_4_RNO ), 
    .B0(\coreInst/madd_14[15] ), 
    .A0(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[24] ), 
    .M1(\PIN_DEBUG_DATA_in[1] ), .M0(\PIN_DEBUG_DATA_in[0] ), 
    .CE(\coreInst/debugger/EN_OP ), .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .F0(\coreInst/fullALUInst/aluInst/PARITY_2_4 ), 
    .Q0(\coreInst/DEBUG_OP[0] ), 
    .F1(\coreInst/fullALUInst/aluInst/PARITY_2_4_RNO ), 
    .Q1(\coreInst/DEBUG_OP[1] ));
  coreInst_SLICE_672 \coreInst/SLICE_672 ( 
    .D1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[29] ), 
    .C1(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[29] ), 
    .B1(\coreInst/madd_14[15] ), 
    .D0(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[28] ), 
    .C0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[28] ), 
    .B0(\coreInst/madd_14[15] ), 
    .A0(\coreInst/fullALUInst/aluInst/PARITY_2_7_RNO ), 
    .M1(\coreInst/debugger/requestGen/dhReqReg/Q_R[0] ), 
    .M0(\coreInst/debugger/requestGen/dhReqReg/Q_PHI0[0] ), 
    .LSR(\coreInst/debugger/requestGen/Q_R10 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/fullALUInst/aluInst/PARITY_2_7 ), 
    .Q0(\coreInst/DEBUG_INC_REQ ), 
    .F1(\coreInst/fullALUInst/aluInst/PARITY_2_7_RNO ), 
    .Q1(\coreInst/debugger/requestGen/dhReqReg/Q_PHI0[0] ));
  coreInst_fullALUInst_aluInst_SLICE_673 
    \coreInst/fullALUInst/aluInst/SLICE_673 ( .D1(\coreInst/ALUB_DATA[4] ), 
    .C1(\coreInst/fullALUInst/aluInst/N_20_2 ), 
    .B1(\coreInst/fullALUInst/aluInst/un38_RESULT_101_0_1 ), 
    .A1(\coreInst/ALUB_DATA[3] ), .D0(\coreInst/fullALUInst/aluInst/N_28_2 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_24_2 ), 
    .B0(\coreInst/fullALUInst/ALUB_DATA[2] ), .A0(\coreInst/ALUB_DATA[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/un38_RESULT_101_0_1 ), 
    .F1(\coreInst/fullALUInst/aluInst/un38_RESULT_101_0 ));
  coreInst_fullALUInst_aluInst_SLICE_674 
    \coreInst/fullALUInst/aluInst/SLICE_674 ( 
    .D1(\coreInst/fullALUInst/aluInst/madd_12[8] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_3_sx[8] ), 
    .B1(\coreInst/fullALUInst/aluInst/madd_14 ), .A1(\coreInst/ALU_OPX[3] ), 
    .D0(\coreInst/ALU_OPX[3] ), .C0(\coreInst/fullALUInst/ALUA_DATA[8] ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp[8] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_3_sx[8] ), 
    .F1(\coreInst.fullALUInst.aluInst.N_129 ));
  SLICE_675 SLICE_675( .D1(\coreInst/ALU_R[1] ), .C1(\coreInst/N_976 ), 
    .B1(\coreInst/busControllerInst/N_807 ), 
    .A1(\coreInst/busControllerInst/ADDR_BUF_i_1[1] ), .D0(N_330), 
    .C0(\mcuResourcesInst/WRITE ), .B0(N_332), 
    .A0(\mcuResourcesInst/RD_INT_0_sqmuxa ), 
    .F0(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_0_sqmuxa ), 
    .F1(N_332));
  mcuResourcesInst_SLICE_676 \mcuResourcesInst/SLICE_676 ( 
    .D1(\mcuResourcesInst.memoryMapperInst.INT_MAP ), .C1(\DOUT[2] ), 
    .A1(\mcuResourcesInst/N_12 ), 
    .D0(\mcuResourcesInst.interruptMaskRegisterInst.INTS_REG[2] ), .B0(N_332), 
    .A0(\mcuResourcesInst.interruptMaskRegisterInst.MASK_REG[2] ), 
    .F0(\mcuResourcesInst/N_12 ), 
    .F1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_2_d[2] ));
  SLICE_677 SLICE_677( .D1(\coreInst/ALU_R[2] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUF_i_1[2] ), 
    .B1(\coreInst/busControllerInst/N_802 ), .A1(\coreInst/N_976 ), 
    .D0(PIN_RESETN_c), .C0(PIN_RDN_c), .B0(N_330), 
    .A0(\coreInst.debugger.DEBUG_RESET ), 
    .F0(\mcuResourcesInst.memoryMapperInst.CPU_m7_e_1 ), .F1(N_330));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_678 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_678 ( 
    .D1(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data_0_sqmuxa ), 
    .C1(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[2] ), 
    .B1(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[1] ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/CO0 ), .D0(PIN_RESETN_c), 
    .C0(\coreInst.debugger.DEBUG_RESET ), 
    .B0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[0] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[1] ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data_0_sqmuxa ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/un1_r_TX_Data_0_sqmuxa_1 ));
  SLICE_679 SLICE_679( .D1(\coreInst.debugger.DEBUG_RESET ), .A1(PIN_RESETN_c), 
    .D0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[0] ), 
    .C0(\mcuResourcesInst/UARTInst/START_TX ), .B0(RESET), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[1] ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data_0_sqmuxa_1 ), 
    .F1(RESET));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_680 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_680 ( 
    .D1(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[0] ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[1] ), 
    .D0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[0] ), 
    .C0(\mcuResourcesInst/UARTInst/uartTxInst/N_29_3 ), 
    .B0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[2] ), 
    .A0(\mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[1] ), 
    .F0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_ns_0_a2_1_1[0] ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/N_29_3 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_681 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_681 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32 ), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[0] ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[2] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[1] ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[2] ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte_1_sqmuxa ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[1] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[0] ), .M0(PIN_RXD_c), 
    .CE(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[0] ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte_RNO[3] ), 
    .Q0(\mcuResourcesInst/UARTInst/RX_BYTE[0] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte_1_sqmuxa ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_682 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_682 ( .C1(PIN_RXD_c), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[0] ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[2] ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_SM_Main_5_0_a2_0 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[1] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_I_51_0_S0 ), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_SM_Main_5_i ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_SM_Main_5_0_a2_0 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_683 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_683 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[0] ), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[2] ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[1] ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/N_174 ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32 ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_I_51_0_S0 ), 
    .M0(PIN_RXD_c), .CE(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[5] ), 
    .CLK(PIN_CLK_X1_c), .F0(\mcuResourcesInst/UARTInst/uartRXInst/N_165 ), 
    .Q0(\mcuResourcesInst/UARTInst/RX_BYTE[5] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/N_174 ));
  mcuResourcesInst_SLICE_684 \mcuResourcesInst/SLICE_684 ( 
    .D1(\mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_N_2L1_0 ), .C1(N_318), 
    .B1(\mcuResourcesInst.N_108 ), .A1(N_314), .D0(PIN_RDN_c), 
    .C0(\mcuResourcesInst.memoryMapperInst.UART_MAP ), .B0(PIN_RESETN_c), 
    .A0(\coreInst.debugger.DEBUG_RESET ), 
    .F0(\mcuResourcesInst/UARTInst/DOUT_20 ), 
    .F1(\mcuResourcesInst.memoryMapperInst.UART_MAP ));
  mcuResourcesInst_SLICE_685 \mcuResourcesInst/SLICE_685 ( .C1(PIN_WRN0), 
    .A1(PIN_WRN1), .D0(\mcuResourcesInst/UARTInst/TX_ACTIVE ), 
    .C0(\mcuResourcesInst/WRITE ), .B0(\mcuResourcesInst/UARTInst/N_179 ), 
    .A0(\mcuResourcesInst/UART_MAP_0_a2_RNIFEBT ), 
    .F0(\mcuResourcesInst/UARTInst/START_TX_1_sqmuxa_1_i ), 
    .F1(\mcuResourcesInst/WRITE ));
  mcuResourcesInst_SLICE_686 \mcuResourcesInst/SLICE_686 ( 
    .D1(\mcuResourcesInst.memoryMapperInst.UART_MAP ), 
    .C1(\coreInst.debugger.DEBUG_RESET ), .B1(PIN_RESETN_c), 
    .D0(\mcuResourcesInst/WRITE ), 
    .C0(\mcuResourcesInst/UART_MAP_0_a2_RNIFEBT ), .B0(N_330), 
    .A0(\mcuResourcesInst/UARTInst/TX_DONE ), 
    .F0(\mcuResourcesInst/UARTInst/TXI_R_1_sqmuxa_i ), 
    .F1(\mcuResourcesInst/UART_MAP_0_a2_RNIFEBT ));
  mcuResourcesInst_UARTInst_SLICE_687 \mcuResourcesInst/UARTInst/SLICE_687 ( 
    .B1(N_330), .A1(N_332), .D0(\mcuResourcesInst/UART_MAP_0_a2_RNIFEBT ), 
    .C0(\mcuResourcesInst/UARTInst/N_179 ), 
    .B0(\mcuResourcesInst/UARTInst/TX_DONE ), .A0(\mcuResourcesInst/WRITE ), 
    .M1(N_187_i), .M0(\DOUT[0] ), 
    .CE(\mcuResourcesInst/UARTInst/TX_CLK_DIV_1_sqmuxa ), .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/TX_COMPLETE_R_1_sqmuxa_i ), 
    .Q0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[0] ), 
    .F1(\mcuResourcesInst/UARTInst/N_179 ), 
    .Q1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[10] ));
  mcuResourcesInst_SLICE_688 \mcuResourcesInst/SLICE_688 ( 
    .D1(\mcuResourcesInst/DIN_ROM[8] ), 
    .C1(\mcuResourcesInst.memoryMapperInst.un5_ROM_MAP ), 
    .B1(\mcuResourcesInst/RAMInst/DIN_RAM[8] ), 
    .D0(\mcuResourcesInst.memoryMapperInst.UART_MAP ), 
    .C0(\mcuResourcesInst/UARTInst/DIN_UART[8] ), 
    .B0(\mcuResourcesInst/N_13_0 ), .F0(\DOUT_RNIL8MT[8] ), 
    .F1(\mcuResourcesInst/N_13_0 ));
  SLICE_689 SLICE_689( .D1(\RESULT_13_RNI7R413[13] ), 
    .C1(\coreInst.busControllerInst.ADDR_BUF_i_3_mb_mb_1[13] ), 
    .B1(\coreInst.busControllerInst.ADDR_BUF_i_2[13] ), 
    .A1(\coreInst.fullALUInst.aluInst.un21_RESULT[13] ), .D0(N_324), 
    .C0(N_314), .B0(N_156), .A0(N_318), 
    .F0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_m3_N_3L3 ), .F1(N_318));
  SLICE_690 SLICE_690( .D1(\coreInst/programCounterInst/N_481 ), 
    .C1(GPIO_m3_0_a2_x_0), .B1(\PIN_DIN_GPIO_c[0] ), 
    .A1(\mcuResourcesInst.memoryMapperInst.GPIO_m3_0_a2_sx ), .D0(N_314), 
    .C0(N_318), .B0(N_156), .A0(N_324), .F0(GPIO_m3_0_a2_x_0), 
    .F1(\coreInst/programCounterInst/ARGA_i_0_3_N_4L6 ));
  SLICE_691 SLICE_691( .D1(\coreInst/N_128 ), 
    .C1(\coreInst/RESULT_13_RNIO6M8B[7] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUF_i_2[7] ), 
    .A1(\coreInst.busControllerInst.ADDR_m4_e_2 ), 
    .D0(\mcuResourcesInst.N_108 ), .C0(N_160), 
    .B0(\mcuResourcesInst/memoryMapperInst/GPIO_MAP_8_0_sx ), 
    .A0(\mcuResourcesInst.memoryMapperInst.INT_MAP_1 ), 
    .F0(\mcuResourcesInst/memoryMapperInst/CPU_m1_e_1 ), .F1(N_160));
  mcuResourcesInst_memoryMapperInst_SLICE_692 
    \mcuResourcesInst/memoryMapperInst/SLICE_692 ( 
    .D1(\mcuResourcesInst.memoryMapperInst.GPIO_m3_0_a2_sx ), 
    .C1(\mcuResourcesInst.N_108 ), .B1(N_314), .A1(N_318), .D0(PIN_RDN_c), 
    .C0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), .B0(PIN_RESETN_c), 
    .A0(\coreInst.debugger.DEBUG_RESET ), .F0(RD_GPIO_i), 
    .F1(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ));
  mcuResourcesInst_memoryMapperInst_SLICE_693 
    \mcuResourcesInst/memoryMapperInst/SLICE_693 ( 
    .D1(\mcuResourcesInst.memoryMapperInst.UART_MAP ), .C1(GPIO_m3_0_a2_x_0), 
    .B1(\mcuResourcesInst.memoryMapperInst.GPIO_m3_0_a2_sx ), 
    .A1(\mcuResourcesInst.memoryMapperInst.un5_RAM_MAP ), 
    .D0(\mcuResourcesInst/memoryMapperInst/N_81 ), 
    .C0(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), .B0(\DOUT[0] ), 
    .F0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_d[0] ), 
    .F1(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ));
  mcuResourcesInst_memoryMapperInst_SLICE_694 
    \mcuResourcesInst/memoryMapperInst/SLICE_694 ( 
    .D1(\mcuResourcesInst.memoryMapperInst.INT_MAP_8 ), 
    .C1(\mcuResourcesInst/memoryMapperInst/INT_MAP_sx ), .B1(N_318), 
    .A1(N_314), .D0(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .C0(\mcuResourcesInst.memoryMapperInst.INT_MAP ), 
    .A0(\mcuResourcesInst.memoryMapperInst.CPU_m7_e_1 ), 
    .F0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_s[2] ), 
    .F1(\mcuResourcesInst.memoryMapperInst.INT_MAP ));
  SLICE_695 SLICE_695( .D1(\mcuResourcesInst.memoryMapperInst.CPU_DIN_sn_N_8 ), 
    .C1(\mcuResourcesInst.N_64 ), .B1(\mcuResourcesInst.N_82 ), 
    .A1(\coreInst/registerFileInst/N_456 ), 
    .D0(\mcuResourcesInst.memoryMapperInst.INT_MAP ), 
    .C0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_4_RNO[1] ), .B0(\DOUT[1] ), 
    .A0(\mcuResourcesInst/memoryMapperInst/d_m5_0 ), 
    .F0(\mcuResourcesInst.N_64 ), .F1(\coreInst/registerFileInst/N_675 ));
  mcuResourcesInst_memoryMapperInst_SLICE_696 
    \mcuResourcesInst/memoryMapperInst/SLICE_696 ( 
    .C1(\mcuResourcesInst/memoryMapperInst/INT_MAP_11_1_x ), .B1(N_316), 
    .A1(N_314), .D0(\mcuResourcesInst.memoryMapperInst.INT_MAP_8 ), 
    .C0(\mcuResourcesInst.memoryMapperInst.INT_MAP_11 ), 
    .B0(\mcuResourcesInst.memoryMapperInst.INT_MAP_1 ), .A0(RESET), 
    .F0(\mcuResourcesInst/RD_INT_0_sqmuxa ), 
    .F1(\mcuResourcesInst.memoryMapperInst.INT_MAP_11 ));
  SLICE_697 SLICE_697( .D1(\coreInst/un21_RESULT[14] ), 
    .C1(\coreInst/RESULT_13_RNIB0613[14] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUF_i_3_mb_mb_sn[14] ), 
    .A1(\coreInst/busControllerInst/ADDR_BUF_i_2[14] ), 
    .D0(\mcuResourcesInst/memoryMapperInst/CPU_m1_e_1_2 ), .C0(N_316), 
    .B0(N_314), .A0(N_318), 
    .F0(\mcuResourcesInst/memoryMapperInst/CPU_N_9_mux_0 ), .F1(N_316));
  mcuResourcesInst_memoryMapperInst_SLICE_698 
    \mcuResourcesInst/memoryMapperInst/SLICE_698 ( .D1(N_318), .B1(N_316), 
    .A1(N_314), .D0(RESET), .C0(PIN_RDN_c), 
    .B0(\mcuResourcesInst/memoryMapperInst/RAM_MAP ), 
    .A0(\mcuResourcesInst/WRITE ), .F0(\mcuResourcesInst/WR_RAM ), 
    .F1(\mcuResourcesInst/memoryMapperInst/RAM_MAP ));
  mcuResourcesInst_memoryMapperInst_SLICE_699 
    \mcuResourcesInst/memoryMapperInst/SLICE_699 ( 
    .D1(\mcuResourcesInst/memoryMapperInst/INT_MAP_11_1_sx ), .C1(N_316), 
    .B1(N_320), .A1(N_322), .D0(\mcuResourcesInst.memoryMapperInst.INT_MAP_8 ), 
    .C0(\mcuResourcesInst.memoryMapperInst.INT_MAP_1 ), 
    .B0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_bm_RNO_0[3] ), 
    .A0(\mcuResourcesInst.memoryMapperInst.INT_MAP_11_1 ), 
    .F0(\mcuResourcesInst/memoryMapperInst/CPU_N_6 ), 
    .F1(\mcuResourcesInst.memoryMapperInst.INT_MAP_11_1 ));
  mcuResourcesInst_memoryMapperInst_SLICE_700 
    \mcuResourcesInst/memoryMapperInst/SLICE_700 ( .C1(N_318), .A1(N_316), 
    .D0(N_314), .C0(\mcuResourcesInst/memoryMapperInst/un5_ROM_MAP_1 ), 
    .B0(\mcuResourcesInst/DIN_RAM[4] ), .A0(\mcuResourcesInst/DIN_ROM[4] ), 
    .F0(\mcuResourcesInst/memoryMapperInst/N_31 ), 
    .F1(\mcuResourcesInst/memoryMapperInst/un5_ROM_MAP_1 ));
  SLICE_701 SLICE_701( .D1(\coreInst/RESULT_13_RNI3M313[12] ), 
    .C1(\coreInst/un21_RESULT[12] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUF_i_2[12] ), 
    .A1(\coreInst/busControllerInst/ADDR_m4_0_a2_2 ), 
    .D0(\mcuResourcesInst.memoryMapperInst.INT_MAP_8 ), 
    .C0(\mcuResourcesInst.memoryMapperInst.INT_MAP_1 ), .B0(N_320), .A0(N_322), 
    .F0(\mcuResourcesInst/memoryMapperInst/CPU_m1_e_1_2 ), .F1(N_320));
  SLICE_702 SLICE_702( .C1(\mcuResourcesInst.memoryMapperInst.UART_MAP ), 
    .B1(\mcuResourcesInst.DIN_UART[2] ), .A1(\mcuResourcesInst.N_29 ), 
    .D0(N_316), .C0(N_318), .B0(\mcuResourcesInst/DIN_RAM[2] ), 
    .A0(\mcuResourcesInst/DIN_ROM[2] ), .F0(\mcuResourcesInst.N_29 ), 
    .F1(\coreInst/programCounterInst/ARGA_m2 ));
  SLICE_703 SLICE_703( .D1(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .C1(\mcuResourcesInst.memoryMapperInst.un5_ROM_MAP ), 
    .B1(\mcuResourcesInst.DIN_RAM[1] ), .A1(\mcuResourcesInst.DIN_ROM[1] ), 
    .D0(N_314), .B0(N_318), .A0(N_316), 
    .F0(\mcuResourcesInst.memoryMapperInst.un5_ROM_MAP ), 
    .F1(\coreInst/programCounterInst/ARGA_0_iv_i_a1_2[1] ));
  SLICE_704 SLICE_704( .D1(\coreInst/programCounterInst/ARGA_m1_e ), 
    .C1(\mcuResourcesInst.memoryMapperInst.UART_MAP ), 
    .B1(\coreInst/programCounterInst/ARGA_m5_0_a2_0 ), 
    .A1(\mcuResourcesInst.memoryMapperInst.un5_RAM_MAP ), .D0(N_314), 
    .C0(N_316), .A0(N_318), 
    .F0(\mcuResourcesInst.memoryMapperInst.un5_RAM_MAP ), 
    .F1(\coreInst/programCounterInst/ARGA_N_11_mux ));
  SLICE_705 SLICE_705( .D1(\coreInst/ALU_R[3] ), .C1(\coreInst/N_976 ), 
    .B1(\coreInst/busControllerInst/ADDR_BUF_i_1[3] ), 
    .A1(\coreInst/busControllerInst/N_797 ), .D0(N_164), .C0(N_162), 
    .B0(N_328), .A0(N_326), .F0(\mcuResourcesInst.memoryMapperInst.INT_MAP_1 ), 
    .F1(N_328));
  SLICE_706 SLICE_706( .D1(\coreInst/ALU_R[5] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUF_i_1[5] ), 
    .B1(\coreInst/busControllerInst/N_591 ), .A1(\coreInst/N_976 ), 
    .D0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP_2_1 ), .C0(N_164), 
    .B0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP_8_0 ), .A0(N_162), 
    .F0(\mcuResourcesInst/memoryMapperInst/GPIO_m3_0_a2_1 ), .F1(N_164));
  SLICE_707 SLICE_707( .D1(\coreInst/ALU_R[4] ), .C1(\coreInst/N_976 ), 
    .B1(\coreInst/busControllerInst/ADDR_BUF_i_1[4] ), 
    .A1(\coreInst/busControllerInst/N_792 ), .D0(N_328), 
    .C0(\mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_3 ), .B0(N_326), 
    .A0(N_164), .F0(\mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_4 ), 
    .F1(N_326));
  SLICE_708 SLICE_708( .D1(\ADDR_BUF_i_a2_8_RNIH4E34[10] ), 
    .C1(\coreInst.fullALUInst.aluInst.N_129 ), 
    .B1(\coreInst.busControllerInst.ADDR_m4_e_2 ), 
    .A1(\coreInst.busControllerInst.ADDR_BUF_i_2[8] ), .D0(N_324), .C0(N_156), 
    .B0(N_158), .A0(N_160), .F0(\mcuResourcesInst.memoryMapperInst.INT_MAP_8 ), 
    .F1(N_158));
  SLICE_709 SLICE_709( .D1(\coreInst/ALU_R[6] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUF_i_1[6] ), .B1(\coreInst/N_976 ), 
    .A1(\coreInst/busControllerInst/N_586 ), .C0(N_162), .B0(N_164), 
    .F0(\mcuResourcesInst.N_128 ), .F1(N_162));
  SLICE_710 SLICE_710( .D1(\mcuResourcesInst.memoryMapperInst.INT_MAP_1 ), 
    .C1(N_314), .B1(\mcuResourcesInst.memoryMapperInst.GPIO_MAP_8_0 ), 
    .A1(\mcuResourcesInst.N_108 ), .D0(N_324), .B0(N_156), 
    .F0(\mcuResourcesInst.N_108 ), 
    .F1(\coreInst/programCounterInst/r_m2_m11_0_o4_2 ));
  SLICE_711 SLICE_711( .D1(\mcuResourcesInst.memoryMapperInst.INT_MAP_11 ), 
    .C1(\mcuResourcesInst.memoryMapperInst.GPIO_MAP_2_1 ), 
    .B1(\mcuResourcesInst.N_128 ), 
    .A1(\mcuResourcesInst.memoryMapperInst.INT_MAP_8 ), .D0(N_328), .B0(N_326), 
    .A0(N_330), .F0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP_2_1 ), 
    .F1(\coreInst/programCounterInst/ARGA_m1_e ));
  SLICE_712 SLICE_712( .D1(\coreInst/madd_14[15] ), 
    .C1(\coreInst/un21_RESULT_s1_i[15] ), .B1(\coreInst/ALU_OPX[3] ), 
    .A1(\coreInst/un3_sex[15] ), .D0(\ADDR_BUF_i_2_RNIQHDJ2[15] ), 
    .C0(\coreInst.fullALUInst.aluInst.N_136 ), 
    .B0(\coreInst.busControllerInst.ADDR_m4_e_2 ), 
    .F0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_bm_RNO_0[3] ), 
    .F1(\coreInst.fullALUInst.aluInst.N_136 ));
  SLICE_713 SLICE_713( .D1(\coreInst/busControllerInst/ADDR_m4_0_a2_2 ), 
    .C1(\coreInst/RESULT_13_RNIVG213[11] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUF_i_2[11] ), 
    .A1(\coreInst/un21_RESULT[11] ), 
    .D0(\mcuResourcesInst.memoryMapperInst.INT_MAP_1 ), .C0(N_322), .B0(N_320), 
    .A0(N_316), .F0(\mcuResourcesInst/memoryMapperInst/INT_MAP_sx ), 
    .F1(N_322));
  SLICE_714 SLICE_714( .D1(\coreInst/N_976 ), .C1(\coreInst/RESULT_sn_N_9 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_299 ), 
    .A1(\coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI9HM91[13] ), 
    .D0(\coreInst.busControllerInst.ADDR_BUF_i_3_mb_mb_1[13] ), 
    .C0(\RESULT_13_RNI7R413[13] ), 
    .B0(\coreInst.busControllerInst.ADDR_BUF_i_2[13] ), 
    .A0(\coreInst.fullALUInst.aluInst.un21_RESULT[13] ), 
    .F0(\mcuResourcesInst/memoryMapperInst/INT_MAP_11_1_sx ), 
    .F1(\RESULT_13_RNI7R413[13] ));
  SLICE_715 SLICE_715( .D1(\coreInst/N_976 ), .C1(\coreInst/N_171 ), 
    .A1(\coreInst/RESULT109_1 ), .D0(\ADDR_BUF_i_a2_8_RNIH4E34[10] ), 
    .C0(\coreInst.fullALUInst.aluInst.N_129 ), 
    .B0(\coreInst.busControllerInst.ADDR_m4_e_2 ), 
    .A0(\coreInst.busControllerInst.ADDR_BUF_i_2[8] ), 
    .F0(\mcuResourcesInst/memoryMapperInst/GPIO_MAP_8_0_sx ), 
    .F1(\coreInst.busControllerInst.ADDR_m4_e_2 ));
  coreInst_registerSequencerInst_SLICE_716 
    \coreInst/registerSequencerInst/SLICE_716 ( .D1(\coreInst/ALU_ALU_OPX[2] ), 
    .B1(\coreInst/ALU_ALU_OPX[3] ), .A1(\coreInst/GROUPX[0] ), 
    .D0(\coreInst/registerSequencerInst/REGA_WEN_3_i_a2_1_0 ), 
    .C0(\coreInst/ADDR_N_8 ), .B0(\coreInst/ALU_ALU_OPX[0] ), 
    .A0(\coreInst/PC_m3 ), .F0(\coreInst/registerSequencerInst/N_830 ), 
    .F1(\coreInst/registerSequencerInst/REGA_WEN_3_i_a2_1_0 ));
  coreInst_registerSequencerInst_SLICE_717 
    \coreInst/registerSequencerInst/SLICE_717 ( .D1(\coreInst/N_27 ), 
    .C1(\coreInst/i17_mux_4 ), .B1(\coreInst/LDS_BYTEX ), 
    .A1(\coreInst/CC_RUN_REG[1] ), .C0(\coreInst/ADDR_N_8 ), 
    .B0(\coreInst/registerSequencerInst/N_1009 ), 
    .A0(\coreInst/ALU_ALU_OPX[0] ), 
    .F0(\coreInst/registerSequencerInst/N_537 ), 
    .F1(\coreInst/registerSequencerInst/N_1009 ));
  coreInst_SLICE_718 \coreInst/SLICE_718 ( .D1(\coreInst/N_27 ), 
    .C1(\coreInst/i17_mux_0 ), .B1(\coreInst/CC_RUN_REG[3] ), 
    .D0(\coreInst/registerSequencerInst/REGA_WEN_3_i_a2_0_2 ), 
    .C0(\coreInst/CC_SIGN ), .A0(\coreInst/GROUPX[0] ), 
    .F0(\coreInst/registerSequencerInst/N_829 ), .F1(\coreInst/CC_SIGN ));
  coreInst_SLICE_719 \coreInst/SLICE_719 ( .C1(\coreInst/INSTRUCTION[9] ), 
    .A1(\coreInst/INSTRUCTION[8] ), .D0(\coreInst/ALU_ALU_OPX[0] ), 
    .C0(\coreInst/N_497 ), .B0(\coreInst/ALU_ALU_OPX[2] ), 
    .A0(\coreInst/GROUPX[0] ), .F0(\coreInst/registerSequencerInst/N_938 ), 
    .F1(\coreInst/N_497 ));
  coreInst_SLICE_720 \coreInst/SLICE_720 ( .D1(\coreInst/PC_A[8] ), 
    .C1(\coreInst/REGB_DOUT[8] ), .B1(\coreInst/debugger/N_967 ), 
    .A1(\coreInst/N_460 ), .C0(\coreInst/DEBUG_OPX[2] ), 
    .B0(\coreInst/DEBUG_OPX[1] ), .A0(\coreInst/DEBUG_OPX[3] ), 
    .F0(\coreInst/N_460 ), 
    .F1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[8] ));
  coreInst_SLICE_721 \coreInst/SLICE_721 ( .D1(\coreInst/REGA_DOUT[5] ), 
    .B1(\coreInst/N_263_1 ), .A1(\coreInst/N_267 ), .D0(\coreInst/N_455 ), 
    .C0(\coreInst/INSTRUCTION[9] ), .B0(\coreInst/ALU_ALU_OPX[0] ), 
    .A0(\coreInst/INSTRUCTION[8] ), .M1(\CPU_DIN[15] ), .M0(\CPU_DIN[14] ), 
    .CE(\coreInst/EXECUTE ), .CLK(PIN_CLK_X1_c), .F0(\coreInst/N_267 ), 
    .Q0(\coreInst/GROUPX_fast[0] ), .F1(\coreInst/fullALUInst/muxA/N_49 ), 
    .Q1(\coreInst/GROUPX_fast[1] ));
  coreInst_SLICE_722 \coreInst/SLICE_722 ( .D1(\coreInst/N_487 ), 
    .C1(\coreInst/fullALUInst/muxB/ALUB_DATA_5_xx_mm_sx[2] ), 
    .B1(\coreInst/ALUB_N_14 ), .A1(\coreInst/N_514 ), 
    .D0(\coreInst/opxMultiplexerInst/ALUB_N_15 ), 
    .C0(\coreInst/ALU_ALU_OPX[2] ), 
    .B0(\coreInst/opxMultiplexerInst/ALUB_m10_i_a4_0 ), 
    .A0(\coreInst/opxMultiplexerInst/ALUB_m10_i_1 ), .F0(\coreInst/ALUB_N_14 ), 
    .F1(\coreInst/N_67 ));
  coreInst_SLICE_723 \coreInst/SLICE_723 ( 
    .D1(\coreInst/fullALUInst/muxA/N_49 ), .C1(\coreInst/N_263 ), 
    .B1(\coreInst/ALU_ALU_OPX[3] ), .A1(\coreInst/N_985 ), 
    .D0(\coreInst/N_455 ), .C0(\coreInst/ALU_ALU_OPX[0] ), 
    .B0(\coreInst/LDS_BYTEX ), .A0(\coreInst/INSTRUCTION[9] ), 
    .M1(\CPU_DIN[14] ), .M0(\CPU_DIN[15] ), .CE(\coreInst/EXECUTE ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/N_263 ), .Q0(\coreInst/GROUPX[1] ), 
    .F1(\coreInst/fullALUInst/ALUA_DATA[5] ), .Q1(\coreInst/GROUPX_0_rep1 ));
  coreInst_SLICE_724 \coreInst/SLICE_724 ( .D1(\coreInst/REGA_DOUT[0] ), 
    .C1(\coreInst/N_263_1 ), .A1(\coreInst/LDS_BYTEX ), 
    .D0(\coreInst/ALU_ALU_OPX[0] ), .B0(\coreInst/N_455 ), 
    .A0(\coreInst/INSTRUCTION[9] ), .M1(\CPU_DIN[11] ), .M0(\CPU_DIN[0] ), 
    .CE(\coreInst/EXECUTE ), .CLK(PIN_CLK_X1_c), .F0(\coreInst/N_263_1 ), 
    .Q0(\coreInst/INSTRUCTION[0] ), .F1(\coreInst/fullALUInst/N_44_0 ), 
    .Q1(\coreInst/LDS_BYTEX ));
  coreInst_SLICE_725 \coreInst/SLICE_725 ( .D1(\coreInst/N_976 ), 
    .C1(\coreInst/RESULT109_1 ), .B1(\coreInst/ALU_OPX[3] ), 
    .A1(\coreInst/N_171 ), .D0(\coreInst/ALU_ALU_OPX[2] ), 
    .C0(\coreInst/GROUPX[0] ), .B0(\coreInst/GROUPX[1] ), 
    .A0(\coreInst/DEBUG_MODE ), .F0(\coreInst/N_171 ), 
    .F1(\coreInst/busControllerInst/ADDR_N_3_mux ));
  coreInst_SLICE_726 \coreInst/SLICE_726 ( .D1(\coreInst/N_37 ), 
    .C1(\coreInst/N_134 ), .D0(\coreInst/N_497 ), .C0(\coreInst/GROUPX[1] ), 
    .B0(\coreInst/DEBUG_MODE ), .A0(\coreInst/GROUPX_0_rep1 ), 
    .F0(\coreInst/N_134 ), .F1(\coreInst/fullALUInst/aluInst/N_255_i ));
  coreInst_SLICE_727 \coreInst/SLICE_727 ( .D1(\coreInst/N_171 ), 
    .C1(\coreInst/ALU_OPX[3] ), .B1(\coreInst/ALU_OPX_i_1[0] ), 
    .A1(\coreInst/ALU_OPX[1] ), .D0(\coreInst/GROUPX[0] ), 
    .C0(\coreInst/GROUPX[1] ), .B0(\coreInst/DEBUG_MODE ), 
    .A0(\coreInst/ALU_ALU_OPX[3] ), .F0(\coreInst/ALU_OPX[3] ), 
    .F1(\coreInst/fullALUInst/aluInst/CARRY_sn_i2_mux ));
  coreInst_SLICE_728 \coreInst/SLICE_728 ( .D1(\coreInst/N_171 ), 
    .C1(\coreInst/ALU_OPX[1] ), .B1(\coreInst/ALU_OPX_i_1[0] ), 
    .A1(\coreInst/ALU_OPX[3] ), .D0(\coreInst/GROUPX[0] ), 
    .C0(\coreInst/LDS_BYTEX ), .B0(\coreInst/DEBUG_MODE ), 
    .A0(\coreInst/GROUPX[1] ), .F0(\coreInst/ALU_OPX[1] ), 
    .F1(\coreInst/fullALUInst/aluInst/arithmetic ));
  coreInst_SLICE_729 \coreInst/SLICE_729 ( .D1(\coreInst/ALUB_SRCX_0_3[1] ), 
    .C1(\coreInst/ALUB_SRCX_0_2[1] ), .B1(\coreInst/ALUB_SRCX_a3_1[1] ), 
    .A1(\coreInst/ADDR_N_8 ), .D0(\coreInst/ALU_ALU_OPX[2] ), 
    .C0(\coreInst/ALU_ALU_OPX[3] ), .B0(\coreInst/ALUB_SRCX_ss0_i_0_i ), 
    .A0(\coreInst/ALU_ALU_OPX[0] ), 
    .M0(\coreInst/instructionPhaseDecoderInst/PHASE_R[8] ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/ALUB_SRCX_a3_1[1] ), 
    .Q0(\coreInst/instructionPhaseDecoderInst/PHASE_R[9] ), 
    .F1(\coreInst/fullALUInst/muxB/ALUB_DATA_5_xx_mm_sx[2] ), 
    .Q1(\coreInst/instructionPhaseDecoderInst/RESET_R ));
  coreInst_SLICE_730 \coreInst/SLICE_730 ( .D1(\coreInst/GROUPX_fast[1] ), 
    .C1(\coreInst/DEBUG_MODE_rep1 ), .D0(\coreInst/ALUB_SRCX_ss0_i_0_i ), 
    .C0(\coreInst/d_m8_0_o4_0 ), .B0(\coreInst/INSTRUCTION[8] ), 
    .A0(\coreInst/INSTRUCTION[9] ), 
    .F0(\coreInst/opxMultiplexerInst/ALUB_m10_i_1 ), 
    .F1(\coreInst/d_m8_0_o4_0 ));
  coreInst_SLICE_731 \coreInst/SLICE_731 ( .D1(\coreInst/PC_A[0] ), 
    .C1(\coreInst/N_444 ), .B1(N_459), .A1(\coreInst/ALU_R[0] ), 
    .D0(\coreInst/GROUPX[1] ), .C0(\coreInst/DEBUG_MODE ), 
    .A0(\coreInst/GROUPX[0] ), .F0(\coreInst/N_444 ), 
    .F1(\coreInst/registerFileInst/DINA_3_i_0[0] ));
  coreInst_SLICE_732 \coreInst/SLICE_732 ( .D1(\coreInst/N_1011 ), 
    .B1(\coreInst/fullALUInst/ccRegs/CC_INT1_REG[3] ), 
    .A1(\coreInst/fullALUInst/ccRegs/CC_INT0_REG[3] ), 
    .D0(\coreInst/INT_PC_NEXTX[2] ), .C0(\coreInst/PC_LD_INT1X ), 
    .B0(\coreInst/DEBUG_MODE_fast ), .A0(\coreInst/STATE[4] ), 
    .F0(\coreInst/N_1011 ), .F1(\coreInst/i17_mux_0 ));
  coreInst_SLICE_733 \coreInst/SLICE_733 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[15] ), .C1(\coreInst/ALU_OPX_i_1[0] ), 
    .B1(\coreInst/N_171 ), .A1(\coreInst/fullALUInst/aluInst/RESULT_10[15] ), 
    .D0(\coreInst/GROUPX[0] ), .C0(\coreInst/DEBUG_MODE ), 
    .B0(\coreInst/GROUPX[1] ), .A0(\coreInst/ALU_ALU_OPX[0] ), 
    .F0(\coreInst/ALU_OPX_i_1[0] ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_13_bm_1[15] ));
  coreInst_SLICE_734 \coreInst/SLICE_734 ( .D1(\coreInst/GROUPX[0] ), 
    .C1(\coreInst/N_696 ), .B1(\coreInst/FETCH ), .A1(\coreInst/d_m8_0_o4_0 ), 
    .D0(\coreInst/ALU_ALU_OPX[0] ), .C0(\coreInst/ALU_ALU_OPX[3] ), 
    .B0(\coreInst/ALU_ALU_OPX[2] ), .A0(\coreInst/LDS_BYTEX ), 
    .F0(\coreInst/N_696 ), .F1(\coreInst/fullALUInst/ccRegs/CC_RUN_REG8 ));
  coreInst_SLICE_735 \coreInst/SLICE_735 ( .D1(\coreInst/ALUB_SRCX_0_2[1] ), 
    .C1(\coreInst/ALUB_SRCX_0_x[1] ), .B1(\coreInst/REGB_DOUT[2] ), 
    .A1(\coreInst/N_487 ), .D0(\coreInst/DEBUG_MODE ), 
    .C0(\coreInst/DEBUG_ADDR_OUT[2] ), .A0(\coreInst/INSTRUCTION[2] ), 
    .F0(\coreInst/N_487 ), .F1(\coreInst/N_35 ));
  coreInst_SLICE_736 \coreInst/SLICE_736 ( .D1(\coreInst/ALUB_SRCX_0_x[1] ), 
    .C1(\coreInst/ALUB_SRCX_0_2[1] ), .B1(\coreInst/REGB_DOUT[3] ), 
    .A1(\coreInst/N_513 ), .D0(\coreInst/DEBUG_MODE ), 
    .C0(\coreInst/DEBUG_ADDR_OUT[3] ), .B0(\coreInst/INSTRUCTION[3] ), 
    .F0(\coreInst/N_513 ), .F1(\coreInst/N_36 ));
  coreInst_SLICE_737 \coreInst/SLICE_737 ( .D1(\coreInst/PC_m3 ), 
    .C1(\coreInst/ALUB_SRCX_0_3_1[1] ), .B1(\coreInst/ALU_ALU_OPX[2] ), 
    .A1(\coreInst/ALUB_SRCX_ss0_i_0_i ), .D0(\coreInst/DEBUG_MODE_rep1 ), 
    .B0(\coreInst/GROUPX_fast[0] ), .F0(\coreInst/ALUB_SRCX_ss0_i_0_i ), 
    .F1(\coreInst/fullALUInst/muxB/ALUB_DATA_3_N_3L4 ));
  coreInst_SLICE_738 \coreInst/SLICE_738 ( .D1(\coreInst/DEBUG_MODE ), 
    .C1(\coreInst/GROUPX[0] ), .B1(\coreInst/REGA_DINX_m1_1[0] ), 
    .A1(\coreInst/GROUPX[1] ), .D0(\coreInst/ALU_ALU_OPX[2] ), 
    .B0(\coreInst/LDS_BYTEX ), .F0(\coreInst/REGA_DINX_m1_1[0] ), 
    .F1(\coreInst/registerFileInst/N_984 ));
  coreInst_SLICE_739 \coreInst/SLICE_739 ( .D1(\coreInst/N_985 ), 
    .C1(\coreInst/ARGB_X[0] ), .B1(\coreInst/fullALUInst/N_44_0 ), 
    .A1(\coreInst/ALUB_DATA[0] ), .D0(\coreInst/DEBUG_MODE ), 
    .A0(\coreInst/INSTRUCTION[0] ), .F0(\coreInst/ARGB_X[0] ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_7[0] ));
  coreInst_SLICE_740 \coreInst/SLICE_740 ( .D1(\coreInst/ALUB_SRCX_0_3_1[1] ), 
    .C1(\coreInst/PC_m3 ), .B1(\coreInst/ALU_ALU_OPX[2] ), 
    .A1(\coreInst/ALUB_SRCX_ss0_i_0_i ), .D0(\coreInst/ALU_ALU_OPX[0] ), 
    .A0(\coreInst/ALU_ALU_OPX[3] ), .M0(\CPU_DIN[9] ), .CE(\coreInst/EXECUTE ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/ALUB_SRCX_0_3_1[1] ), 
    .Q0(\coreInst/INSTRUCTION[9] ), 
    .F1(\coreInst/opxMultiplexerInst/ALUB_SRCX_0_x_sx[1] ));
  coreInst_SLICE_741 \coreInst/SLICE_741 ( .D1(\coreInst/ADDR_N_8 ), 
    .C1(\coreInst/ALUB_SRCX_0_3[1] ), .A1(\coreInst/ALUB_SRCX_a3_1[1] ), 
    .D0(\coreInst/ALUB_SRCX_0_3_1[1] ), .C0(\coreInst/PC_m3 ), 
    .B0(\coreInst/ALU_ALU_OPX[2] ), .A0(\coreInst/ALUB_SRCX_ss0_i_0_i ), 
    .M1(\coreInst/CPU_DIN[8] ), .M0(\CPU_DIN[7] ), .CE(\coreInst/EXECUTE ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/ALUB_SRCX_0_3[1] ), 
    .Q0(\coreInst/INSTRUCTION[7] ), .F1(\coreInst/ALUB_SRCX_0_x_0[1] ), 
    .Q1(\coreInst/INSTRUCTION[8] ));
  coreInst_SLICE_742 \coreInst/SLICE_742 ( .D1(\coreInst/GROUPX[1] ), 
    .C1(\coreInst/DEBUG_MODE ), .B1(\coreInst/N_437 ), 
    .A1(\coreInst/GROUPX[0] ), .C0(\coreInst/ALU_ALU_OPX[3] ), 
    .A0(\coreInst/N_429_i ), .M1(\CPU_DIN[14] ), .M0(\coreInst/DEBUG_OP[3] ), 
    .CE(\coreInst/EXECUTE ), .CLK(PIN_CLK_X1_c), .F0(\coreInst/N_437 ), 
    .Q0(\coreInst/DEBUG_OPX_fast[3] ), .F1(\coreInst/N_168_1 ), 
    .Q1(\coreInst/GROUPX[0] ));
  coreInst_SLICE_743 \coreInst/SLICE_743 ( .D1(\coreInst/N_1008 ), 
    .C1(\coreInst/PC_LD_INT1X ), .B1(\coreInst/STATE[4] ), 
    .A1(\coreInst/fullALUInst/ccRegs/CC_RUN_REG8 ), .C0(\coreInst/CCL_ENRX ), 
    .A0(\coreInst/INT_PC_NEXTX[2] ), .M1(\coreInst/DEBUG_OP[2] ), 
    .M0(\coreInst/DEBUG_OP[1] ), .CE(\coreInst/EXECUTE ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/N_1008 ), .Q0(\coreInst/DEBUG_OPX_fast[1] ), 
    .F1(\coreInst/fullALUInst/ccRegs/CC_INT0_REG_0_sqmuxa ), 
    .Q1(\coreInst/DEBUG_OPX_fast[2] ));
  coreInst_programCounterInst_SLICE_744 
    \coreInst/programCounterInst/SLICE_744 ( 
    .D1(\coreInst/programCounterInst/ARGA_0_iv_i_0_0[1] ), 
    .C1(\coreInst/programCounterInst/ARGA_0_iv_i_a1_2[1] ), 
    .B1(\coreInst/programCounterInst/ARGA_0_iv_i_a2_0[1] ), 
    .A1(\coreInst/programCounterInst/ARGA_0_iv_i_a1_1[1] ), .D0(N_318), 
    .C0(\coreInst/PC_OFFSETX[1] ), .B0(N_316), .A0(N_314), 
    .F0(\coreInst/programCounterInst/ARGA_0_iv_i_a1_1[1] ), 
    .F1(\coreInst/programCounterInst/ARGA_0_iv_i_0_2[1] ));
  coreInst_programCounterInst_SLICE_745 
    \coreInst/programCounterInst/SLICE_745 ( 
    .D1(\coreInst/programCounterInst/SUM[3] ), .C1(\coreInst/DEBUG_MODE ), 
    .A1(\coreInst/programCounterInst/N_517 ), .D0(\coreInst/INT_PC_NEXTX[2] ), 
    .B0(\coreInst/INT_PC_NEXTX[0] ), .A0(\coreInst/INT_PC_NEXTX[1] ), 
    .F0(\coreInst/programCounterInst/N_517 ), 
    .F1(\coreInst/programCounterInst/N_700 ));
  coreInst_programCounterInst_SLICE_746 
    \coreInst/programCounterInst/SLICE_746 ( 
    .D1(\coreInst/programCounterInst/N_973 ), 
    .C1(\coreInst/programCounterInst/N_979 ), 
    .B1(\coreInst/programCounterInst/INTR0[15] ), 
    .A1(\coreInst/programCounterInst/INTR1[15] ), 
    .D0(\coreInst/INT_PC_NEXTX[1] ), .C0(\coreInst/DEBUG_MODE ), 
    .B0(\coreInst/INT_PC_NEXTX[0] ), .A0(\coreInst/INT_PC_NEXTX[2] ), 
    .M1(\coreInst/programCounterInst/SUM[13] ), 
    .M0(\coreInst/programCounterInst/SUM[12] ), 
    .CE(\coreInst/programCounterInst/INTR05 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/N_979 ), 
    .Q0(\coreInst/programCounterInst/INTR0[12] ), 
    .F1(\coreInst/programCounterInst/PC_A_NEXT_6_0_0_N_3L3 ), 
    .Q1(\coreInst/programCounterInst/INTR0[13] ));
  coreInst_programCounterInst_SLICE_747 
    \coreInst/programCounterInst/SLICE_747 ( 
    .D1(\coreInst/programCounterInst/r_m2_N_7 ), 
    .C1(\coreInst/programCounterInst/r_m2_m11_0_o4_2 ), 
    .B1(\mcuResourcesInst.memoryMapperInst.INT_MAP_11_1 ), .A1(\DOUT[2] ), 
    .D0(\coreInst/programCounterInst/ARGA_N_5 ), 
    .C0(\coreInst/programCounterInst/r_m2_N_8 ), .B0(\coreInst/PC_OFFSETX[1] ), 
    .A0(\coreInst/programCounterInst/ARGA_N_11_mux ), 
    .F0(\coreInst/programCounterInst/N_201 ), 
    .F1(\coreInst/programCounterInst/r_m2_N_8 ));
  coreInst_programCounterInst_SLICE_748 
    \coreInst/programCounterInst/SLICE_748 ( .D1(N_316), .C1(N_318), 
    .B1(\coreInst/PC_OFFSETX[1] ), .A1(N_314), 
    .D0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .C0(\coreInst/programCounterInst/ARGA_0_iv_i_a0_0[1] ), 
    .B0(\mcuResourcesInst.memoryMapperInst.UART_MAP ), 
    .A0(\mcuResourcesInst.N_64 ), 
    .F0(\coreInst/programCounterInst/ARGA_0_iv_i_a0[1] ), 
    .F1(\coreInst/programCounterInst/ARGA_0_iv_i_a0_0[1] ));
  coreInst_SLICE_749 \coreInst/SLICE_749 ( .C1(\coreInst/fullALUInst/N_44 ), 
    .B1(\coreInst/N_134 ), .D0(\coreInst/PC_A[11] ), 
    .C0(\coreInst/programCounterInst/N_977 ), .B0(\coreInst/ALUB_DATA[11] ), 
    .A0(\coreInst/programCounterInst/N_446 ), 
    .F0(\coreInst/programCounterInst/ARGB[11] ), .F1(\coreInst/ALUB_DATA[11] ));
  coreInst_SLICE_750 \coreInst/SLICE_750 ( .C1(\coreInst/fullALUInst/N_45 ), 
    .B1(\coreInst/N_134 ), .D0(\coreInst/programCounterInst/N_977 ), 
    .C0(\coreInst/ALUB_DATA[12] ), .B0(\coreInst/PC_A[12] ), 
    .A0(\coreInst/programCounterInst/N_446 ), 
    .F0(\coreInst/programCounterInst/ARGB[12] ), .F1(\coreInst/ALUB_DATA[12] ));
  coreInst_SLICE_751 \coreInst/SLICE_751 ( .C1(\coreInst/N_134 ), 
    .A1(\coreInst/fullALUInst/N_46 ), .D0(\coreInst/PC_A[13] ), 
    .C0(\coreInst/ALUB_DATA[13] ), .B0(\coreInst/programCounterInst/N_977 ), 
    .A0(\coreInst/programCounterInst/N_446 ), 
    .F0(\coreInst/programCounterInst/ARGB[13] ), .F1(\coreInst/ALUB_DATA[13] ));
  coreInst_SLICE_752 \coreInst/SLICE_752 ( .C1(\coreInst/N_134 ), 
    .B1(\coreInst/fullALUInst/N_47 ), .D0(\coreInst/programCounterInst/N_977 ), 
    .C0(\coreInst/ALUB_DATA[14] ), .B0(\coreInst/PC_A[14] ), 
    .A0(\coreInst/programCounterInst/N_446 ), 
    .F0(\coreInst/programCounterInst/ARGB[14] ), .F1(\coreInst/ALUB_DATA[14] ));
  coreInst_SLICE_753 \coreInst/SLICE_753 ( .D1(\coreInst/fullALUInst/N_48 ), 
    .B1(\coreInst/N_134 ), .D0(\coreInst/programCounterInst/N_977 ), 
    .C0(\coreInst/ALUB_DATA[15] ), .B0(\coreInst/PC_A[15] ), 
    .A0(\coreInst/programCounterInst/N_446 ), 
    .F0(\coreInst/programCounterInst/ARGB[15] ), .F1(\coreInst/ALUB_DATA[15] ));
  coreInst_programCounterInst_SLICE_754 
    \coreInst/programCounterInst/SLICE_754 ( .D1(\coreInst/N_454 ), 
    .C1(\coreInst/ALU_ALU_OPX[3] ), .B1(\coreInst/N_444 ), 
    .A1(\coreInst/N_429_i ), .D0(\coreInst/PC_A[3] ), 
    .C0(\coreInst/programCounterInst/N_977 ), .B0(\coreInst/ALUB_DATA[3] ), 
    .A0(\coreInst/programCounterInst/N_446 ), 
    .F0(\coreInst/programCounterInst/ARGB[3] ), 
    .F1(\coreInst/programCounterInst/N_977 ));
  coreInst_programCounterInst_SLICE_755 
    \coreInst/programCounterInst/SLICE_755 ( .D1(\coreInst/N_476 ), 
    .C1(\coreInst/N_444 ), .B1(\coreInst/ALU_ALU_OPX[3] ), 
    .A1(\coreInst/N_429_i ), .D0(\coreInst/programCounterInst/N_977 ), 
    .C0(\coreInst/programCounterInst/N_446 ), .B0(\coreInst/PC_A[9] ), 
    .A0(\coreInst/ALUB_DATA[9] ), .F0(\coreInst/programCounterInst/ARGB[9] ), 
    .F1(\coreInst/programCounterInst/N_446 ));
  coreInst_SLICE_756 \coreInst/SLICE_756 ( .C1(\coreInst/N_37 ), 
    .B1(\coreInst/N_134 ), .D0(\coreInst/PC_A[4] ), 
    .C0(\coreInst/ALUB_DATA[4] ), .B0(\coreInst/programCounterInst/N_977 ), 
    .A0(\coreInst/programCounterInst/N_446 ), 
    .F0(\coreInst/programCounterInst/ARGB[4] ), .F1(\coreInst/ALUB_DATA[4] ));
  coreInst_SLICE_757 \coreInst/SLICE_757 ( .D1(\coreInst/ALUB_SRCX[1] ), 
    .C1(\coreInst/N_134 ), .B1(\coreInst/REGB_DOUT[5] ), 
    .A1(\coreInst/INSTRUCTION[5] ), .D0(\coreInst/PC_A[5] ), 
    .C0(\coreInst/ALUB_DATA[5] ), .B0(\coreInst/programCounterInst/N_977 ), 
    .A0(\coreInst/programCounterInst/N_446 ), 
    .F0(\coreInst/programCounterInst/ARGB[5] ), .F1(\coreInst/ALUB_DATA[5] ));
  coreInst_SLICE_758 \coreInst/SLICE_758 ( .D1(\coreInst/N_134 ), 
    .C1(\coreInst/REGB_DOUT[6] ), .B1(\coreInst/INSTRUCTION[6] ), 
    .A1(\coreInst/ALUB_SRCX[1] ), .D0(\coreInst/programCounterInst/N_977 ), 
    .C0(\coreInst/ALUB_DATA[6] ), .B0(\coreInst/PC_A[6] ), 
    .A0(\coreInst/programCounterInst/N_446 ), 
    .F0(\coreInst/programCounterInst/ARGB[6] ), .F1(\coreInst/ALUB_DATA[6] ));
  coreInst_SLICE_759 \coreInst/SLICE_759 ( .D1(\coreInst/ALUB_SRCX[1] ), 
    .C1(\coreInst/REGB_DOUT[7] ), .B1(\coreInst/N_134 ), 
    .A1(\coreInst/INSTRUCTION[7] ), .D0(\coreInst/programCounterInst/N_446 ), 
    .C0(\coreInst/ALUB_DATA[7] ), .B0(\coreInst/PC_A[7] ), 
    .A0(\coreInst/programCounterInst/N_977 ), 
    .F0(\coreInst/programCounterInst/ARGB[7] ), .F1(\coreInst/ALUB_DATA[7] ));
  coreInst_programCounterInst_SLICE_760 
    \coreInst/programCounterInst/SLICE_760 ( .D1(\coreInst/INT_PC_NEXTX[2] ), 
    .C1(\coreInst/INT_PC_NEXTX[1] ), .B1(\coreInst/DEBUG_MODE ), 
    .A1(\coreInst/INT_PC_NEXTX[0] ), .D0(\coreInst/programCounterInst/N_979 ), 
    .C0(\coreInst/programCounterInst/N_973 ), 
    .B0(\coreInst/programCounterInst/INTR1[0] ), 
    .A0(\coreInst/programCounterInst/INTR0[0] ), 
    .M1(\coreInst/programCounterInst/SUM[3] ), 
    .M0(\coreInst/programCounterInst/SUM[2] ), 
    .CE(\coreInst/programCounterInst/INTR05 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[0] ), 
    .Q0(\coreInst/programCounterInst/INTR0[2] ), 
    .F1(\coreInst/programCounterInst/N_973 ), 
    .Q1(\coreInst/programCounterInst/INTR0[3] ));
  coreInst_programCounterInst_SLICE_761 
    \coreInst/programCounterInst/SLICE_761 ( .B1(\coreInst/INT_PC_NEXTX[2] ), 
    .A1(\coreInst/DEBUG_MODE ), .D0(\coreInst/programCounterInst/INTR0[2] ), 
    .C0(\coreInst/INT_PC_NEXTX[0] ), .B0(\coreInst/programCounterInst/N_962 ), 
    .A0(\coreInst/INT_PC_NEXTX[1] ), .F0(\coreInst/programCounterInst/N_703 ), 
    .F1(\coreInst/programCounterInst/N_962 ));
  coreInst_SLICE_762 \coreInst/SLICE_762 ( .D1(\coreInst/RESULT_sn_N_9 ), 
    .C1(\coreInst/fullALUInst/aluInst/N_269 ), 
    .A1(\coreInst/fullALUInst/aluInst/N_286 ), 
    .D0(\coreInst/busControllerInst/ADDR_BUSX_R[0] ), .C0(\coreInst/ALU_R[0] ), 
    .B0(\coreInst/busControllerInst/ADDR_BUSX_R[1] ), 
    .A0(\coreInst/ALUB_DATA[0] ), 
    .F0(\coreInst/busControllerInst/sequencer/N_431 ), 
    .F1(\coreInst/ALU_R[0] ));
  coreInst_SLICE_763 \coreInst/SLICE_763 ( .D1(\coreInst/ALUB_SRCX_0_x_0[1] ), 
    .C1(\coreInst/INSTRUCTION[4] ), .B1(\coreInst/REGB_DOUT[4] ), 
    .A1(\coreInst/ALUB_SRCX_0_2[1] ), .D0(\coreInst/busControllerInst/N_978 ), 
    .C0(\coreInst/N_37 ), .B0(\coreInst/N_134 ), 
    .F0(\coreInst/busControllerInst/N_792 ), .F1(\coreInst/N_37 ));
  coreInst_busControllerInst_SLICE_764 \coreInst/busControllerInst/SLICE_764 
    ( .D1(\coreInst/RESULT_12_0_s[14] ), .B1(\coreInst/ALU_OPX[3] ), 
    .A1(\coreInst/N_976 ), .D0(\coreInst.busControllerInst.ADDR_BUF_i_2[13] ), 
    .C0(\RESULT_13_RNI7R413[13] ), 
    .B0(\coreInst.busControllerInst.ADDR_BUF_i_3_mb_mb_1[13] ), 
    .A0(\coreInst.fullALUInst.aluInst.un21_RESULT[13] ), .F0(N_318_i), 
    .F1(\coreInst.busControllerInst.ADDR_BUF_i_3_mb_mb_1[13] ));
  coreInst_SLICE_765 \coreInst/SLICE_765 ( .D1(\coreInst/RESULT_sn_N_9 ), 
    .C1(\coreInst/fullALUInst/aluInst/N_283 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_300 ), .D0(N_459), 
    .C0(\coreInst/ALU_R[14] ), 
    .B0(\coreInst/busControllerInst/DOUT_BUF_i_0[14] ), .F0(N_185), 
    .F1(\coreInst/ALU_R[14] ));
  coreInst_busControllerInst_SLICE_766 \coreInst/busControllerInst/SLICE_766 
    ( .D1(\coreInst/REGA_DOUT[13] ), .C1(N_447), .B1(\coreInst/N_964 ), 
    .A1(\coreInst/REGA_DOUT[5] ), .D0(\coreInst/ALU_R[13] ), 
    .B0(\coreInst/busControllerInst/DOUT_BUF_i_0[13] ), .A0(N_459), .F0(N_338), 
    .F1(\coreInst/busControllerInst/DOUT_BUF_i_0[13] ));
  coreInst_SLICE_767 \coreInst/SLICE_767 ( .D1(\coreInst/RESULT_sn_N_9 ), 
    .C1(\coreInst/fullALUInst/aluInst/N_281 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_298 ), .D0(N_459), 
    .B0(\coreInst/ALU_R[12] ), 
    .A0(\coreInst/busControllerInst/DOUT_BUF_i_0[12] ), .F0(N_340), 
    .F1(\coreInst/ALU_R[12] ));
  coreInst_busControllerInst_SLICE_768 \coreInst/busControllerInst/SLICE_768 
    ( .D1(\coreInst/N_440 ), .C1(\coreInst/GROUPX[1] ), 
    .B1(\coreInst/DEBUG_MODE ), .A1(\coreInst/GROUPX[0] ), 
    .D0(\coreInst/REGA_DOUT[9] ), .C0(N_447), .B0(\coreInst/N_964 ), 
    .A0(\coreInst/REGA_DOUT[1] ), 
    .F0(\coreInst/busControllerInst/DOUT_BUF_i_0[9] ), .F1(N_447));
  coreInst_SLICE_769 \coreInst/SLICE_769 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_275 ), .C1(\coreInst/RESULT_sn_N_9 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_292 ), .D0(\coreInst/N_976 ), 
    .C0(\coreInst/ALU_R[6] ), .B0(\coreInst/busControllerInst/N_586 ), 
    .A0(\coreInst/busControllerInst/ADDR_BUF_i_1[6] ), .F0(N_162_i), 
    .F1(\coreInst/ALU_R[6] ));
  coreInst_SLICE_770 \coreInst/SLICE_770 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI6DL91[12] ), 
    .C1(\coreInst/N_976 ), .B1(\coreInst/fullALUInst/aluInst/N_298 ), 
    .A1(\coreInst/RESULT_sn_N_9 ), .D0(\coreInst/RESULT_13_RNI3M313[12] ), 
    .C0(\coreInst/busControllerInst/ADDR_m4_0_a2_2 ), 
    .B0(\coreInst/busControllerInst/ADDR_BUF_i_2[12] ), 
    .A0(\coreInst/un21_RESULT[12] ), .F0(N_320_i), 
    .F1(\coreInst/RESULT_13_RNI3M313[12] ));
  coreInst_busControllerInst_SLICE_771 \coreInst/busControllerInst/SLICE_771 
    ( .D1(\coreInst/busControllerInst/ADDR_BUSX_R[0] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUSX_R[1] ), .D0(\coreInst/N_976 ), 
    .C0(\coreInst/ALU_R[4] ), 
    .B0(\coreInst/busControllerInst/ADDR_BUF_i_1[4] ), 
    .A0(\coreInst/busControllerInst/N_792 ), .F0(N_326_i), 
    .F1(\coreInst/N_976 ));
  coreInst_SLICE_772 \coreInst/SLICE_772 ( .D1(\coreInst/ALU_OPX[3] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .B1(\coreInst/fullALUInst/aluInst/un3_tmp[7] ), 
    .A1(\coreInst/fullALUInst/aluInst/un21_RESULT[7] ), 
    .D0(\coreInst.busControllerInst.ADDR_m4_e_2 ), .C0(\coreInst/N_128 ), 
    .B0(\coreInst/busControllerInst/ADDR_BUF_i_2[7] ), 
    .A0(\coreInst/RESULT_13_RNIO6M8B[7] ), .F0(N_160_i), .F1(\coreInst/N_128 ));
  coreInst_busControllerInst_SLICE_773 \coreInst/busControllerInst/SLICE_773 
    ( .D1(\coreInst/busControllerInst/N_576 ), 
    .C1(\coreInst/busControllerInst/N_428 ), .B1(\coreInst/HERE[8] ), 
    .A1(\coreInst/busControllerInst/ADDR_BUF_i_2_0[8] ), 
    .D0(\ADDR_BUF_i_a2_8_RNIH4E34[10] ), 
    .C0(\coreInst.fullALUInst.aluInst.N_129 ), 
    .B0(\coreInst.busControllerInst.ADDR_m4_e_2 ), 
    .A0(\coreInst.busControllerInst.ADDR_BUF_i_2[8] ), .F0(N_158_i), 
    .F1(\coreInst.busControllerInst.ADDR_BUF_i_2[8] ));
  coreInst_busControllerInst_SLICE_774 \coreInst/busControllerInst/SLICE_774 
    ( .D1(\coreInst/ALU_R[0] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUSX_R[0] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUSX_R[1] ), 
    .A1(\coreInst/ALUB_DATA[0] ), 
    .D0(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .C0(\coreInst/busControllerInst/N_430 ), 
    .B0(\coreInst/busControllerInst/ADDR_BUF_i_o2_1[0] ), 
    .F0(\coreInst/busControllerInst/N_439 ), 
    .F1(\coreInst/busControllerInst/N_430 ));
  coreInst_SLICE_775 \coreInst/SLICE_775 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_289 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_272 ), .A1(\coreInst/RESULT_sn_N_9 ), 
    .D0(\coreInst/busControllerInst/N_797 ), .C0(\coreInst/ALU_R[3] ), 
    .B0(\coreInst/N_976 ), .A0(\coreInst/busControllerInst/ADDR_BUF_i_1[3] ), 
    .F0(N_328_i), .F1(\coreInst/ALU_R[3] ));
  coreInst_busControllerInst_SLICE_776 \coreInst/busControllerInst/SLICE_776 
    ( .D1(\coreInst/HERE[2] ), .C1(\coreInst/busControllerInst/N_428 ), 
    .A1(\coreInst/busControllerInst/ADDR_BUF_i_0[2] ), 
    .D0(\coreInst/busControllerInst/ADDR_BUF_i_1[2] ), 
    .C0(\coreInst/busControllerInst/N_802 ), .B0(\coreInst/N_976 ), 
    .A0(\coreInst/ALU_R[2] ), .F0(N_330_i), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_1[2] ));
  coreInst_busControllerInst_SLICE_777 \coreInst/busControllerInst/SLICE_777 
    ( .D1(\coreInst/N_134 ), .C1(\coreInst/N_34 ), .B1(\coreInst/N_66 ), 
    .A1(\coreInst/busControllerInst/N_978 ), 
    .D0(\coreInst/busControllerInst/N_807 ), .C0(\coreInst/N_976 ), 
    .B0(\coreInst/ALU_R[1] ), 
    .A0(\coreInst/busControllerInst/ADDR_BUF_i_1[1] ), .F0(N_332_i), 
    .F1(\coreInst/busControllerInst/N_807 ));
  coreInst_SLICE_778 \coreInst/SLICE_778 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_11_RNITVPP[15] ), 
    .B1(\coreInst/RESULT_sn_N_9 ), .A1(\coreInst/fullALUInst/aluInst/N_301 ), 
    .D0(\coreInst/d_N_5_i_0_li ), .B0(\coreInst/N_976 ), 
    .A0(\coreInst/busControllerInst/ADDR_BUF_i_2[15] ), 
    .F0(\ADDR_BUF_i_2_RNIQHDJ2[15] ), .F1(\coreInst/d_N_5_i_0_li ));
  coreInst_SLICE_779 \coreInst/SLICE_779 ( .D1(\coreInst/ALU_ALU_OPX[2] ), 
    .C1(N_459), .B1(\coreInst/LDS_BYTEX ), .A1(\coreInst/ALU_ALU_OPX[3] ), 
    .D0(\coreInst/N_294 ), .C0(\coreInst/RESULT_11_RNIO3A01[8] ), 
    .B0(\coreInst/RESULT_sn_N_9 ), .A0(\coreInst/N_976 ), 
    .F0(\ADDR_BUF_i_a2_8_RNIH4E34[10] ), .F1(\coreInst/RESULT_sn_N_9 ));
  coreInst_busControllerInst_SLICE_780 \coreInst/busControllerInst/SLICE_780 
    ( .D1(\coreInst/busControllerInst/ADDR_BUSX_R[1] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUSX_R[0] ), 
    .D0(\coreInst/busControllerInst/ADDR_BUF_i_2_0[13] ), 
    .C0(\coreInst/busControllerInst/N_978 ), 
    .B0(\coreInst/busControllerInst/N_771 ), .A0(\coreInst/ALUB_DATA[13] ), 
    .F0(\coreInst.busControllerInst.ADDR_BUF_i_2[13] ), 
    .F1(\coreInst/busControllerInst/N_978 ));
  coreInst_busControllerInst_SLICE_781 \coreInst/busControllerInst/SLICE_781 
    ( .D1(\coreInst/DEBUG_ADDR_OUT[11] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), .B1(\coreInst/PC_A[11] ), 
    .A1(\coreInst/busControllerInst/N_960 ), 
    .D0(\coreInst/busControllerInst/ADDR_BUF_i_2_0[11] ), 
    .C0(\coreInst/ALUB_DATA[11] ), .B0(\coreInst/busControllerInst/N_978 ), 
    .A0(\coreInst/busControllerInst/N_781 ), 
    .F0(\coreInst/busControllerInst/ADDR_BUF_i_2[11] ), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_2_0[11] ));
  coreInst_busControllerInst_SLICE_782 \coreInst/busControllerInst/SLICE_782 
    ( .D1(\coreInst/DEBUG_ADDR_OUT[12] ), .C1(\coreInst/PC_A[12] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .A1(\coreInst/busControllerInst/N_960 ), .D0(\coreInst/ALUB_DATA[12] ), 
    .C0(\coreInst/busControllerInst/ADDR_BUF_i_2_0[12] ), 
    .B0(\coreInst/busControllerInst/N_776 ), 
    .A0(\coreInst/busControllerInst/N_978 ), 
    .F0(\coreInst/busControllerInst/ADDR_BUF_i_2[12] ), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_2_0[12] ));
  coreInst_busControllerInst_SLICE_783 \coreInst/busControllerInst/SLICE_783 
    ( .D1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .C1(\coreInst/PC_A[14] ), .B1(\coreInst/busControllerInst/N_960 ), 
    .A1(\coreInst/DEBUG_ADDR_OUT[14] ), .D0(\coreInst/ALUB_DATA[14] ), 
    .C0(\coreInst/busControllerInst/N_978 ), 
    .B0(\coreInst/busControllerInst/N_766 ), 
    .A0(\coreInst/busControllerInst/ADDR_BUF_i_2_0[14] ), 
    .F0(\coreInst/busControllerInst/ADDR_BUF_i_2[14] ), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_2_0[14] ));
  coreInst_busControllerInst_SLICE_784 \coreInst/busControllerInst/SLICE_784 
    ( .D1(\coreInst/PC_A[15] ), .C1(\coreInst/busControllerInst/N_960 ), 
    .B1(\coreInst/DEBUG_ADDR_OUT[15] ), 
    .A1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .D0(\coreInst/busControllerInst/N_978 ), .C0(\coreInst/ALUB_DATA[15] ), 
    .B0(\coreInst/busControllerInst/N_761 ), 
    .A0(\coreInst/busControllerInst/ADDR_BUF_i_2_0[15] ), 
    .F0(\coreInst/busControllerInst/ADDR_BUF_i_2[15] ), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_2_0[15] ));
  coreInst_busControllerInst_SLICE_785 \coreInst/busControllerInst/SLICE_785 
    ( .D1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .C1(\coreInst/busControllerInst/N_960 ), .B1(\coreInst/PC_A[9] ), 
    .A1(\coreInst/DEBUG_ADDR_OUT[9] ), .D0(\coreInst/HERE[9] ), 
    .C0(\coreInst/busControllerInst/ADDR_BUF_i_2_0[9] ), 
    .B0(\coreInst/busControllerInst/N_787 ), 
    .A0(\coreInst/busControllerInst/N_428 ), 
    .F0(\coreInst/busControllerInst/ADDR_BUF_i_2[9] ), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_2_0[9] ));
  coreInst_busControllerInst_SLICE_786 \coreInst/busControllerInst/SLICE_786 
    ( .D1(\coreInst/DEBUG_ADDR_OUT[10] ), .C1(\coreInst/PC_A[10] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .A1(\coreInst/busControllerInst/N_960 ), .D0(\coreInst/HERE[10] ), 
    .C0(\coreInst/busControllerInst/N_571 ), 
    .B0(\coreInst/busControllerInst/ADDR_BUF_i_2_0[10] ), 
    .A0(\coreInst/busControllerInst/N_428 ), 
    .F0(\coreInst/busControllerInst/ADDR_BUF_i_2[10] ), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_2_0[10] ));
  coreInst_SLICE_787 \coreInst/SLICE_787 ( .D1(\coreInst/ALUB_SRCX[1] ), 
    .C1(\coreInst/ALUB_N_14 ), .B1(\coreInst/N_487 ), .A1(\coreInst/N_513 ), 
    .D0(\coreInst/N_36 ), .C0(\coreInst/N_68 ), .B0(\coreInst/N_134 ), 
    .A0(\coreInst/busControllerInst/N_978 ), 
    .F0(\coreInst/busControllerInst/N_797 ), .F1(\coreInst/N_68 ));
  coreInst_SLICE_788 \coreInst/SLICE_788 ( .D1(\coreInst/ALUB_SRCX[1] ), 
    .B1(\coreInst/INSTRUCTION[7] ), .A1(\coreInst/N_134 ), 
    .D0(\coreInst/busControllerInst/N_978 ), .B0(\coreInst/ALUB_DATA_0[9] ), 
    .A0(\coreInst/ALUB_DATA_0[8] ), .F0(\coreInst/busControllerInst/N_787 ), 
    .F1(\coreInst/ALUB_DATA_0[8] ));
  coreInst_busControllerInst_SLICE_789 \coreInst/busControllerInst/SLICE_789 
    ( .D1(\coreInst/PC_A[7] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .B1(\coreInst/DEBUG_ADDR_OUT[7] ), .A1(\coreInst/busControllerInst/N_960 ), 
    .D0(\coreInst/busControllerInst/N_581 ), .C0(\coreInst/HERE[7] ), 
    .B0(\coreInst/busControllerInst/ADDR_BUF_i_2_0[7] ), 
    .A0(\coreInst/busControllerInst/N_428 ), 
    .F0(\coreInst/busControllerInst/ADDR_BUF_i_2[7] ), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_2_0[7] ));
  coreInst_SLICE_790 \coreInst/SLICE_790 ( .D1(\coreInst/ALUB_SRCX[1] ), 
    .B1(\coreInst/REGB_DOUT[7] ), .A1(\coreInst/INSTRUCTION[7] ), 
    .D0(\coreInst/busControllerInst/N_978 ), .C0(\coreInst/N_134 ), 
    .B0(\coreInst/N_40 ), .F0(\coreInst/busControllerInst/N_581 ), 
    .F1(\coreInst/N_40 ));
  coreInst_SLICE_791 \coreInst/SLICE_791 ( .D1(\coreInst/ALUB_SRCX[1] ), 
    .C1(\coreInst/INSTRUCTION[5] ), .A1(\coreInst/REGB_DOUT[5] ), 
    .D0(\coreInst/N_134 ), .C0(\coreInst/N_38 ), 
    .B0(\coreInst/busControllerInst/N_978 ), 
    .F0(\coreInst/busControllerInst/N_591 ), .F1(\coreInst/N_38 ));
  coreInst_SLICE_792 \coreInst/SLICE_792 ( .D1(\coreInst/INSTRUCTION[6] ), 
    .C1(\coreInst/ALUB_SRCX[1] ), .B1(\coreInst/REGB_DOUT[6] ), 
    .D0(\coreInst/busControllerInst/N_978 ), .C0(\coreInst/N_39 ), 
    .B0(\coreInst/N_134 ), .F0(\coreInst/busControllerInst/N_586 ), 
    .F1(\coreInst/N_39 ));
  coreInst_busControllerInst_SLICE_793 \coreInst/busControllerInst/SLICE_793 
    ( .D1(\coreInst/DEBUG_ADDR_OUT[4] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .B1(\coreInst/busControllerInst/N_960 ), .A1(\coreInst/PC_A[4] ), 
    .D0(\coreInst/HERE[4] ), .C0(\coreInst/busControllerInst/ADDR_BUF_i_0[4] ), 
    .B0(\coreInst/busControllerInst/N_428 ), 
    .F0(\coreInst/busControllerInst/ADDR_BUF_i_1[4] ), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_0[4] ));
  coreInst_busControllerInst_SLICE_794 \coreInst/busControllerInst/SLICE_794 
    ( .D1(\coreInst/busControllerInst/N_960 ), 
    .C1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), .B1(\coreInst/PC_A[3] ), 
    .A1(\coreInst/DEBUG_ADDR_OUT[3] ), .D0(\coreInst/busControllerInst/N_428 ), 
    .C0(\coreInst/busControllerInst/ADDR_BUF_i_0[3] ), .A0(\coreInst/HERE[3] ), 
    .F0(\coreInst/busControllerInst/ADDR_BUF_i_1[3] ), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_0[3] ));
  coreInst_busControllerInst_SLICE_795 \coreInst/busControllerInst/SLICE_795 
    ( .D1(\coreInst/PC_A[5] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .B1(\coreInst/DEBUG_ADDR_OUT[5] ), .A1(\coreInst/busControllerInst/N_960 ), 
    .D0(\coreInst/HERE[5] ), .C0(\coreInst/busControllerInst/ADDR_BUF_i_0[5] ), 
    .A0(\coreInst/busControllerInst/N_428 ), 
    .F0(\coreInst/busControllerInst/ADDR_BUF_i_1[5] ), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_0[5] ));
  coreInst_busControllerInst_SLICE_796 \coreInst/busControllerInst/SLICE_796 
    ( .D1(\coreInst/PC_A[6] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .B1(\coreInst/DEBUG_ADDR_OUT[6] ), .A1(\coreInst/busControllerInst/N_960 ), 
    .D0(\coreInst/HERE[6] ), .C0(\coreInst/busControllerInst/N_428 ), 
    .B0(\coreInst/busControllerInst/ADDR_BUF_i_0[6] ), 
    .F0(\coreInst/busControllerInst/ADDR_BUF_i_1[6] ), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_0[6] ));
  coreInst_busControllerInst_SLICE_797 \coreInst/busControllerInst/SLICE_797 
    ( .D1(\coreInst/busControllerInst/ADDR_BUSX_R[1] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUSX_R[0] ), 
    .D0(\coreInst/DEBUG_ADDR_OUT[13] ), 
    .C0(\coreInst/busControllerInst/N_960 ), .B0(\coreInst/PC_A[13] ), 
    .A0(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .F0(\coreInst/busControllerInst/ADDR_BUF_i_2_0[13] ), 
    .F1(\coreInst/busControllerInst/N_960 ));
  coreInst_SLICE_798 \coreInst/SLICE_798 ( .D1(\coreInst/LDS_BYTEX ), 
    .C1(\coreInst/ALU_OPX_i_1[0] ), .B1(N_459), .A1(\coreInst/ALU_ALU_OPX[2] ), 
    .D0(\coreInst/ALU_OPX[3] ), .C0(\coreInst/RESULT_12_0_s[14] ), 
    .A0(\coreInst/N_976 ), .F0(\coreInst/busControllerInst/ADDR_m4_0_a2_2 ), 
    .F1(\coreInst/RESULT_12_0_s[14] ));
  coreInst_SLICE_799 \coreInst/SLICE_799 ( .D1(\coreInst/LDS_BYTEX ), 
    .B1(\coreInst/ALU_OPX_i_1[0] ), .A1(N_459), .D0(\coreInst/N_976 ), 
    .C0(\coreInst/RESULT109_1 ), .B0(\coreInst/RESULT109_2 ), 
    .F0(\coreInst/busControllerInst/ADDR_m4_e_0_2 ), 
    .F1(\coreInst/RESULT109_1 ));
  coreInst_registerFileInst_regs_SLICE_800 
    \coreInst/registerFileInst/regs/SLICE_800 ( 
    .D1(\coreInst/registerFileInst/N_456 ), 
    .C1(\coreInst/registerFileInst/regs/N_248_i_1 ), 
    .B1(\coreInst/registerFileInst/DINA_3_i_0[2] ), .A1(\CPU_DIN[2] ), 
    .C0(\CPU_DIN[10] ), .B0(\coreInst/N_964 ), .A0(\coreInst/REGA_DINX[0] ), 
    .F0(\coreInst/registerFileInst/regs/N_248_i_1 ), 
    .F1(\coreInst/registerFileInst/regs/N_248_i ));
  coreInst_registerFileInst_regs_SLICE_801 
    \coreInst/registerFileInst/regs/SLICE_801 ( 
    .D1(\coreInst/registerFileInst/N_456 ), .C1(\CPU_DIN[0] ), 
    .B1(\coreInst/registerFileInst/DINA_3_i_0[0] ), 
    .A1(\coreInst/registerFileInst/regs/N_252_i_1 ), .C0(\coreInst/N_964 ), 
    .B0(\coreInst/CPU_DIN[8] ), .A0(\coreInst/REGA_DINX[0] ), 
    .F0(\coreInst/registerFileInst/regs/N_252_i_1 ), 
    .F1(\coreInst/registerFileInst/regs/N_252_i ));
  coreInst_registerFileInst_SLICE_802 \coreInst/registerFileInst/SLICE_802 ( 
    .D1(\coreInst/PC_A[1] ), .C1(\coreInst/N_444 ), .B1(\coreInst/ALU_R[1] ), 
    .A1(N_459), .D0(\CPU_DIN[9] ), .C0(\coreInst/registerFileInst/N_675 ), 
    .B0(\coreInst/registerFileInst/DINA_3_i_0[1] ), 
    .A0(\coreInst/registerFileInst/N_986 ), 
    .F0(\coreInst/registerFileInst/regs/N_250_i ), 
    .F1(\coreInst/registerFileInst/DINA_3_i_0[1] ));
  coreInst_registerFileInst_SLICE_803 \coreInst/registerFileInst/SLICE_803 ( 
    .D1(\coreInst/un1_HERE[3] ), .C1(\coreInst/N_444 ), 
    .B1(\coreInst/ALU_R[3] ), .A1(N_459), .D0(\CPU_DIN[11] ), 
    .C0(\coreInst/registerFileInst/N_667 ), 
    .B0(\coreInst/registerFileInst/DINA_3_i_0[3] ), 
    .A0(\coreInst/registerFileInst/N_986 ), 
    .F0(\coreInst/registerFileInst/regs/N_246_i ), 
    .F1(\coreInst/registerFileInst/DINA_3_i_0[3] ));
  coreInst_registerFileInst_SLICE_804 \coreInst/registerFileInst/SLICE_804 ( 
    .D1(\coreInst/ALU_R[4] ), .C1(\coreInst/un1_HERE[4] ), .B1(N_459), 
    .A1(\coreInst/N_444 ), .D0(\coreInst/registerFileInst/DINA_3_i_0[4] ), 
    .C0(\coreInst/registerFileInst/N_663 ), .B0(\CPU_DIN[12] ), 
    .A0(\coreInst/registerFileInst/N_986 ), 
    .F0(\coreInst/registerFileInst/regs/N_244_i ), 
    .F1(\coreInst/registerFileInst/DINA_3_i_0[4] ));
  coreInst_registerFileInst_SLICE_805 \coreInst/registerFileInst/SLICE_805 ( 
    .D1(N_459), .C1(\coreInst/un1_HERE[5] ), .B1(\coreInst/N_444 ), 
    .A1(\coreInst/ALU_R[5] ), .D0(\coreInst/registerFileInst/N_986 ), 
    .C0(\coreInst/registerFileInst/DINA_3_i_0[5] ), .B0(\CPU_DIN[13] ), 
    .A0(\coreInst/registerFileInst/N_659 ), 
    .F0(\coreInst/registerFileInst/regs/N_242_i ), 
    .F1(\coreInst/registerFileInst/DINA_3_i_0[5] ));
  coreInst_registerFileInst_SLICE_806 \coreInst/registerFileInst/SLICE_806 ( 
    .D1(\coreInst/N_444 ), .C1(\coreInst/ALU_R[6] ), 
    .B1(\coreInst/un1_HERE[6] ), .A1(N_459), 
    .D0(\coreInst/registerFileInst/DINA_3_i_0[6] ), 
    .C0(\coreInst/registerFileInst/N_986 ), 
    .B0(\coreInst/registerFileInst/N_655 ), .A0(\CPU_DIN[14] ), 
    .F0(\coreInst/registerFileInst/regs/N_240_i ), 
    .F1(\coreInst/registerFileInst/DINA_3_i_0[6] ));
  coreInst_SLICE_807 \coreInst/SLICE_807 ( .D1(\coreInst/GROUPX_0_rep1 ), 
    .C1(\coreInst/INSTRUCTION[8] ), .A1(\coreInst/INSTRUCTION[9] ), 
    .D0(\coreInst/INSTRUCTION[0] ), .C0(\coreInst/d_N_4_2 ), 
    .B0(\coreInst/d_m8_0_o4_0 ), .A0(\coreInst/REGB_DOUT[0] ), 
    .F0(\coreInst/registers_0_0_1_RNISQGB1 ), .F1(\coreInst/d_N_4_2 ));
  coreInst_registerFileInst_regs_SLICE_808 
    \coreInst/registerFileInst/regs/SLICE_808 ( .D1(\coreInst/REGA_DINX[0] ), 
    .C1(\CPU_DIN[15] ), .B1(\coreInst/N_964 ), 
    .A1(\coreInst/registerFileInst/regs/N_238_i_sx ), 
    .C0(\coreInst/registerFileInst/DINA_3_i_0[7] ), 
    .B0(\coreInst/registerFileInst/N_456 ), .A0(\CPU_DIN[7] ), 
    .F0(\coreInst/registerFileInst/regs/N_238_i_sx ), 
    .F1(\coreInst/registerFileInst/regs/N_238_i ));
  coreInst_registerFileInst_SLICE_809 \coreInst/registerFileInst/SLICE_809 ( 
    .D1(\coreInst/GROUPX[1] ), .C1(\coreInst/ALU_ALU_OPX[0] ), 
    .B1(\coreInst/GROUPX[0] ), .D0(\coreInst/DEBUG_MODE ), 
    .C0(\coreInst/INSTRUCTION[8] ), .B0(\coreInst/INSTRUCTION[9] ), 
    .A0(\coreInst/registerFileInst/N_480 ), 
    .F0(\coreInst/registerFileInst/ADDRB_i_0[0] ), 
    .F1(\coreInst/registerFileInst/N_480 ));
  coreInst_registerFileInst_SLICE_810 \coreInst/registerFileInst/SLICE_810 ( 
    .D1(\coreInst/registerFileInst/N_480 ), .C1(\coreInst/REGB_ADDRX[0] ), 
    .B1(\coreInst/INSTRUCTION[9] ), .A1(\coreInst/INSTRUCTION[8] ), 
    .D0(\coreInst/DEBUG_ADDR_OUT[3] ), .C0(\coreInst/registerFileInst/N_1018 ), 
    .B0(\coreInst/DEBUG_MODE ), .A0(\coreInst/INSTRUCTION[3] ), 
    .F0(\coreInst/registerFileInst/N_370_i ), 
    .F1(\coreInst/registerFileInst/N_1018 ));
  coreInst_registerFileInst_SLICE_811 \coreInst/registerFileInst/SLICE_811 ( 
    .D1(\coreInst/un1_HERE_cry_13_0_S1 ), .C1(\coreInst/ALU_R[15] ), 
    .B1(N_459), .A1(\coreInst/N_444 ), .D0(\CPU_DIN[15] ), 
    .C0(\coreInst/registerFileInst/N_984 ), 
    .B0(\coreInst/registerFileInst/DINA_3_0_0[15] ), 
    .F0(\coreInst/registerFileInst/DINA[15] ), 
    .F1(\coreInst/registerFileInst/DINA_3_0_0[15] ));
  coreInst_registerFileInst_SLICE_812 \coreInst/registerFileInst/SLICE_812 ( 
    .D1(N_459), .C1(\coreInst/un1_HERE_cry_13_0_S0 ), 
    .B1(\coreInst/ALU_R[14] ), .A1(\coreInst/N_444 ), .C0(\CPU_DIN[14] ), 
    .B0(\coreInst/registerFileInst/N_984 ), 
    .A0(\coreInst/registerFileInst/DINA_3_0_0[14] ), 
    .F0(\coreInst/registerFileInst/DINA[14] ), 
    .F1(\coreInst/registerFileInst/DINA_3_0_0[14] ));
  coreInst_registerFileInst_SLICE_813 \coreInst/registerFileInst/SLICE_813 ( 
    .D1(\coreInst/un1_HERE_cry_9_0_S0 ), .C1(N_459), .B1(\coreInst/N_444 ), 
    .A1(\coreInst.ALU_R[10] ), .C0(\coreInst/registerFileInst/DINA_3_0_0[10] ), 
    .B0(\CPU_DIN[10] ), .A0(\coreInst/registerFileInst/N_984 ), 
    .F0(\coreInst/registerFileInst/DINA[10] ), 
    .F1(\coreInst/registerFileInst/DINA_3_0_0[10] ));
  coreInst_registerFileInst_SLICE_814 \coreInst/registerFileInst/SLICE_814 ( 
    .D1(\coreInst/N_444 ), .C1(N_459), .B1(\coreInst/ALU_R[9] ), 
    .A1(\coreInst/un1_HERE_cry_7_0_S1 ), 
    .C0(\coreInst/registerFileInst/N_984 ), 
    .B0(\coreInst/registerFileInst/DINA_3_0_0[9] ), .A0(\CPU_DIN[9] ), 
    .F0(\coreInst/registerFileInst/DINA[9] ), 
    .F1(\coreInst/registerFileInst/DINA_3_0_0[9] ));
  coreInst_registerFileInst_SLICE_815 \coreInst/registerFileInst/SLICE_815 ( 
    .D1(N_459), .C1(\coreInst/ALU_R[8] ), .B1(\coreInst/N_444 ), 
    .A1(\coreInst/un1_HERE_cry_7_0_S0 ), 
    .D0(\coreInst/registerFileInst/N_984 ), .C0(\coreInst/CPU_DIN[8] ), 
    .A0(\coreInst/registerFileInst/DINA_3_0_0[8] ), 
    .F0(\coreInst/registerFileInst/DINA[8] ), 
    .F1(\coreInst/registerFileInst/DINA_3_0_0[8] ));
  coreInst_registerFileInst_SLICE_816 \coreInst/registerFileInst/SLICE_816 ( 
    .D1(N_459), .C1(\coreInst/un1_HERE_cry_11_0_S1 ), .B1(\coreInst/N_444 ), 
    .A1(\coreInst/ALU_R[13] ), .D0(\CPU_DIN[13] ), 
    .C0(\coreInst/registerFileInst/DINA_3_0_0[13] ), 
    .B0(\coreInst/registerFileInst/N_984 ), 
    .F0(\coreInst/registerFileInst/DINA[13] ), 
    .F1(\coreInst/registerFileInst/DINA_3_0_0[13] ));
  coreInst_registerFileInst_SLICE_817 \coreInst/registerFileInst/SLICE_817 ( 
    .D1(\coreInst/N_444 ), .C1(N_459), .B1(\coreInst/un1_HERE_cry_11_0_S0 ), 
    .A1(\coreInst/ALU_R[12] ), .D0(\CPU_DIN[12] ), 
    .C0(\coreInst/registerFileInst/DINA_3_0_0[12] ), 
    .B0(\coreInst/registerFileInst/N_984 ), 
    .F0(\coreInst/registerFileInst/DINA[12] ), 
    .F1(\coreInst/registerFileInst/DINA_3_0_0[12] ));
  coreInst_registerFileInst_SLICE_818 \coreInst/registerFileInst/SLICE_818 ( 
    .D1(\coreInst/un1_HERE_cry_9_0_S1 ), .C1(\coreInst/N_444 ), .B1(N_459), 
    .A1(\coreInst/ALU_R[11] ), .D0(\coreInst/registerFileInst/N_984 ), 
    .C0(\coreInst/registerFileInst/DINA_3_0_0[11] ), .B0(\CPU_DIN[11] ), 
    .F0(\coreInst/registerFileInst/DINA[11] ), 
    .F1(\coreInst/registerFileInst/DINA_3_0_0[11] ));
  coreInst_SLICE_819 \coreInst/SLICE_819 ( .C1(\coreInst/RESULT_sn_N_9 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_293 ), 
    .A1(\coreInst/fullALUInst/aluInst/N_276 ), .D0(\coreInst/un1_HERE[7] ), 
    .C0(N_459), .B0(\coreInst.ALU_R[7] ), .A0(\coreInst/N_444 ), 
    .F0(\coreInst/registerFileInst/DINA_3_i_0[7] ), .F1(\coreInst.ALU_R[7] ));
  coreInst_fullALUInst_ccRegs_SLICE_820 
    \coreInst/fullALUInst/ccRegs/SLICE_820 ( .D1(\coreInst/N_1011 ), 
    .C1(\coreInst/fullALUInst/ccRegs/CC_INT0_REG[1] ), 
    .A1(\coreInst/fullALUInst/ccRegs/CC_INT1_REG[1] ), 
    .D0(\coreInst/i17_mux_4 ), .C0(\coreInst/CC_RUN_REG[1] ), 
    .B0(\coreInst/N_27 ), .M1(\coreInst/ALU_R[15] ), 
    .M0(\coreInst/fullALUInst/CC_C ), 
    .CE(\coreInst/fullALUInst/ccRegs/CC_INT0_REG_0_sqmuxa ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/CC_ZERO ), 
    .Q0(\coreInst/fullALUInst/ccRegs/CC_INT0_REG[2] ), 
    .F1(\coreInst/i17_mux_4 ), 
    .Q1(\coreInst/fullALUInst/ccRegs/CC_INT0_REG[3] ));
  coreInst_fullALUInst_ccRegs_SLICE_821 
    \coreInst/fullALUInst/ccRegs/SLICE_821 ( .D1(\coreInst/N_1011 ), 
    .C1(\coreInst/fullALUInst/ccRegs/CC_INT1_REG[0] ), 
    .A1(\coreInst/fullALUInst/ccRegs/CC_INT0_REG[0] ), .D0(\coreInst/N_27 ), 
    .C0(\coreInst/CC_RUN_REG[0] ), .B0(\coreInst/i17_mux_6 ), 
    .M1(\coreInst/fullALUInst/CC_Z ), .M0(\coreInst/fullALUInst/CC_P ), 
    .CE(\coreInst/fullALUInst/ccRegs/CC_INT0_REG_0_sqmuxa ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/CC_PARITY ), 
    .Q0(\coreInst/fullALUInst/ccRegs/CC_INT0_REG[0] ), 
    .F1(\coreInst/i17_mux_6 ), 
    .Q1(\coreInst/fullALUInst/ccRegs/CC_INT0_REG[1] ));
  coreInst_fullALUInst_ccRegs_SLICE_822 
    \coreInst/fullALUInst/ccRegs/SLICE_822 ( 
    .C1(\coreInst/fullALUInst/ccRegs/CC_INT1_REG[2] ), .B1(\coreInst/N_1011 ), 
    .A1(\coreInst/fullALUInst/ccRegs/CC_INT0_REG[2] ), .D0(\coreInst/N_27 ), 
    .C0(\coreInst/i17_mux_2 ), .B0(\coreInst/CC_RUN_REG[2] ), 
    .M1(\coreInst/fullALUInst/CC_Z ), .M0(\coreInst/fullALUInst/CC_P ), 
    .CE(\coreInst/fullALUInst/ccRegs/CC_INT1_REG_0_sqmuxa ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/CC_CARRY ), 
    .Q0(\coreInst/fullALUInst/ccRegs/CC_INT1_REG[0] ), 
    .F1(\coreInst/i17_mux_2 ), 
    .Q1(\coreInst/fullALUInst/ccRegs/CC_INT1_REG[1] ));
  coreInst_fullALUInst_SLICE_823 \coreInst/fullALUInst/SLICE_823 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[0] ), .C1(\coreInst/fullALUInst/N_48 ), 
    .B1(\coreInst/N_134 ), .D0(\coreInst/ALUB_SRCX[1] ), 
    .C0(\coreInst/INSTRUCTION[7] ), .B0(\coreInst/ALUB_N_14 ), 
    .A0(\coreInst/REGB_DOUT[15] ), .F0(\coreInst/fullALUInst/N_48 ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_7_cry_2_0_RNO ));
  coreInst_fullALUInst_SLICE_824 \coreInst/fullALUInst/SLICE_824 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[2] ), .C1(\coreInst/N_134 ), 
    .B1(\coreInst/N_66 ), .A1(\coreInst/N_34 ), .D0(\coreInst/ALUB_SRCX[1] ), 
    .C0(\coreInst/N_514 ), .B0(\coreInst/ARGB_X[0] ), 
    .A0(\coreInst/ALUB_N_14 ), .F0(\coreInst/N_66 ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_8_cry_1_0_RNO_0 ));
  coreInst_fullALUInst_SLICE_825 \coreInst/fullALUInst/SLICE_825 ( 
    .C1(\coreInst/fullALUInst/ALUB_i7_mux ), .B1(\coreInst/N_429_i ), 
    .A1(\coreInst/registers_0_0_1_RNISQGB1 ), 
    .D0(\coreInst/fullALUInst/muxB/ALUB_m8_2 ), .C0(\coreInst/REGB_DOUT[0] ), 
    .B0(\coreInst/N_598 ), .A0(\coreInst/INSTRUCTION[0] ), 
    .F0(\coreInst/fullALUInst/ALUB_i7_mux ), 
    .F1(\coreInst/fullALUInst/aluInst/N_226_i ));
  coreInst_fullALUInst_SLICE_826 \coreInst/fullALUInst/SLICE_826 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[7] ), .C1(\coreInst/ALUB_DATA[0] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[6] ), .D0(\coreInst/N_429_i ), 
    .C0(\coreInst/registers_0_0_1_RNISQGB1 ), 
    .A0(\coreInst/fullALUInst/ALUB_i7_mux ), .F0(\coreInst/ALUB_DATA[0] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_8 ));
  coreInst_fullALUInst_SLICE_827 \coreInst/fullALUInst/SLICE_827 ( 
    .D1(\coreInst/fullALUInst/ALUB_DATA_6_sn[2] ), 
    .C1(\coreInst/fullALUInst/aluInst/N_29_0 ), .B1(\coreInst/N_35 ), 
    .A1(\coreInst/N_67 ), .D0(\coreInst/DEBUG_MODE ), 
    .C0(\coreInst/GROUPX[1] ), .B0(\coreInst/N_497 ), 
    .A0(\coreInst/GROUPX_0_rep1 ), 
    .F0(\coreInst/fullALUInst/ALUB_DATA_6_sn[2] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_45_0 ));
  coreInst_fullALUInst_SLICE_828 \coreInst/fullALUInst/SLICE_828 ( 
    .D1(\coreInst/ALUB_DATA[3] ), .C1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .B1(\coreInst/ALUB_DATA[0] ), .A1(\coreInst/ALUB_DATA[1] ), 
    .D0(\coreInst/N_67 ), .C0(\coreInst/N_35 ), 
    .B0(\coreInst/fullALUInst/ALUB_DATA_6_sn[2] ), 
    .F0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_2_0_1 ));
  coreInst_fullALUInst_SLICE_829 \coreInst/fullALUInst/SLICE_829 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[14] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[15] ), .D0(\coreInst/REGA_DOUT[15] ), 
    .C0(\coreInst/N_267 ), .B0(\coreInst/N_263_1 ), .A0(\coreInst/N_985 ), 
    .F0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_16 ));
  coreInst_fullALUInst_SLICE_830 \coreInst/fullALUInst/SLICE_830 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[14] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .D0(\coreInst/REGA_DOUT[14] ), .C0(\coreInst/N_263_1 ), 
    .B0(\coreInst/N_267 ), .A0(\coreInst/N_985 ), 
    .F0(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_14_0 ));
  coreInst_fullALUInst_SLICE_831 \coreInst/fullALUInst/SLICE_831 ( 
    .D1(\coreInst/ALUB_DATA[0] ), .C1(\coreInst/fullALUInst/ALUA_DATA[12] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[13] ), .D0(\coreInst/N_263_1 ), 
    .C0(\coreInst/N_267 ), .B0(\coreInst/REGA_DOUT[13] ), 
    .A0(\coreInst/N_985 ), .F0(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_14 ));
  coreInst_fullALUInst_SLICE_832 \coreInst/fullALUInst/SLICE_832 ( 
    .D1(\coreInst/ALUB_DATA[0] ), .C1(\coreInst/fullALUInst/ALUA_DATA[12] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[13] ), .D0(\coreInst/N_985 ), 
    .C0(\coreInst/REGA_DOUT[12] ), .B0(\coreInst/N_267 ), 
    .A0(\coreInst/N_263_1 ), .F0(\coreInst/fullALUInst/ALUA_DATA[12] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_13_0 ));
  coreInst_fullALUInst_SLICE_833 \coreInst/fullALUInst/SLICE_833 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[10] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[11] ), .D0(\coreInst/N_985 ), 
    .C0(\coreInst/N_267 ), .B0(\coreInst/N_263_1 ), 
    .A0(\coreInst/REGA_DOUT[11] ), .F0(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_12 ));
  coreInst_fullALUInst_SLICE_834 \coreInst/fullALUInst/SLICE_834 ( 
    .D1(\coreInst/ALUB_DATA[0] ), .C1(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[10] ), .D0(\coreInst/N_985 ), 
    .C0(\coreInst/N_267 ), .B0(\coreInst/REGA_DOUT[10] ), 
    .A0(\coreInst/N_263_1 ), .M1(\coreInst/ALU_R[15] ), 
    .M0(\coreInst/fullALUInst/CC_C ), 
    .CE(\coreInst/fullALUInst/ccRegs/CC_INT1_REG_0_sqmuxa ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/fullALUInst/ALUA_DATA[10] ), 
    .Q0(\coreInst/fullALUInst/ccRegs/CC_INT1_REG[2] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_11_0 ), 
    .Q1(\coreInst/fullALUInst/ccRegs/CC_INT1_REG[3] ));
  coreInst_fullALUInst_SLICE_835 \coreInst/fullALUInst/SLICE_835 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_12_0_d[9] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .B1(\coreInst/fullALUInst/aluInst/un3_tmp[9] ), 
    .A1(\coreInst/RESULT_12_0_s[14] ), .D0(\coreInst/N_263_1 ), 
    .C0(\coreInst/N_267 ), .B0(\coreInst/REGA_DOUT[9] ), .A0(\coreInst/N_985 ), 
    .F0(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI8T841[9] ));
  coreInst_fullALUInst_SLICE_836 \coreInst/fullALUInst/SLICE_836 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[9] ), .C1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[8] ), .D0(\coreInst/N_985 ), 
    .C0(\coreInst/N_267 ), .B0(\coreInst/N_263_1 ), 
    .A0(\coreInst/REGA_DOUT[8] ), .F0(\coreInst/fullALUInst/ALUA_DATA[8] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_10 ));
  coreInst_fullALUInst_SLICE_837 \coreInst/fullALUInst/SLICE_837 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[6] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[7] ), .D0(\coreInst/N_263_1 ), 
    .C0(\coreInst.REGA_DOUT[7] ), .B0(\coreInst/N_267 ), .A0(\coreInst/N_985 ), 
    .F0(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_7_0 ));
  coreInst_fullALUInst_SLICE_838 \coreInst/fullALUInst/SLICE_838 ( 
    .D1(\coreInst/ALUB_DATA[0] ), .C1(\coreInst/fullALUInst/ALUA_DATA[5] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[6] ), .D0(\coreInst/N_985 ), 
    .C0(\coreInst/N_267 ), .B0(\coreInst/REGA_DOUT[6] ), 
    .A0(\coreInst/N_263_1 ), .F0(\coreInst/fullALUInst/ALUA_DATA[6] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_6_0 ));
  coreInst_SLICE_839 \coreInst/SLICE_839 ( 
    .D1(\coreInst/fullALUInst/aluInst/a15_b_i[0] ), 
    .C1(\coreInst/ALUB_DATA[1] ), .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_14_0 ), .D0(\coreInst/N_429_i ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .B0(\coreInst/registers_0_0_1_RNISQGB1 ), 
    .A0(\coreInst/fullALUInst/ALUB_i7_mux ), 
    .M1(\coreInst/debugger/modeReg/Q_R[0] ), 
    .M0(\coreInst/debugger/modeReg/Q_PHI0[1] ), .LSR(PIN_RESETN_c), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/fullALUInst/aluInst/a15_b_i[0] ), 
    .Q0(\coreInst/DEBUG_MODE_rep1 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_46_0 ), 
    .Q1(\coreInst/debugger/modeReg/Q_PHI0[0] ));
  coreInst_fullALUInst_aluInst_SLICE_840 
    \coreInst/fullALUInst/aluInst/SLICE_840 ( 
    .D1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .C1(\coreInst/fullALUInst/aluInst/N_2_2 ), 
    .B1(\coreInst/fullALUInst/aluInst/un7_sex_1[0] ), 
    .A1(\coreInst/ALUB_DATA[1] ), .D0(\coreInst/N_36 ), .C0(\coreInst/N_68 ), 
    .B0(\coreInst/N_134 ), .A0(\coreInst/N_37 ), 
    .F0(\coreInst/fullALUInst/aluInst/un7_sex_1[0] ), 
    .F1(\coreInst/fullALUInst/aluInst/un38_RESULT_92_0 ));
  coreInst_fullALUInst_aluInst_SLICE_841 
    \coreInst/fullALUInst/aluInst/SLICE_841 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[14] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/ALUB_DATA[1] ), .D0(\coreInst/N_67 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_31_0 ), 
    .B0(\coreInst/fullALUInst/ALUB_DATA_6_sn[2] ), .A0(\coreInst/N_35 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_47_0 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_31_0 ));
  coreInst_fullALUInst_aluInst_SLICE_842 
    \coreInst/fullALUInst/aluInst/SLICE_842 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_48_0 ), 
    .C1(\coreInst/fullALUInst/aluInst/OVER_0 ), .B1(\coreInst/ALUB_DATA[3] ), 
    .D0(\coreInst/fullALUInst/ALUB_DATA[2] ), .C0(\coreInst/ALUB_DATA[0] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[15] ), .A0(\coreInst/ALUB_DATA[1] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_48_0 ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_10[15] ));
  coreInst_fullALUInst_aluInst_SLICE_843 
    \coreInst/fullALUInst/aluInst/SLICE_843 ( 
    .D1(\coreInst/fullALUInst/aluInst/OVER_0_6 ), 
    .C1(\coreInst/fullALUInst/aluInst/OVER_0_7 ), 
    .B1(\coreInst/ALUB_DATA[14] ), .A1(\coreInst/ALUB_DATA[12] ), 
    .D0(\coreInst/ALUB_DATA[3] ), .C0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_31_0 ), 
    .A0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_10[14] ), 
    .F1(\coreInst/fullALUInst/aluInst/OVER_0 ));
  coreInst_fullALUInst_aluInst_SLICE_844 
    \coreInst/fullALUInst/aluInst/SLICE_844 ( .D1(\coreInst/ALUB_DATA[3] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_18_2 ), 
    .A1(\coreInst/fullALUInst/ALUB_DATA[2] ), .D0(\coreInst/N_37 ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_2 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_52_2 ), .A0(\coreInst/N_134 ), 
    .F0(\coreInst/fullALUInst/aluInst/un38_RESULT[0] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_52_2 ));
  coreInst_fullALUInst_aluInst_SLICE_845 
    \coreInst/fullALUInst/aluInst/SLICE_845 ( 
    .C1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_21_0 ), 
    .A1(\coreInst/fullALUInst/aluInst/N_17_0 ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_41_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_33_0 ), .A0(\coreInst/ALUB_DATA[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_10[0] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_33_0 ));
  coreInst_fullALUInst_aluInst_SLICE_846 
    \coreInst/fullALUInst/aluInst/SLICE_846 ( .D1(\coreInst/N_128 ), 
    .C1(\coreInst/fullALUInst/aluInst/N_177 ), .B1(\coreInst/N_171 ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_33_0 ), .B0(\coreInst/ALUB_DATA[3] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_177 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_242 ));
  coreInst_fullALUInst_aluInst_SLICE_847 
    \coreInst/fullALUInst/aluInst/SLICE_847 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_41_0 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_33_0 ), .A1(\coreInst/ALUB_DATA[3] ), 
    .D0(\coreInst/fullALUInst/aluInst/tmp_3[3] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_49_0 ), 
    .A0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_173 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_49_0 ));
  coreInst_fullALUInst_aluInst_SLICE_848 
    \coreInst/fullALUInst/aluInst/SLICE_848 ( .D1(\coreInst/RESULT_sn_N_9 ), 
    .C1(\coreInst/fullALUInst/aluInst/N_295 ), 
    .A1(\coreInst/fullALUInst/aluInst/N_278 ), .D0(\coreInst/ALU_R[8] ), 
    .C0(\coreInst/ALU_R[9] ), .B0(\coreInst.ALU_R[7] ), 
    .A0(\coreInst/fullALUInst/aluInst/ZERO_5 ), 
    .F0(\coreInst/fullALUInst/aluInst/ZERO_8 ), .F1(\coreInst/ALU_R[9] ));
  coreInst_fullALUInst_aluInst_SLICE_849 
    \coreInst/fullALUInst/aluInst/SLICE_849 ( .D1(\coreInst/ALU_R[0] ), 
    .C1(\coreInst/ALU_R[3] ), .B1(\coreInst/ALU_R[2] ), 
    .A1(\coreInst/ALU_R[1] ), .D0(\coreInst/fullALUInst/aluInst/ZERO_2 ), 
    .C0(\coreInst/ALU_R[6] ), .B0(\coreInst/ALU_R[4] ), 
    .A0(\coreInst/ALU_R[5] ), .F0(\coreInst/fullALUInst/aluInst/ZERO_5 ), 
    .F1(\coreInst/fullALUInst/aluInst/ZERO_2 ));
  coreInst_fullALUInst_aluInst_SLICE_850 
    \coreInst/fullALUInst/aluInst/SLICE_850 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_280 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_297 ), .A1(\coreInst/RESULT_sn_N_9 ), 
    .D0(\coreInst/ALU_R[12] ), .C0(\coreInst/ALU_R[11] ), 
    .B0(\coreInst.ALU_R[10] ), .A0(\coreInst/ALU_R[13] ), 
    .F0(\coreInst/fullALUInst/aluInst/ZERO_12 ), .F1(\coreInst/ALU_R[11] ));
  coreInst_fullALUInst_aluInst_SLICE_851 
    \coreInst/fullALUInst/aluInst/SLICE_851 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[14] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_12_0_d[14] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .A1(\coreInst/RESULT_12_0_s[14] ), .D0(\coreInst/N_976 ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNICLN91[14] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_300 ), .A0(\coreInst/RESULT_sn_N_9 ), 
    .F0(\coreInst/RESULT_13_RNIB0613[14] ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNICLN91[14] ));
  coreInst_fullALUInst_aluInst_SLICE_852 
    \coreInst/fullALUInst/aluInst/SLICE_852 ( 
    .D1(\coreInst/RESULT_12_0_s[14] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_12_0_d[11] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .A1(\coreInst/fullALUInst/aluInst/un3_tmp[11] ), 
    .D0(\coreInst/RESULT_sn_N_9 ), .C0(\coreInst/N_976 ), 
    .B0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI39K91[11] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_297 ), 
    .F0(\coreInst/RESULT_13_RNIVG213[11] ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI39K91[11] ));
  coreInst_fullALUInst_aluInst_SLICE_853 
    \coreInst/fullALUInst/aluInst/SLICE_853 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_261 ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_10_d[10] ), 
    .A1(\coreInst/RESULT109_1 ), .D0(\coreInst/RESULT_sn_N_9 ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_11_RNI936H[10] ), 
    .B0(\coreInst/N_976 ), .A0(\coreInst/fullALUInst/aluInst/N_296 ), 
    .F0(\coreInst/RESULT_13_RNI4AK82[10] ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_11_RNI936H[10] ));
  coreInst_fullALUInst_aluInst_SLICE_854 
    \coreInst/fullALUInst/aluInst/SLICE_854 ( .D1(\coreInst/ALU_ALU_OPX[3] ), 
    .C1(\coreInst/GROUPX[0] ), .B1(\coreInst/ALU_ALU_OPX[2] ), 
    .A1(\coreInst/d_m8_0_o4_0 ), .D0(\coreInst/RESULT109_2 ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6] ), 
    .B0(\coreInst/fullALUInst/aluInst/un21_RESULT[6] ), 
    .A0(\coreInst/RESULT109_1 ), .F0(\coreInst/fullALUInst/aluInst/N_275 ), 
    .F1(\coreInst/RESULT109_2 ));
  coreInst_fullALUInst_aluInst_SLICE_855 
    \coreInst/fullALUInst/aluInst/SLICE_855 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[14] ), 
    .C1(\coreInst/ALU_OPX[3] ), .B1(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .A1(\coreInst/un21_RESULT[14] ), .D0(\coreInst/RESULT_12_0_s[14] ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d[14] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_135 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_283 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_135 ));
  coreInst_fullALUInst_aluInst_SLICE_856 
    \coreInst/fullALUInst/aluInst/SLICE_856 ( 
    .C1(\coreInst/fullALUInst/aluInst/N_258 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_177 ), .A1(\coreInst/RESULT109_1 ), 
    .D0(\coreInst/RESULT_sn_N_9 ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_11_RNI7TP49[7] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_293 ), .A0(\coreInst/N_976 ), 
    .F0(\coreInst/RESULT_13_RNIO6M8B[7] ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_11_RNI7TP49[7] ));
  coreInst_fullALUInst_aluInst_SLICE_857 
    \coreInst/fullALUInst/aluInst/SLICE_857 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[12] ), 
    .C1(\coreInst/un21_RESULT[12] ), .B1(\coreInst/fullALUInst/ALUA_DATA[12] ), 
    .A1(\coreInst/ALU_OPX[3] ), 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d[12] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_133 ), 
    .A0(\coreInst/RESULT_12_0_s[14] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_281 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_133 ));
  coreInst_fullALUInst_aluInst_SLICE_858 
    \coreInst/fullALUInst/aluInst/SLICE_858 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[11] ), 
    .C1(\coreInst/un21_RESULT[11] ), .B1(\coreInst/ALU_OPX[3] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d[11] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_132 ), 
    .A0(\coreInst/RESULT_12_0_s[14] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_280 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_132 ));
  coreInst_fullALUInst_aluInst_SLICE_859 
    \coreInst/fullALUInst/aluInst/SLICE_859 ( 
    .D1(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .C1(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .B1(\coreInst/fullALUInst/aluInst/un3_tmp_1[5] ), 
    .A1(\coreInst/fullALUInst/aluInst/un3_tmp_13_0_0 ), 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d[13] ), 
    .C0(\coreInst/RESULT_12_0_s[14] ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp[13] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI9HM91[13] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp[13] ));
  coreInst_fullALUInst_aluInst_SLICE_860 
    \coreInst/fullALUInst/aluInst/SLICE_860 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp_1[0] ), 
    .C1(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .B1(\coreInst/fullALUInst/aluInst/un3_tmp_1[12] ), 
    .A1(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d[12] ), 
    .C0(\coreInst/fullALUInst/aluInst/un3_tmp[12] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[12] ), 
    .A0(\coreInst/RESULT_12_0_s[14] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI6DL91[12] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp[12] ));
  coreInst_fullALUInst_aluInst_SLICE_861 
    \coreInst/fullALUInst/aluInst/SLICE_861 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .C1(\coreInst/fullALUInst/aluInst/tmp_3[14] ), 
    .B1(\coreInst/fullALUInst/aluInst/RESULT_10[0] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_265 ), .B0(\coreInst/RESULT109_1 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_184 ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d[14] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_184 ));
  coreInst_fullALUInst_aluInst_SLICE_862 
    \coreInst/fullALUInst/aluInst/SLICE_862 ( .D1(\coreInst/ALU_OPX[3] ), 
    .C1(\coreInst/un21_RESULT[9] ), 
    .B1(\coreInst/fullALUInst/aluInst/un3_tmp[9] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d[9] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_130 ), 
    .A0(\coreInst/RESULT_12_0_s[14] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_278 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_130 ));
  coreInst_fullALUInst_aluInst_SLICE_863 
    \coreInst/fullALUInst/aluInst/SLICE_863 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10[0] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .B1(\coreInst/fullALUInst/aluInst/tmp_3_9[11] ), 
    .A1(\coreInst/fullALUInst/aluInst/tmp_3_0[13] ), 
    .D0(\coreInst/RESULT109_1 ), .C0(\coreInst/fullALUInst/aluInst/N_264 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_183 ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d[13] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_183 ));
  coreInst_fullALUInst_aluInst_SLICE_864 
    \coreInst/fullALUInst/aluInst/SLICE_864 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10[0] ), 
    .C1(\coreInst/fullALUInst/aluInst/tmp_3_0[12] ), 
    .B1(\coreInst/fullALUInst/aluInst/tmp_3_9[11] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[12] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_263 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_182 ), .B0(\coreInst/RESULT109_1 ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d[12] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_182 ));
  coreInst_fullALUInst_aluInst_SLICE_865 
    \coreInst/fullALUInst/aluInst/SLICE_865 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10[0] ), 
    .C1(\coreInst/fullALUInst/aluInst/tmp_3_9[11] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_129 ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_262 ), .C0(\coreInst/RESULT109_1 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_181 ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d[11] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_181 ));
  coreInst_fullALUInst_aluInst_SLICE_866 
    \coreInst/fullALUInst/aluInst/SLICE_866 ( .D1(\coreInst/d_m8_0_o4_0 ), 
    .C1(\coreInst/LDS_BYTEX ), .B1(\coreInst/GROUPX[0] ), 
    .A1(\coreInst/ALU_ALU_OPX[3] ), .C0(\coreInst/fullALUInst/aluInst/N_216 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_232 ), 
    .A0(\coreInst/fullALUInst/aluInst/RESULT_sn_N_8 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_299 ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_8 ));
  coreInst_fullALUInst_aluInst_SLICE_867 
    \coreInst/fullALUInst/aluInst/SLICE_867 ( 
    .D1(\coreInst/fullALUInst/aluInst/tmp_3_5[9] ), 
    .C1(\coreInst/fullALUInst/aluInst/RESULT_10[0] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_129 ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_260 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_179 ), .A0(\coreInst/RESULT109_1 ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_12_0_d[9] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_179 ));
  coreInst_fullALUInst_aluInst_SLICE_868 
    \coreInst/fullALUInst/aluInst/SLICE_868 ( 
    .D1(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_49_0 ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_266 ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_11[0] ), 
    .A0(\coreInst/RESULT109_1 ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_11_RNITVPP[15] ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_11[0] ));
  coreInst_fullALUInst_aluInst_SLICE_869 
    \coreInst/fullALUInst/aluInst/SLICE_869 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10[0] ), 
    .C1(\coreInst/fullALUInst/aluInst/N_129 ), 
    .B1(\coreInst/fullALUInst/aluInst/un3_tmp[8] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[8] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_259 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_178 ), .A0(\coreInst/RESULT109_1 ), 
    .F0(\coreInst/RESULT_11_RNIO3A01[8] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_178 ));
  coreInst_fullALUInst_aluInst_SLICE_870 
    \coreInst/fullALUInst/aluInst/SLICE_870 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp[3] ), 
    .C1(\coreInst/fullALUInst/aluInst/un3_tmp[1] ), 
    .B1(\coreInst/fullALUInst/aluInst/un3_tmp[2] ), 
    .A1(\coreInst/fullALUInst/aluInst/un3_tmp[0] ), 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_10[0] ), 
    .C0(\coreInst/fullALUInst/aluInst/tmp_3[3] ), 
    .B0(\coreInst/fullALUInst/aluInst/tmp_3_0[6] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[6] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_176 ), 
    .F1(\coreInst/fullALUInst/aluInst/tmp_3[3] ));
  coreInst_fullALUInst_aluInst_SLICE_871 
    \coreInst/fullALUInst/aluInst/SLICE_871 ( .D1(\coreInst/ALU_OPX[1] ), 
    .C1(\coreInst/fullALUInst/N_46 ), .B1(\coreInst/N_134 ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[13] ), .D0(\coreInst/ALU_OPX_i_1[0] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_166 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_98 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_232 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_166 ));
  coreInst_fullALUInst_aluInst_SLICE_872 
    \coreInst/fullALUInst/aluInst/SLICE_872 ( .D1(\coreInst/ALU_OPX_i_1[0] ), 
    .C1(\coreInst/ALUB_DATA_0[10] ), .B1(\coreInst/ALUB_DATA_0[8] ), 
    .A1(\coreInst/fullALUInst/aluInst/un1_RESULT[10] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_197 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_77 ), .A0(\coreInst/ALU_OPX[1] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_261 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_77 ));
  coreInst_fullALUInst_aluInst_SLICE_873 
    \coreInst/fullALUInst/aluInst/SLICE_873 ( .D1(\coreInst/N_134 ), 
    .C1(\coreInst/ALU_OPX_i_1[0] ), 
    .B1(\coreInst/fullALUInst/aluInst/un1_RESULT[15] ), 
    .A1(\coreInst/fullALUInst/N_48 ), 
    .D0(\coreInst/fullALUInst/aluInst/N_202 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_82 ), .A0(\coreInst/ALU_OPX[1] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_266 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_82 ));
  coreInst_SLICE_874 \coreInst/SLICE_874 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_52_2 ), .C1(\coreInst/ALUB_DATA[4] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_68_0 ), 
    .A1(\coreInst/fullALUInst/aluInst/OVER_2 ), 
    .D0(\coreInst/fullALUInst/aluInst/un38_RESULT[16] ), 
    .C0(\coreInst/ALU_OPX[1] ), .B0(\coreInst/ALU_OPX_i_1[0] ), 
    .A0(\coreInst/fullALUInst/aluInst/un10_RESULT[16] ), 
    .M0(\coreInst/debugger/addrL/Q_R[6] ), .CE(\coreInst/debugger/addrL/PL ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/fullALUInst/aluInst/CARRY_m0 ), 
    .Q0(\coreInst/debugger/addrL/Q_PHI0[6] ), 
    .F1(\coreInst/fullALUInst/aluInst/un38_RESULT[16] ));
  coreInst_fullALUInst_aluInst_SLICE_875 
    \coreInst/fullALUInst/aluInst/SLICE_875 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[15] ), .B1(\coreInst/N_134 ), 
    .A1(\coreInst/fullALUInst/N_48 ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_2 ), 
    .C0(\coreInst/fullALUInst/aluInst/un4_OVFL_1 ), .B0(\coreInst/ALU_OPX[1] ), 
    .A0(\coreInst/fullALUInst/aluInst/un38_RESULT_106_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_100 ), 
    .F1(\coreInst/fullALUInst/aluInst/un4_OVFL_1 ));
  coreInst_fullALUInst_aluInst_SLICE_876 
    \coreInst/fullALUInst/aluInst/SLICE_876 ( .D1(\coreInst/GROUPX[0] ), 
    .C1(\coreInst/ALU_ALU_OPX[2] ), .B1(\coreInst/d_m8_0_o4_0 ), 
    .A1(\coreInst/ALU_ALU_OPX[3] ), 
    .D0(\coreInst/fullALUInst/aluInst/un53_RESULT[3] ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .B0(\coreInst/fullALUInst/aluInst/un10_RESULT[3] ), 
    .A0(\coreInst/fullALUInst/aluInst/RESULT_10[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_190 ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ));
  coreInst_fullALUInst_aluInst_SLICE_877 
    \coreInst/fullALUInst/aluInst/SLICE_877 ( 
    .C1(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .B1(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .A1(\coreInst/fullALUInst/aluInst/N_39 ), 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_10[6] ), 
    .C0(\coreInst/fullALUInst/aluInst/un53_RESULT[6] ), 
    .B0(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .A0(\coreInst/fullALUInst/aluInst/un10_RESULT[6] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_193 ), 
    .F1(\coreInst/fullALUInst/aluInst/un53_RESULT[6] ));
  coreInst_fullALUInst_aluInst_SLICE_878 
    \coreInst/fullALUInst/aluInst/SLICE_878 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp_1[8] ), 
    .C1(\coreInst/fullALUInst/aluInst/un3_tmp_1[6] ), 
    .B1(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .A1(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .D0(\coreInst/fullALUInst/aluInst/tmp_3_7[13] ), 
    .C0(\coreInst/fullALUInst/aluInst/tmp_3_9[11] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_129 ), 
    .A0(\coreInst/fullALUInst/aluInst/un3_tmp[14] ), 
    .F0(\coreInst/fullALUInst/aluInst/tmp_3[14] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp[14] ));
  coreInst_fullALUInst_aluInst_SLICE_879 
    \coreInst/fullALUInst/aluInst/SLICE_879 ( 
    .D1(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .C1(\coreInst/fullALUInst/aluInst/N_35_0 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_43 ), 
    .A1(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .D0(\coreInst/fullALUInst/aluInst/un53_RESULT[10] ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_10[10] ), 
    .B0(\coreInst/fullALUInst/aluInst/un10_RESULT[10] ), 
    .A0(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_197 ), 
    .F1(\coreInst/fullALUInst/aluInst/un53_RESULT[10] ));
  coreInst_fullALUInst_aluInst_SLICE_880 
    \coreInst/fullALUInst/aluInst/SLICE_880 ( 
    .D1(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .C1(\coreInst/fullALUInst/aluInst/N_48_1 ), 
    .B1(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_40 ), 
    .D0(\coreInst/fullALUInst/aluInst/un53_RESULT[15] ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_sn_N_6 ), 
    .B0(\coreInst/fullALUInst/aluInst/un10_RESULT[15] ), 
    .A0(\coreInst/fullALUInst/aluInst/RESULT_10[15] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_202 ), 
    .F1(\coreInst/fullALUInst/aluInst/un53_RESULT[15] ));
  coreInst_fullALUInst_aluInst_SLICE_881 
    \coreInst/fullALUInst/aluInst/SLICE_881 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .C1(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .B1(\coreInst/fullALUInst/aluInst/un3_tmp_1[3] ), 
    .A1(\coreInst/fullALUInst/aluInst/un3_tmp_2[0] ), 
    .D0(\coreInst/fullALUInst/aluInst/un21_RESULT[3] ), 
    .C0(\coreInst/fullALUInst/aluInst/un3_tmp[3] ), .B0(\coreInst/ALU_OPX[3] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_124 ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp[3] ));
  coreInst_fullALUInst_aluInst_SLICE_882 
    \coreInst/fullALUInst/aluInst/SLICE_882 ( 
    .D1(\coreInst/fullALUInst/aluInst/OVER_i_1_a2_9 ), 
    .C1(\coreInst/fullALUInst/aluInst/OVER_i_1_a2_8 ), 
    .B1(\coreInst/fullALUInst/aluInst/un47_RESULT[16] ), 
    .A1(\coreInst/fullALUInst/aluInst/OVER_i_1_a2_2 ), 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_10[4] ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .B0(\coreInst/fullALUInst/aluInst/N_37_0 ), 
    .A0(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_12[4] ), 
    .F1(\coreInst/fullALUInst/aluInst/OVER_i ));
  coreInst_fullALUInst_aluInst_SLICE_883 
    \coreInst/fullALUInst/aluInst/SLICE_883 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_19 ), 
    .B1(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_10[2] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_35_0 ), 
    .A0(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_12[2] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_35_0 ));
  coreInst_fullALUInst_aluInst_SLICE_884 
    \coreInst/fullALUInst/aluInst/SLICE_884 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_2 ), 
    .C1(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .B1(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .C0(\coreInst/fullALUInst/aluInst/RESULT_10[1] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_34 ), 
    .A0(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_12[1] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_34 ));
  coreInst_fullALUInst_aluInst_SLICE_885 
    \coreInst/fullALUInst/aluInst/SLICE_885 ( 
    .C1(\coreInst/fullALUInst/aluInst/N_31_1 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_27_0 ), 
    .A1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_43_1 ), .A0(\coreInst/ALUB_DATA[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_132_mux ), 
    .F1(\coreInst/fullALUInst/aluInst/N_43_1 ));
  coreInst_fullALUInst_aluInst_SLICE_886 
    \coreInst/fullALUInst/aluInst/SLICE_886 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_28_0 ), 
    .C1(\coreInst/fullALUInst/aluInst/N_24_0 ), 
    .A1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_40_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_0 ), .A0(\coreInst/ALUB_DATA[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_129_mux ), 
    .F1(\coreInst/fullALUInst/aluInst/N_40_0 ));
  coreInst_fullALUInst_aluInst_SLICE_887 
    \coreInst/fullALUInst/aluInst/SLICE_887 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_29_0 ), 
    .C1(\coreInst/fullALUInst/aluInst/N_25_0 ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_41_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_0 ), .A0(\coreInst/ALUB_DATA[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_130_mux ), 
    .F1(\coreInst/fullALUInst/aluInst/N_41_0 ));
  coreInst_fullALUInst_aluInst_SLICE_888 
    \coreInst/fullALUInst/aluInst/SLICE_888 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp_2[8] ), 
    .C1(\coreInst/fullALUInst/aluInst/un3_tmp_1[8] ), 
    .B1(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .A1(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp[8] ), 
    .C0(\coreInst/fullALUInst/aluInst/un3_tmp[10] ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp[11] ), 
    .A0(\coreInst/fullALUInst/aluInst/un3_tmp[9] ), 
    .F0(\coreInst/fullALUInst/aluInst/tmp_3_9[11] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp[8] ));
  coreInst_fullALUInst_aluInst_SLICE_889 
    \coreInst/fullALUInst/aluInst/SLICE_889 ( .D1(\coreInst/ALUB_DATA[3] ), 
    .C1(\coreInst/fullALUInst/aluInst/N_46_1 ), 
    .A1(\coreInst/fullALUInst/aluInst/N_38_0 ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_54_1 ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_11[5] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_54_1 ));
  coreInst_fullALUInst_aluInst_SLICE_890 
    \coreInst/fullALUInst/aluInst/SLICE_890 ( 
    .C1(\coreInst/fullALUInst/aluInst/N_39_0 ), .B1(\coreInst/ALUB_DATA[3] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_47_1 ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_55_1 ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_11[6] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_55_1 ));
  coreInst_fullALUInst_aluInst_SLICE_891 
    \coreInst/fullALUInst/aluInst/SLICE_891 ( .D1(\coreInst/ALUB_DATA[3] ), 
    .C1(\coreInst/fullALUInst/aluInst/N_45_1 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_37_0_0 ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_53_1 ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_11[4] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_53_1 ));
  coreInst_fullALUInst_aluInst_SLICE_892 
    \coreInst/fullALUInst/aluInst/SLICE_892 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_44_1 ), .C1(\coreInst/ALUB_DATA[3] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_36_0 ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_52_1 ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_11[3] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_52_1 ));
  coreInst_fullALUInst_aluInst_SLICE_893 
    \coreInst/fullALUInst/aluInst/SLICE_893 ( .D1(\coreInst/ALUB_DATA[3] ), 
    .C1(\coreInst/fullALUInst/aluInst/N_35_0_0 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_43_1 ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_51_1 ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_11[2] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_51_1 ));
  coreInst_fullALUInst_aluInst_SLICE_894 
    \coreInst/fullALUInst/aluInst/SLICE_894 ( .D1(\coreInst/ALUB_DATA[3] ), 
    .C1(\coreInst/fullALUInst/aluInst/N_42_1 ), 
    .A1(\coreInst/fullALUInst/aluInst/N_34_0 ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_50_1 ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_11[1] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_50_1 ));
  coreInst_fullALUInst_aluInst_SLICE_895 
    \coreInst/fullALUInst/aluInst/SLICE_895 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .C1(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .B1(\coreInst/fullALUInst/aluInst/un3_tmp_10_0_0 ), 
    .A1(\coreInst/fullALUInst/aluInst/un3_tmp_1[8] ), 
    .C0(\coreInst/fullALUInst/aluInst/un3_tmp[10] ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_0 ), .A0(\coreInst/ALUB_DATA[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/tmp_3_0[10] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp[10] ));
  coreInst_fullALUInst_aluInst_SLICE_896 
    \coreInst/fullALUInst/aluInst/SLICE_896 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .C1(\coreInst/fullALUInst/aluInst/un3_tmp_9_0_0 ), 
    .B1(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .A1(\coreInst/fullALUInst/aluInst/un3_tmp_2[8] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp[9] ), 
    .C0(\coreInst/fullALUInst/aluInst/un3_tmp[8] ), 
    .F0(\coreInst/fullALUInst/aluInst/tmp_3_5[9] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp[9] ));
  coreInst_fullALUInst_aluInst_SLICE_897 
    \coreInst/fullALUInst/aluInst/SLICE_897 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_22_0 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_26_0 ), 
    .A1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_38_0 ), .B0(\coreInst/ALUB_DATA[3] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_46_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_10[5] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_38_0 ));
  coreInst_fullALUInst_aluInst_SLICE_898 
    \coreInst/fullALUInst/aluInst/SLICE_898 ( 
    .C1(\coreInst/fullALUInst/aluInst/N_25_0 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_21_0 ), 
    .A1(\coreInst/fullALUInst/ALUB_DATA[2] ), .D0(\coreInst/ALUB_DATA[3] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_45_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_37_0_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_10[4] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_37_0_0 ));
  coreInst_fullALUInst_aluInst_SLICE_899 
    \coreInst/fullALUInst/aluInst/SLICE_899 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_24_0 ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_20_0 ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_0 ), .C0(\coreInst/ALUB_DATA[3] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_36_0 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_44_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_10[3] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_36_0 ));
  coreInst_fullALUInst_aluInst_SLICE_900 
    \coreInst/fullALUInst/aluInst/SLICE_900 ( 
    .C1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_27_0 ), 
    .A1(\coreInst/fullALUInst/aluInst/N_31_0 ), .D0(\coreInst/ALUB_DATA[3] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_35_0_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_43_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_10[2] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_43_0 ));
  coreInst_fullALUInst_aluInst_SLICE_901 
    \coreInst/fullALUInst/aluInst/SLICE_901 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_18_0 ), 
    .C1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_22_0 ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_42_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_34_0 ), .A0(\coreInst/ALUB_DATA[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_10[1] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_34_0 ));
  coreInst_fullALUInst_aluInst_SLICE_902 
    \coreInst/fullALUInst/aluInst/SLICE_902 ( .D1(\coreInst/ALUB_DATA[6] ), 
    .C1(\coreInst/ALUB_DATA_0[8] ), 
    .B1(\coreInst/fullALUInst/aluInst/OVER_0_0 ), 
    .A1(\coreInst/ALUB_DATA_0_0[8] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp_0_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/un3_tmp_1_0_1 ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .A0(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .F0(\coreInst/fullALUInst/aluInst/tmp_3[1] ), 
    .F1(\coreInst/fullALUInst/aluInst/OVER_2_6 ));
  coreInst_fullALUInst_aluInst_SLICE_903 
    \coreInst/fullALUInst/aluInst/SLICE_903 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp_1[12] ), 
    .C1(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .B1(\coreInst/fullALUInst/aluInst/un3_tmp_1[3] ), 
    .A1(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .C0(\coreInst/fullALUInst/aluInst/un3_tmp[15] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[15] ), .F0(\coreInst/un3_sex[15] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp[15] ));
  coreInst_fullALUInst_aluInst_SLICE_904 
    \coreInst/fullALUInst/aluInst/SLICE_904 ( 
    .D1(\coreInst/fullALUInst/aluInst/OVER_2_7 ), 
    .C1(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .B1(\coreInst/fullALUInst/aluInst/OVER_2_5 ), 
    .A1(\coreInst/ALUB_DATA[15] ), .D0(\coreInst/fullALUInst/aluInst/N_40_2 ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_2 ), 
    .B0(\coreInst/fullALUInst/aluInst/un7_sex_1[0] ), 
    .F0(\coreInst/fullALUInst/aluInst/un38_RESULT[5] ), 
    .F1(\coreInst/fullALUInst/aluInst/OVER_2 ));
  coreInst_fullALUInst_aluInst_SLICE_905 
    \coreInst/fullALUInst/aluInst/SLICE_905 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_2_2 ), 
    .C1(\coreInst/fullALUInst/aluInst/N_4_3 ), .B1(\coreInst/ALUB_DATA[1] ), 
    .A1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_46_2 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_38_2 ), .B0(\coreInst/ALUB_DATA[4] ), 
    .A0(\coreInst/ALUB_DATA[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/un38_RESULT_102_0 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_38_2 ));
  coreInst_fullALUInst_aluInst_SLICE_906 
    \coreInst/fullALUInst/aluInst/SLICE_906 ( 
    .D1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[0] ), .B1(\coreInst/ALUB_DATA[1] ), 
    .A1(\coreInst/ALUB_DATA[0] ), .D0(\coreInst/fullALUInst/aluInst/N_35_2 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_43_2 ), .B0(\coreInst/ALUB_DATA[4] ), 
    .A0(\coreInst/ALUB_DATA[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/un38_RESULT_99_0 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_35_2 ));
  coreInst_fullALUInst_aluInst_SLICE_907 
    \coreInst/fullALUInst/aluInst/SLICE_907 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_29_2 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_33_2 ), 
    .A1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_42_2 ), .C0(\coreInst/ALUB_DATA[3] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_50_2 ), .A0(\coreInst/ALUB_DATA[4] ), 
    .F0(\coreInst/fullALUInst/aluInst/un38_RESULT_106_0 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_50_2 ));
  coreInst_fullALUInst_aluInst_SLICE_908 
    \coreInst/fullALUInst/aluInst/SLICE_908 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_22 ), 
    .B1(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_26 ), 
    .D0(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .B0(\coreInst/fullALUInst/aluInst/N_42 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_34 ), 
    .F0(\coreInst/fullALUInst/aluInst/un53_RESULT[9] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_42 ));
  coreInst_fullALUInst_aluInst_SLICE_909 
    \coreInst/fullALUInst/aluInst/SLICE_909 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_31 ), 
    .B1(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_27 ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .C0(\coreInst/fullALUInst/aluInst/N_47 ), 
    .B0(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_39 ), 
    .F0(\coreInst/fullALUInst/aluInst/un53_RESULT[14] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_47 ));
  coreInst_fullALUInst_aluInst_SLICE_910 
    \coreInst/fullALUInst/aluInst/SLICE_910 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_29 ), 
    .C1(\coreInst/fullALUInst/aluInst/N_25 ), 
    .B1(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .C0(\coreInst/fullALUInst/aluInst/N_37_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_45 ), 
    .A0(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/un53_RESULT[12] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_45 ));
  coreInst_fullALUInst_aluInst_SLICE_911 
    \coreInst/fullALUInst/aluInst/SLICE_911 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_4_0 ), 
    .C1(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .B1(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_2 ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .C0(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_36_1 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_44_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/un53_RESULT[11] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_36_1 ));
  coreInst_fullALUInst_aluInst_SLICE_912 
    \coreInst/fullALUInst/aluInst/SLICE_912 ( .D1(\coreInst/ALUB_DATA[0] ), 
    .C1(\coreInst/ALUB_DATA[3] ), .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .A1(\coreInst/ALUB_DATA[1] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp_4_0_1 ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .F0(\coreInst/fullALUInst/aluInst/un3_tmp[4] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_4_0_1 ));
  coreInst_fullALUInst_aluInst_SLICE_913 
    \coreInst/fullALUInst/aluInst/SLICE_913 ( 
    .D1(\coreInst/fullALUInst/aluInst/OVER_2_5 ), 
    .C1(\coreInst/ALUB_DATA[15] ), .B1(\coreInst/ALUB_DATA[4] ), 
    .A1(\coreInst/fullALUInst/aluInst/OVER_2_7 ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .C0(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp_2_0_1 ), 
    .F0(\coreInst/fullALUInst/aluInst/un3_tmp[2] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ));
  coreInst_fullALUInst_aluInst_SLICE_914 
    \coreInst/fullALUInst/aluInst/SLICE_914 ( .D1(\coreInst/ALUB_DATA[3] ), 
    .C1(\coreInst/ALUB_DATA[1] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .C0(\coreInst/fullALUInst/aluInst/un3_tmp_1_0_1 ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .F0(\coreInst/fullALUInst/aluInst/un3_tmp[1] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_1_0_1 ));
  coreInst_fullALUInst_aluInst_SLICE_915 
    \coreInst/fullALUInst/aluInst/SLICE_915 ( .D1(\coreInst/ALUB_DATA[1] ), 
    .C1(\coreInst/fullALUInst/ALUB_DATA[2] ), .B1(\coreInst/ALUB_DATA[3] ), 
    .A1(\coreInst/ALUB_DATA[0] ), .D0(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .C0(\coreInst/fullALUInst/aluInst/un3_tmp_0_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .F0(\coreInst/fullALUInst/aluInst/un3_tmp[0] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_0_0 ));
  coreInst_fullALUInst_aluInst_SLICE_916 
    \coreInst/fullALUInst/aluInst/SLICE_916 ( .D1(\coreInst/N_134 ), 
    .C1(\coreInst/N_67 ), .B1(\coreInst/N_35 ), .A1(\coreInst/ALUB_DATA[3] ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp_1[3] ), 
    .A0(\coreInst/fullALUInst/aluInst/un3_tmp_11_0_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/un3_tmp[11] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_11_0_0 ));
  coreInst_fullALUInst_aluInst_SLICE_917 
    \coreInst/fullALUInst/aluInst/SLICE_917 ( .D1(\coreInst/ALUB_DATA[3] ), 
    .C1(\coreInst/N_35 ), .B1(\coreInst/N_134 ), .A1(\coreInst/N_67 ), 
    .D0(\coreInst/fullALUInst/aluInst/un3_tmp_7_0_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/un3_tmp_1[3] ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_2_6 ), 
    .A0(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .F0(\coreInst/fullALUInst/aluInst/un3_tmp[7] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_7_0_0 ));
  coreInst_fullALUInst_aluInst_SLICE_918 
    \coreInst/fullALUInst/aluInst/SLICE_918 ( .D1(\coreInst/ALUB_DATA[0] ), 
    .B1(\coreInst/ALUB_DATA[1] ), .A1(\coreInst/fullALUInst/ALUA_DATA[0] ), 
    .D0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .C0(\coreInst/fullALUInst/aluInst/un7_sex_1[0] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_18_2 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_22_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/un38_RESULT_95_0 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_18_2 ));
  coreInst_fullALUInst_aluInst_SLICE_919 
    \coreInst/fullALUInst/aluInst/SLICE_919 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_5_3 ), .B1(\coreInst/ALUB_DATA[1] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_7_2 ), 
    .D0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_20_2 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_24_2 ), 
    .A0(\coreInst/fullALUInst/aluInst/un7_sex_1[0] ), 
    .F0(\coreInst/fullALUInst/aluInst/un38_RESULT_97_0 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_24_2 ));
  coreInst_fullALUInst_aluInst_SLICE_920 
    \coreInst/fullALUInst/aluInst/SLICE_920 ( 
    .C1(\coreInst/fullALUInst/aluInst/N_6_2 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_8_2 ), .A1(\coreInst/ALUB_DATA[1] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_29_2 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_25_2 ), 
    .A0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_46_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_25_2 ));
  coreInst_fullALUInst_aluInst_SLICE_921 
    \coreInst/fullALUInst/aluInst/SLICE_921 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_3_2 ), 
    .C1(\coreInst/fullALUInst/aluInst/N_5_3 ), .B1(\coreInst/ALUB_DATA[1] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_22_2 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_26_2 ), 
    .A0(\coreInst/fullALUInst/ALUB_DATA[2] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_43_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_22_2 ));
  coreInst_fullALUInst_aluInst_SLICE_922 
    \coreInst/fullALUInst/aluInst/SLICE_922 ( .D1(\coreInst/ALUB_DATA[0] ), 
    .C1(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[0] ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .C0(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .B0(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_17 ), 
    .F0(\coreInst/fullALUInst/aluInst/un53_RESULT[0] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_17 ));
  coreInst_SLICE_923 \coreInst/SLICE_923 ( .D1(\coreInst/fullALUInst/N_44 ), 
    .C1(\coreInst/N_134 ), .B1(\coreInst/fullALUInst/N_46 ), 
    .D0(\coreInst/ALUB_DATA[6] ), .C0(\coreInst/ALUB_DATA[15] ), 
    .B0(\coreInst/ALUB_DATA[4] ), .A0(\coreInst/fullALUInst/aluInst/OVER_0_4 ), 
    .M1(\PIN_DEBUG_DATA_in[4] ), .M0(\PIN_DEBUG_DATA_in[3] ), 
    .CE(\coreInst/debugger/EN_AL ), .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .F0(\coreInst/fullALUInst/aluInst/OVER_0_7 ), 
    .Q0(\coreInst/debugger/addrL/Q_R[2] ), 
    .F1(\coreInst/fullALUInst/aluInst/OVER_0_4 ), 
    .Q1(\coreInst/debugger/addrL/Q_R[3] ));
  coreInst_fullALUInst_aluInst_SLICE_924 
    \coreInst/fullALUInst/aluInst/SLICE_924 ( 
    .D1(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_10 ), 
    .A1(\coreInst/fullALUInst/aluInst/N_12 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_32 ), 
    .B0(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_28 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_48_1 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_28 ));
  coreInst_fullALUInst_aluInst_SLICE_925 
    \coreInst/fullALUInst/aluInst/SLICE_925 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_8 ), 
    .C1(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_6 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_24 ), 
    .B0(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_28 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_44_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_24 ));
  coreInst_SLICE_926 \coreInst/SLICE_926 ( .D1(\coreInst/N_40 ), 
    .C1(\coreInst/N_38 ), .A1(\coreInst/N_134 ), .D0(\coreInst/ALUB_DATA[8] ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_0_0 ), .B0(\coreInst/ALUB_DATA[9] ), 
    .A0(\coreInst/ALUB_DATA[10] ), .M1(\PIN_DEBUG_DATA_in[2] ), 
    .M0(\PIN_DEBUG_DATA_in[1] ), .CE(\coreInst/debugger/EN_AL ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .F0(\coreInst/fullALUInst/aluInst/OVER_0_6 ), 
    .Q0(\coreInst/debugger/addrL/Q_R[0] ), 
    .F1(\coreInst/fullALUInst/aluInst/OVER_0_0 ), 
    .Q1(\coreInst/debugger/addrL/Q_R[1] ));
  coreInst_fullALUInst_aluInst_SLICE_927 
    \coreInst/fullALUInst/aluInst/SLICE_927 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[11] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[12] ), .D0(\coreInst/ALUB_DATA[1] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_15_2 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_13_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_32_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_13_2 ));
  coreInst_fullALUInst_aluInst_SLICE_928 
    \coreInst/fullALUInst/aluInst/SLICE_928 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[12] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[13] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_16_2 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_14_2 ), .B0(\coreInst/ALUB_DATA[1] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_33_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_14_2 ));
  coreInst_fullALUInst_aluInst_SLICE_929 
    \coreInst/fullALUInst/aluInst/SLICE_929 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[14] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_15_2 ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[15] ), .B0(\coreInst/ALUB_DATA[1] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_34_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_15_2 ));
  coreInst_fullALUInst_aluInst_SLICE_930 
    \coreInst/fullALUInst/aluInst/SLICE_930 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[10] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_13_2 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_11_2 ), .B0(\coreInst/ALUB_DATA[1] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_30_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_11_2 ));
  coreInst_fullALUInst_aluInst_SLICE_931 
    \coreInst/fullALUInst/aluInst/SLICE_931 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[8] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .D0(\coreInst/ALUB_DATA[1] ), .C0(\coreInst/fullALUInst/aluInst/N_12_2 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_10_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_29_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_10_2 ));
  coreInst_fullALUInst_aluInst_SLICE_932 
    \coreInst/fullALUInst/aluInst/SLICE_932 ( .D1(\coreInst/ALUB_DATA[0] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[8] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_9_2 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_11_2 ), .B0(\coreInst/ALUB_DATA[1] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_28_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_9_2 ));
  coreInst_fullALUInst_aluInst_SLICE_933 
    \coreInst/fullALUInst/aluInst/SLICE_933 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[6] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[7] ), .D0(\coreInst/ALUB_DATA[1] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_8_2 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_10_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_27_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_8_2 ));
  coreInst_fullALUInst_aluInst_SLICE_934 
    \coreInst/fullALUInst/aluInst/SLICE_934 ( .D1(\coreInst/ALUB_DATA[0] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[5] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[6] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_7_2 ), .B0(\coreInst/ALUB_DATA[1] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_9_2 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_26_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_7_2 ));
  coreInst_fullALUInst_aluInst_SLICE_935 
    \coreInst/fullALUInst/aluInst/SLICE_935 ( .C1(\coreInst/ALUB_DATA[0] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[10] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_10_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_12_0 ), .A0(\coreInst/ALUB_DATA[1] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_26_0 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_10_0 ));
  coreInst_SLICE_936 \coreInst/SLICE_936 ( .D1(\coreInst/ALUB_DATA[0] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[8] ), .D0(\coreInst/ALUB_DATA[1] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_10_0 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_8_0 ), 
    .M0(\coreInst/debugger/modeReg/Q_PHI0[1] ), .LSR(PIN_RESETN_c), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/fullALUInst/aluInst/N_24_0 ), 
    .Q0(\coreInst/DEBUG_MODE_fast ), .F1(\coreInst/fullALUInst/aluInst/N_8_0 ));
  coreInst_fullALUInst_aluInst_SLICE_937 
    \coreInst/fullALUInst/aluInst/SLICE_937 ( .D1(\coreInst/ALUB_DATA[0] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[8] ), .D0(\coreInst/ALUB_DATA[1] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_9_0 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_11_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_25_0 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_9_0 ));
  coreInst_SLICE_938 \coreInst/SLICE_938 ( .D1(\coreInst/ALUB_DATA[0] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[4] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[5] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_5_1 ), .C0(\coreInst/ALUB_DATA[1] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_7_0 ), 
    .M1(\coreInst/debugger/modeReg/Q_R[2] ), 
    .M0(\coreInst/debugger/modeReg/Q_R[1] ), .LSR(PIN_RESETN_c), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/fullALUInst/aluInst/N_21_0 ), 
    .Q0(\coreInst/debugger/modeReg/Q_PHI0[1] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_5_1 ), 
    .Q1(\coreInst/debugger/modeReg/Q_PHI0[2] ));
  coreInst_SLICE_939 \coreInst/SLICE_939 ( 
    .D1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[26] ), 
    .C1(\coreInst/fullALUInst/aluInst/PARITY_2_0 ), 
    .B1(\coreInst/madd_14[15] ), 
    .A1(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[26] ), 
    .D0(\coreInst/fullALUInst/aluInst/PARITY_2_4 ), 
    .C0(\coreInst/fullALUInst/aluInst/PARITY_2_6 ), 
    .B0(\coreInst/fullALUInst/aluInst/PARITY_2_5 ), 
    .A0(\coreInst/fullALUInst/aluInst/PARITY_2_7 ), 
    .M1(\PIN_DEBUG_DATA_in[1] ), .M0(\PIN_DEBUG_DATA_in[0] ), 
    .CE(\coreInst/debugger/EN_MODE ), .LSR(PIN_RESETN_c), 
    .CLK(PIN_DEBUG_WRN_c), .F0(\coreInst/fullALUInst/aluInst/PARITY_2_13 ), 
    .Q0(\coreInst/debugger/modeReg/Q_R[0] ), 
    .F1(\coreInst/fullALUInst/aluInst/PARITY_2_5 ), 
    .Q1(\coreInst/debugger/modeReg/Q_R[1] ));
  coreInst_fullALUInst_aluInst_SLICE_940 
    \coreInst/fullALUInst/aluInst/SLICE_940 ( 
    .D1(\coreInst/fullALUInst/aluInst/un47_RESULT[15] ), 
    .C1(\coreInst/fullALUInst/aluInst/un47_RESULT[7] ), 
    .A1(\coreInst/fullALUInst/aluInst/un47_RESULT[6] ), 
    .D0(\coreInst/fullALUInst/aluInst/un47_RESULT[14] ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_i_1_a2_6 ), 
    .B0(\coreInst/fullALUInst/aluInst/un47_RESULT[5] ), 
    .A0(\coreInst/fullALUInst/aluInst/un47_RESULT[4] ), 
    .F0(\coreInst/fullALUInst/aluInst/OVER_i_1_a2_9 ), 
    .F1(\coreInst/fullALUInst/aluInst/OVER_i_1_a2_6 ));
  coreInst_SLICE_941 \coreInst/SLICE_941 ( .D1(\coreInst/DEBUG_INC_REQ ), 
    .C1(\coreInst/DEBUG_MODE_REQ ), 
    .B1(\coreInst/instructionPhaseDecoderInst/PHASE_R[5] ), 
    .D0(\coreInst/DEBUG_ACK ), 
    .C0(\coreInst/instructionPhaseDecoderInst/N_485 ), 
    .B0(\coreInst/instructionPhaseDecoderInst/N_714 ), 
    .A0(\coreInst/instructionPhaseDecoderInst/PHASE_R[6] ), 
    .M1(\coreInst/DEBUG_OP[3] ), .M0(\coreInst/DEBUG_OP[2] ), 
    .CE(\coreInst/EXECUTE ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst.instructionPhaseDecoderInst.STOPPED_2_i ), 
    .Q0(\coreInst/DEBUG_OPX[2] ), 
    .F1(\coreInst/instructionPhaseDecoderInst/N_485 ), 
    .Q1(\coreInst/DEBUG_OPX[3] ));
  coreInst_debugger_SLICE_942 \coreInst/debugger/SLICE_942 ( 
    .C1(\coreInst/debugger/EN_DH ), 
    .B1(\coreInst/debugger/DEBUG_READ_MUX_IN_H[7] ), 
    .A1(\coreInst/debugger/DEBUG_READ_MUX_IN_L[7] ), 
    .C0(\PIN_DEBUG_ADDR_c[1] ), .B0(\PIN_DEBUG_ADDR_c[2] ), 
    .A0(\PIN_DEBUG_ADDR_c[0] ), .M1(\coreInst/debugger/addrL/Q_R[5] ), 
    .M0(\coreInst/debugger/addrL/Q_R[4] ), .CE(\coreInst/debugger/addrL/PL ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), .F0(\coreInst/debugger/EN_DH ), 
    .Q0(\coreInst/debugger/addrL/Q_PHI0[4] ), .F1(\DEBUG_DOUT[7] ), 
    .Q1(\coreInst/debugger/addrL/Q_PHI0[5] ));
  coreInst_debugger_SLICE_943 \coreInst/debugger/SLICE_943 ( 
    .C1(\coreInst/DEBUG_OPX[1] ), .B1(\coreInst/DEBUG_OPX[2] ), 
    .A1(\coreInst/DEBUG_OPX[3] ), .D0(\coreInst/REGB_DOUT[2] ), 
    .C0(\coreInst/debugger/N_475 ), .B0(\coreInst/DIN_LATCHED[2] ), 
    .A0(\coreInst/N_460 ), 
    .F0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[2] ), 
    .F1(\coreInst/debugger/N_475 ));
  coreInst_debugger_SLICE_944 \coreInst/debugger/SLICE_944 ( 
    .C1(\coreInst/DEBUG_OPX[2] ), .B1(\coreInst/DEBUG_OPX[3] ), 
    .A1(\coreInst/DEBUG_OPX[1] ), .D0(\coreInst/PC_A[4] ), 
    .C0(\coreInst/N_460 ), .B0(\coreInst/debugger/N_967 ), 
    .A0(\coreInst/REGB_DOUT[4] ), 
    .F0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[4] ), 
    .F1(\coreInst/debugger/N_967 ));
  coreInst_debugger_SLICE_945 \coreInst/debugger/SLICE_945 ( 
    .D1(\coreInst/DEBUG_OPX[3] ), .B1(\coreInst/DEBUG_OPX[2] ), 
    .A1(\coreInst/DEBUG_OPX[1] ), .D0(\coreInst/INSTRUCTION[2] ), 
    .C0(\coreInst/debugger/N_1002 ), .B0(\coreInst/PC_A[2] ), 
    .A0(\coreInst/debugger/N_967 ), 
    .F0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[2] ), 
    .F1(\coreInst/debugger/N_1002 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_946 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_946 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[1] ), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte_1_sqmuxa ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[2] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[0] ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[1] ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte_1_sqmuxa ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[2] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[0] ), .M0(PIN_RXD_c), 
    .CE(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[4] ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[6] ), 
    .Q0(\mcuResourcesInst/UARTInst/RX_BYTE[4] ), .F1(\mcuResourcesInst.N_167 ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_947 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_947 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte_1_sqmuxa ), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[2] ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[1] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[0] ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[1] ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[2] ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte_1_sqmuxa ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[0] ), .M0(PIN_RXD_c), 
    .CE(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte_RNO[3] ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[5] ), 
    .Q0(\mcuResourcesInst/UARTInst/RX_BYTE[3] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[0] ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_948 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_948 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[1] ), 
    .C1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[2] ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[0] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte_1_sqmuxa ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[1] ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[2] ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[0] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte_1_sqmuxa ), 
    .M0(PIN_RXD_c), .CE(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[2] ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[4] ), 
    .Q0(\mcuResourcesInst/UARTInst/RX_BYTE[2] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[1] ));
  mcuResourcesInst_UARTInst_SLICE_949 \mcuResourcesInst/UARTInst/SLICE_949 ( 
    .D1(\mcuResourcesInst/UART_MAP_0_a2_RNIFEBT ), 
    .C1(\mcuResourcesInst/WRITE ), .B1(N_330), .A1(N_332), 
    .D0(\mcuResourcesInst/UART_MAP_0_a2_RNIFEBT ), 
    .C0(\mcuResourcesInst/WRITE ), .B0(N_330), .A0(N_332), .M1(\DOUT[7] ), 
    .M0(\DOUT[2] ), .CE(\mcuResourcesInst/UARTInst/RX_CLK_DIV_1_sqmuxa ), 
    .CLK(PIN_CLK_X1_c), .F0(\mcuResourcesInst/UARTInst/RX_CLK_DIV_1_sqmuxa ), 
    .Q0(\mcuResourcesInst/UARTInst/RX_CLK_DIV[2] ), 
    .F1(\mcuResourcesInst/UARTInst/TX_CLK_DIV_1_sqmuxa ), 
    .Q1(\mcuResourcesInst/UARTInst/RX_CLK_DIV[7] ));
  coreInst_registerSequencerInst_SLICE_950 
    \coreInst/registerSequencerInst/SLICE_950 ( .D1(\coreInst/ALU_ALU_OPX[2] ), 
    .C1(\coreInst/ALU_ALU_OPX[0] ), .B1(\coreInst/LDS_BYTEX ), 
    .A1(\coreInst/ALU_ALU_OPX[3] ), .D0(\coreInst/ALU_ALU_OPX[2] ), 
    .C0(\coreInst/ALU_ALU_OPX[0] ), .B0(\coreInst/LDS_BYTEX ), 
    .A0(\coreInst/ALU_ALU_OPX[3] ), 
    .F0(\coreInst/registerSequencerInst/REGA_WEN_3_i_a2_4_0_0 ), 
    .F1(\coreInst/registerSequencerInst/REGA_WEN_3_i_a2_0_2 ));
  coreInst_programCounterInst_SLICE_951 
    \coreInst/programCounterInst/SLICE_951 ( .D1(\coreInst/INT_PC_NEXTX[2] ), 
    .C1(\coreInst/INT_PC_NEXTX[1] ), .B1(\coreInst/INT_PC_NEXTX[0] ), 
    .A1(\coreInst/DEBUG_MODE ), .D0(\coreInst/INT_PC_NEXTX[2] ), 
    .C0(\coreInst/INT_PC_NEXTX[1] ), .B0(\coreInst/INT_PC_NEXTX[0] ), 
    .A0(\coreInst/DEBUG_MODE ), .M1(\coreInst/programCounterInst/SUM[11] ), 
    .M0(\coreInst/programCounterInst/SUM[10] ), 
    .CE(\coreInst/programCounterInst/INTR05 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/PC_A_NEXT_6_0_0_RNO[15] ), 
    .Q0(\coreInst/programCounterInst/INTR0[10] ), 
    .F1(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_4 ), 
    .Q1(\coreInst/programCounterInst/INTR0[11] ));
  coreInst_SLICE_952 \coreInst/SLICE_952 ( .D1(\coreInst/REGA_DOUT[0] ), 
    .C1(\coreInst/ALU_R[8] ), .B1(\coreInst/N_964 ), .A1(N_459), 
    .D0(\coreInst/REGA_DOUT[0] ), .C0(\coreInst/ALU_R[8] ), 
    .B0(\coreInst/N_964 ), .A0(N_459), 
    .F0(\coreInst/busControllerInst/DOUT_BUF_i_0[8] ), 
    .F1(\coreInst/registerFileInst/regs/m68_i_o4_0 ));
  coreInst_fullALUInst_aluInst_SLICE_953 
    \coreInst/fullALUInst/aluInst/SLICE_953 ( .D1(\coreInst/ALUB_DATA[1] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[15] ), .B1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[14] ), .D0(\coreInst/ALUB_DATA[1] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[15] ), .B0(\coreInst/ALUB_DATA[0] ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_7[15] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_31_1 ));
  coreInst_fullALUInst_aluInst_SLICE_954 
    \coreInst/fullALUInst/aluInst/SLICE_954 ( .D1(\coreInst/N_34 ), 
    .C1(\coreInst/ALUB_DATA[0] ), .B1(\coreInst/N_134 ), .A1(\coreInst/N_66 ), 
    .D0(\coreInst/N_34 ), .C0(\coreInst/ALUB_DATA[0] ), .B0(\coreInst/N_134 ), 
    .A0(\coreInst/N_66 ), .F0(\coreInst/fullALUInst/aluInst/un3_tmp_1[3] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_1[0] ));
  coreInst_fullALUInst_aluInst_SLICE_955 
    \coreInst/fullALUInst/aluInst/SLICE_955 ( .D1(\coreInst/N_35 ), 
    .C1(\coreInst/N_67 ), .B1(\coreInst/ALUB_DATA[3] ), .A1(\coreInst/N_134 ), 
    .D0(\coreInst/N_35 ), .C0(\coreInst/N_67 ), .B0(\coreInst/ALUB_DATA[3] ), 
    .A0(\coreInst/N_134 ), .F0(\coreInst/fullALUInst/aluInst/un3_tmp_2[0] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_1[12] ));
  coreInst_fullALUInst_aluInst_SLICE_956 
    \coreInst/fullALUInst/aluInst/SLICE_956 ( .D1(\coreInst/ALUB_DATA[1] ), 
    .C1(\coreInst/N_134 ), .B1(\coreInst/N_67 ), .A1(\coreInst/N_35 ), 
    .D0(\coreInst/ALUB_DATA[1] ), .C0(\coreInst/N_134 ), .B0(\coreInst/N_67 ), 
    .A0(\coreInst/N_35 ), .F0(\coreInst/fullALUInst/aluInst/un3_tmp_1[6] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_2[8] ));
  coreInst_fullALUInst_aluInst_SLICE_957 
    \coreInst/fullALUInst/aluInst/SLICE_957 ( .D1(\coreInst/N_68 ), 
    .C1(\coreInst/N_134 ), .B1(\coreInst/N_36 ), .A1(\coreInst/ALUB_DATA[0] ), 
    .D0(\coreInst/N_68 ), .C0(\coreInst/N_134 ), .B0(\coreInst/N_36 ), 
    .A0(\coreInst/ALUB_DATA[0] ), 
    .F0(\coreInst/fullALUInst/aluInst/un3_tmp_1[8] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_6_0_0 ));
  mcuResourcesInst_UARTInst_SLICE_958 \mcuResourcesInst/UARTInst/SLICE_958 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[0] ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[2] ), 
    .A1(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32 ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[0] ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[0] ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[2] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32 ), .M1(N_340_i), 
    .M0(N_342_i), .CE(\mcuResourcesInst/UARTInst/TX_CLK_DIV_1_sqmuxa ), 
    .CLK(PIN_CLK_X1_c), .F0(\mcuResourcesInst/UARTInst/uartRXInst/CO0 ), 
    .Q0(\mcuResourcesInst/UARTInst/TX_CLK_DIV[11] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/N_105 ), 
    .Q1(\mcuResourcesInst/UARTInst/TX_CLK_DIV[12] ));
  mcuResourcesInst_memoryMapperInst_SLICE_959 
    \mcuResourcesInst/memoryMapperInst/SLICE_959 ( .D1(N_320), 
    .C1(\mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_4 ), .B1(N_322), 
    .A1(N_316), .D0(N_320), 
    .C0(\mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_4 ), .B0(N_322), 
    .F0(\mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_4_RNIOQQP ), 
    .F1(\mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_N_2L1_0 ));
  coreInst_SLICE_960 \coreInst/SLICE_960 ( .D1(\coreInst/DEBUG_MODE ), 
    .C1(\coreInst/GROUPX[1] ), .B1(\coreInst/LDS_BYTEX ), 
    .A1(\coreInst/GROUPX[0] ), .D0(\coreInst/DEBUG_MODE ), 
    .B0(\coreInst/GROUPX[1] ), .A0(\coreInst/GROUPX[0] ), 
    .F0(\coreInst/opxMultiplexerInst/N_3_i_0 ), 
    .F1(\coreInst/busControllerInst/sequencer/N_963 ));
  coreInst_SLICE_961 \coreInst/SLICE_961 ( .D1(\coreInst/ALU_ALU_OPX[2] ), 
    .C1(\coreInst/ADDR_N_8 ), .B1(\coreInst/ALU_ALU_OPX[0] ), 
    .A1(\coreInst/ALU_ALU_OPX[3] ), .D0(\coreInst/ALU_ALU_OPX[2] ), 
    .B0(\coreInst/ALU_ALU_OPX[0] ), .A0(\coreInst/ALU_ALU_OPX[3] ), 
    .M1(\CPU_DIN[4] ), .M0(\CPU_DIN[3] ), .CE(\coreInst/EXECUTE ), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/opxMultiplexerInst/ALUB_SRCX_0_2_N_2L1 ), 
    .Q0(\coreInst/INSTRUCTION[3] ), 
    .F1(\coreInst/busControllerInst/sequencer/N_595 ), 
    .Q1(\coreInst/INSTRUCTION[4] ));
  coreInst_SLICE_962 \coreInst/SLICE_962 ( .D1(\coreInst/N_134 ), 
    .C1(\coreInst/N_35 ), .B1(\coreInst/fullALUInst/ALUA_DATA[2] ), 
    .A1(\coreInst/N_67 ), .D0(\coreInst/N_134 ), .C0(\coreInst/N_35 ), 
    .B0(\coreInst/busControllerInst/N_978 ), .A0(\coreInst/N_67 ), 
    .F0(\coreInst/busControllerInst/N_802 ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_7[2] ));
  coreInst_busControllerInst_SLICE_963 \coreInst/busControllerInst/SLICE_963 
    ( .D1(\coreInst/busControllerInst/ADDR_BUSX_R[1] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .B1(\coreInst/DEBUG_ADDR_OUT[1] ), 
    .A1(\coreInst/busControllerInst/ADDR_BUSX_R[0] ), 
    .D0(\coreInst/busControllerInst/ADDR_BUSX_R[1] ), 
    .C0(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), .B0(\coreInst/HERE[15] ), 
    .A0(\coreInst/busControllerInst/ADDR_BUSX_R[0] ), 
    .F0(\coreInst/busControllerInst/N_761 ), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_1_1[1] ));
  coreInst_busControllerInst_SLICE_964 \coreInst/busControllerInst/SLICE_964 
    ( .D1(\coreInst/HERE[14] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUSX_R[1] ), 
    .A1(\coreInst/busControllerInst/ADDR_BUSX_R[0] ), 
    .D0(\coreInst/busControllerInst/ADDR_BUSX_R[0] ), 
    .C0(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .B0(\coreInst/busControllerInst/ADDR_BUSX_R[1] ), .A0(\coreInst/HERE[13] ), 
    .F0(\coreInst/busControllerInst/N_771 ), 
    .F1(\coreInst/busControllerInst/N_766 ));
  coreInst_busControllerInst_SLICE_965 \coreInst/busControllerInst/SLICE_965 
    ( .D1(\coreInst/HERE[11] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUSX_R[0] ), 
    .B1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .A1(\coreInst/busControllerInst/ADDR_BUSX_R[1] ), .D0(\coreInst/HERE[12] ), 
    .C0(\coreInst/busControllerInst/ADDR_BUSX_R[0] ), 
    .B0(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .A0(\coreInst/busControllerInst/ADDR_BUSX_R[1] ), 
    .F0(\coreInst/busControllerInst/N_776 ), 
    .F1(\coreInst/busControllerInst/N_781 ));
  coreInst_registerFileInst_SLICE_966 \coreInst/registerFileInst/SLICE_966 ( 
    .D1(\coreInst/GROUPX[0] ), .C1(\coreInst/d_m8_0_o4_0 ), 
    .B1(\coreInst/INSTRUCTION[7] ), .A1(\coreInst/INSTRUCTION[9] ), 
    .D0(\coreInst/GROUPX[0] ), .C0(\coreInst/d_m8_0_o4_0 ), 
    .B0(\coreInst/INSTRUCTION[6] ), .A0(\coreInst/INSTRUCTION[9] ), 
    .F0(\coreInst/registerFileInst/ADDRA[2] ), 
    .F1(\coreInst/registerFileInst/ADDRA[3] ));
  coreInst_registerFileInst_SLICE_967 \coreInst/registerFileInst/SLICE_967 ( 
    .D1(\coreInst/INSTRUCTION[4] ), .C1(\coreInst/INSTRUCTION[9] ), 
    .B1(\coreInst/GROUPX[0] ), .A1(\coreInst/d_m8_0_o4_0 ), 
    .D0(\coreInst/INSTRUCTION[5] ), .C0(\coreInst/INSTRUCTION[9] ), 
    .B0(\coreInst/GROUPX[0] ), .A0(\coreInst/d_m8_0_o4_0 ), 
    .F0(\coreInst/registerFileInst/ADDRA[1] ), 
    .F1(\coreInst/registerFileInst/ADDRA[0] ));
  coreInst_fullALUInst_aluInst_SLICE_968 
    \coreInst/fullALUInst/aluInst/SLICE_968 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .C1(\coreInst/registers_0_0_1_RNISQGB1 ), .B1(\coreInst/N_429_i ), 
    .A1(\coreInst/fullALUInst/ALUB_i7_mux ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .C0(\coreInst/registers_0_0_1_RNISQGB1 ), .B0(\coreInst/N_429_i ), 
    .A0(\coreInst/fullALUInst/ALUB_i7_mux ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_8_cry_1_0_RNO ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_8_cry_9_0_RNO_0 ));
  coreInst_fullALUInst_aluInst_SLICE_969 
    \coreInst/fullALUInst/aluInst/SLICE_969 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .C1(\coreInst/fullALUInst/ALUB_i7_mux ), .B1(\coreInst/N_429_i ), 
    .A1(\coreInst/registers_0_0_1_RNISQGB1 ), 
    .D0(\coreInst/registers_0_0_1_RNISQGB1 ), 
    .C0(\coreInst/fullALUInst/ALUB_i7_mux ), .B0(\coreInst/N_429_i ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[5] ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_12_cry_1_0_RNO ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_8_cry_7_0_RNO_0 ));
  coreInst_fullALUInst_aluInst_SLICE_970 
    \coreInst/fullALUInst/aluInst/SLICE_970 ( 
    .D1(\coreInst/registers_0_0_1_RNISQGB1 ), 
    .C1(\coreInst/fullALUInst/ALUB_i7_mux ), .B1(\coreInst/N_429_i ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[13] ), .D0(\coreInst/N_429_i ), 
    .C0(\coreInst/fullALUInst/ALUB_i7_mux ), 
    .B0(\coreInst/registers_0_0_1_RNISQGB1 ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_8_cry_5_0_RNO_0 ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_8_cry_11_0_RNO_0 ));
  coreInst_fullALUInst_aluInst_SLICE_971 
    \coreInst/fullALUInst/aluInst/SLICE_971 ( 
    .C1(\coreInst/fullALUInst/aluInst/OVER_0 ), .B1(\coreInst/ALUB_DATA[3] ), 
    .A1(\coreInst/fullALUInst/aluInst/un3_tmp[12] ), 
    .D0(\coreInst/ALUB_DATA[3] ), .C0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/un3_tmp[13] ), 
    .A0(\coreInst/fullALUInst/aluInst/un3_tmp[12] ), 
    .F0(\coreInst/fullALUInst/aluInst/tmp_3_0[13] ), 
    .F1(\coreInst/fullALUInst/aluInst/tmp_3_0[12] ));
  coreInst_fullALUInst_aluInst_SLICE_972 
    \coreInst/fullALUInst/aluInst/SLICE_972 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_38 ), 
    .C1(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .B1(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_38 ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .B0(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_46 ), 
    .F0(\coreInst/fullALUInst/aluInst/un53_RESULT[13] ), 
    .F1(\coreInst/fullALUInst/aluInst/un53_RESULT[5] ));
  coreInst_fullALUInst_aluInst_SLICE_973 
    \coreInst/fullALUInst/aluInst/SLICE_973 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[0] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .D0(\coreInst/ALUB_DATA[1] ), .C0(\coreInst/fullALUInst/ALUA_DATA[1] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[0] ), .A0(\coreInst/ALUB_DATA[0] ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT[1] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_2 ));
  coreInst_fullALUInst_aluInst_SLICE_974 
    \coreInst/fullALUInst/aluInst/SLICE_974 ( .D1(\coreInst/N_36 ), 
    .C1(\coreInst/N_134 ), .B1(\coreInst/ALUB_DATA[0] ), .A1(\coreInst/N_68 ), 
    .D0(\coreInst/N_36 ), .C0(\coreInst/N_134 ), .B0(\coreInst/N_68 ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_7[3] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_9_0_0 ));
  coreInst_fullALUInst_aluInst_SLICE_975 
    \coreInst/fullALUInst/aluInst/SLICE_975 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[4] ), .C1(\coreInst/N_134 ), 
    .B1(\coreInst/N_34 ), .A1(\coreInst/N_66 ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[1] ), .C0(\coreInst/N_134 ), 
    .B0(\coreInst/N_34 ), .A0(\coreInst/N_66 ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_7[1] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_12_cry_1_0_RNO_0 ));
  coreInst_fullALUInst_aluInst_SLICE_976 
    \coreInst/fullALUInst/aluInst/SLICE_976 ( .D1(\coreInst/N_66 ), 
    .C1(\coreInst/N_134 ), .B1(\coreInst/fullALUInst/ALUA_DATA[6] ), 
    .A1(\coreInst/N_34 ), .D0(\coreInst/N_66 ), .C0(\coreInst/N_134 ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[10] ), .A0(\coreInst/N_34 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_8_cry_9_0_RNO ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_8_cry_5_0_RNO ));
  coreInst_fullALUInst_aluInst_SLICE_977 
    \coreInst/fullALUInst/aluInst/SLICE_977 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[12] ), .C1(\coreInst/N_66 ), 
    .B1(\coreInst/N_134 ), .A1(\coreInst/N_34 ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[8] ), .C0(\coreInst/N_66 ), 
    .B0(\coreInst/N_134 ), .A0(\coreInst/N_34 ), 
    .F0(\coreInst/fullALUInst/aluInst/madd_8_cry_7_0_RNO ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_8_cry_11_0_RNO ));
  coreInst_fullALUInst_aluInst_SLICE_978 
    \coreInst/fullALUInst/aluInst/SLICE_978 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[2] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[2] ), .A0(\coreInst/ALUB_DATA[0] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_4_3 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_4_0 ));
  coreInst_fullALUInst_aluInst_SLICE_979 
    \coreInst/fullALUInst/aluInst/SLICE_979 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[4] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[5] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[4] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[5] ), .A0(\coreInst/ALUB_DATA[0] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_6_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_6 ));
  coreInst_debugger_SLICE_980 \coreInst/debugger/SLICE_980 ( 
    .D1(\coreInst/DEBUG_OPX_fast[3] ), .B1(\coreInst/DEBUG_OPX[2] ), 
    .A1(\coreInst/DEBUG_OPX_fast[1] ), .D0(\coreInst/DEBUG_OPX_fast[3] ), 
    .C0(\coreInst/INSTRUCTION[8] ), .B0(\coreInst/DEBUG_OPX[2] ), 
    .A0(\coreInst/DEBUG_OPX_fast[1] ), .M1(\coreInst/debugger/addrL/Q_R[1] ), 
    .M0(\coreInst/debugger/addrL/Q_R[0] ), .CE(\coreInst/debugger/addrL/PL ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[8] ), 
    .Q0(\coreInst/debugger/addrL/Q_PHI0[0] ), .F1(\coreInst/debugger/N_488 ), 
    .Q1(\coreInst/debugger/addrL/Q_PHI0[1] ));
  coreInst_debugger_SLICE_981 \coreInst/debugger/SLICE_981 ( 
    .D1(\coreInst/INSTRUCTION[4] ), .C1(\coreInst/DEBUG_OPX[2] ), 
    .B1(\coreInst/DEBUG_OPX_fast[1] ), .A1(\coreInst/DEBUG_OPX_fast[3] ), 
    .D0(\coreInst/DEBUG_OPX[2] ), .C0(\coreInst/ALU_ALU_OPX[0] ), 
    .B0(\coreInst/DEBUG_OPX_fast[1] ), .A0(\coreInst/DEBUG_OPX_fast[3] ), 
    .M1(\coreInst.debugger.addrH.Q_R[1] ), 
    .M0(\coreInst.debugger.addrH.Q_R[0] ), .CE(\coreInst/debugger/addrH/PL ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[10] ), 
    .Q0(\coreInst/debugger/addrH/Q_PHI0[0] ), 
    .F1(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[4] ), 
    .Q1(\coreInst/debugger/addrH/Q_PHI0[1] ));
  coreInst_debugger_SLICE_982 \coreInst/debugger/SLICE_982 ( 
    .D1(\coreInst/DEBUG_OPX[2] ), .C1(\coreInst/DEBUG_OPX_fast[3] ), 
    .B1(\coreInst/DEBUG_OPX_fast[1] ), .A1(\coreInst/LDS_BYTEX ), 
    .D0(\coreInst/INSTRUCTION[6] ), .C0(\coreInst/DEBUG_OPX_fast[3] ), 
    .B0(\coreInst/DEBUG_OPX_fast[1] ), .A0(\coreInst/DEBUG_OPX[2] ), 
    .M1(\coreInst.debugger.addrH.Q_R[7] ), 
    .M0(\coreInst.debugger.addrH.Q_R[6] ), .CE(\coreInst/debugger/addrH/PL ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[6] ), 
    .Q0(\coreInst/debugger/addrH/Q_PHI0[6] ), 
    .F1(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[11] ), 
    .Q1(\coreInst/debugger/addrH/Q_PHI0[7] ));
  coreInst_debugger_SLICE_983 \coreInst/debugger/SLICE_983 ( 
    .D1(\coreInst/DEBUG_OPX_fast[1] ), .C1(\coreInst/ALU_ALU_OPX[3] ), 
    .B1(\coreInst/DEBUG_OPX[2] ), .A1(\coreInst/DEBUG_OPX_fast[3] ), 
    .D0(\coreInst/DEBUG_OPX_fast[1] ), .C0(\coreInst/INSTRUCTION[9] ), 
    .B0(\coreInst/DEBUG_OPX[2] ), .A0(\coreInst/DEBUG_OPX_fast[3] ), 
    .M1(\coreInst/debugger/addrL/Q_R[3] ), 
    .M0(\coreInst/debugger/addrL/Q_R[2] ), .CE(\coreInst/debugger/addrL/PL ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[9] ), 
    .Q0(\coreInst/debugger/addrL/Q_PHI0[2] ), 
    .F1(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[13] ), 
    .Q1(\coreInst/debugger/addrL/Q_PHI0[3] ));
  coreInst_debugger_SLICE_984 \coreInst/debugger/SLICE_984 ( 
    .D1(\coreInst/DEBUG_OPX[2] ), .C1(\coreInst/DEBUG_OPX_fast[3] ), 
    .B1(\coreInst/DEBUG_OPX_fast[1] ), .A1(\coreInst/INSTRUCTION[7] ), 
    .D0(\coreInst/DEBUG_OPX[2] ), .C0(\coreInst/DEBUG_OPX_fast[3] ), 
    .B0(\coreInst/DEBUG_OPX_fast[1] ), .A0(\coreInst/INSTRUCTION[5] ), 
    .M1(\coreInst.debugger.addrH.Q_R[5] ), 
    .M0(\coreInst.debugger.addrH.Q_R[4] ), .CE(\coreInst/debugger/addrH/PL ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[5] ), 
    .Q0(\coreInst/debugger/addrH/Q_PHI0[4] ), 
    .F1(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[7] ), 
    .Q1(\coreInst/debugger/addrH/Q_PHI0[5] ));
  coreInst_debugger_SLICE_985 \coreInst/debugger/SLICE_985 ( 
    .D1(\coreInst/DEBUG_OPX_fast[3] ), .C1(\coreInst/GROUPX[0] ), 
    .B1(\coreInst/DEBUG_OPX[2] ), .A1(\coreInst/DEBUG_OPX_fast[1] ), 
    .D0(\coreInst/DEBUG_OPX_fast[3] ), .C0(\coreInst/ALU_ALU_OPX[2] ), 
    .B0(\coreInst/DEBUG_OPX[2] ), .A0(\coreInst/DEBUG_OPX_fast[1] ), 
    .M1(\coreInst.debugger.addrH.Q_R[3] ), 
    .M0(\coreInst.debugger.addrH.Q_R[2] ), .CE(\coreInst/debugger/addrH/PL ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[12] ), 
    .Q0(\coreInst/debugger/addrH/Q_PHI0[2] ), 
    .F1(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[14] ), 
    .Q1(\coreInst/debugger/addrH/Q_PHI0[3] ));
  mcuResourcesInst_UARTInst_uartTxInst_SLICE_986 
    \mcuResourcesInst/UARTInst/uartTxInst/SLICE_986 ( 
    .D1(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[1] ), 
    .C1(\mcuResourcesInst/UARTInst/START_TX ), 
    .B1(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[0] ), 
    .A1(\mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15 ), 
    .D0(\mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2 ), 
    .C0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[1] ), 
    .B0(\mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[0] ), 
    .F0(\mcuResourcesInst.UARTInst.uartTxInst.o_TX_Serial_3_iv_i ), 
    .F1(\mcuResourcesInst/UARTInst/uartTxInst/N_43_i ));
  mcuResourcesInst_UARTInst_uartRXInst_SLICE_987 
    \mcuResourcesInst/UARTInst/uartRXInst/SLICE_987 ( 
    .D1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[1] ), 
    .B1(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[0] ), 
    .D0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[0] ), 
    .C0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[1] ), 
    .B0(\mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[2] ), 
    .A0(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte_1_sqmuxa ), 
    .M0(PIN_RXD_c), .CE(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[1] ), 
    .CLK(PIN_CLK_X1_c), 
    .F0(\mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[2] ), 
    .Q0(\mcuResourcesInst/UARTInst/RX_BYTE[1] ), 
    .F1(\mcuResourcesInst/UARTInst/uartRXInst/un1_r_RX_Byte_1[3] ));
  mcuResourcesInst_memoryMapperInst_SLICE_988 
    \mcuResourcesInst/memoryMapperInst/SLICE_988 ( .D1(N_314), 
    .C1(\mcuResourcesInst/DIN_RAM[10] ), .B1(\mcuResourcesInst/DIN_ROM[10] ), 
    .A1(\mcuResourcesInst/memoryMapperInst/un5_ROM_MAP_1 ), .D0(N_314), 
    .C0(\mcuResourcesInst/DIN_ROM[5] ), .B0(\mcuResourcesInst/DIN_RAM[5] ), 
    .A0(\mcuResourcesInst/memoryMapperInst/un5_ROM_MAP_1 ), 
    .F0(\mcuResourcesInst/memoryMapperInst/N_32 ), 
    .F1(\mcuResourcesInst/memoryMapperInst/N_37 ));
  mcuResourcesInst_memoryMapperInst_SLICE_989 
    \mcuResourcesInst/memoryMapperInst/SLICE_989 ( 
    .D1(\mcuResourcesInst/memoryMapperInst/un5_ROM_MAP_1 ), .C1(N_314), 
    .B1(\mcuResourcesInst/DIN_RAM[6] ), .A1(\mcuResourcesInst/DIN_ROM[6] ), 
    .D0(\mcuResourcesInst/memoryMapperInst/un5_ROM_MAP_1 ), .C0(N_314), 
    .B0(\mcuResourcesInst/DIN_ROM[0] ), .A0(\mcuResourcesInst/DIN_RAM[0] ), 
    .F0(\mcuResourcesInst.N_27 ), 
    .F1(\mcuResourcesInst/memoryMapperInst/N_33 ));
  SLICE_990 SLICE_990( .D1(N_314), .C1(\DOUT[0] ), .B1(N_318), .A1(N_316), 
    .D0(N_316), .C0(N_318), .B0(\mcuResourcesInst/DIN_RAM[3] ), 
    .A0(\mcuResourcesInst/DIN_ROM[3] ), 
    .F0(\mcuResourcesInst/memoryMapperInst/N_30 ), 
    .F1(\coreInst/programCounterInst/ARGA_i_0_3_N_3L3 ));
  SLICE_991 SLICE_991( .D1(PIN_RESETN_c), .A1(\coreInst.debugger.DEBUG_RESET ), 
    .D0(PIN_RESETN_c), .B0(PIN_RDN_c), .A0(\coreInst.debugger.DEBUG_RESET ), 
    .F0(\mcuResourcesInst/memoryMapperInst/d_m5_0 ), .F1(RESET_i));
  coreInst_SLICE_992 \coreInst/SLICE_992 ( .D1(\coreInst/GROUPX[1] ), 
    .C1(\coreInst/INSTRUCTION[8] ), .B1(\coreInst/ALU_ALU_OPX[3] ), 
    .A1(\coreInst/DEBUG_MODE ), .D0(\coreInst/GROUPX[1] ), 
    .C0(\coreInst/DEBUG_MODE ), .B0(\coreInst/ALU_ALU_OPX[2] ), 
    .A0(\coreInst/COMMIT ), 
    .F0(\coreInst/registerSequencerInst/REGA_WEN_3_i_1 ), 
    .F1(\coreInst/fullALUInst/muxB/ALUB_m8_2 ));
  coreInst_programCounterInst_SLICE_993 
    \coreInst/programCounterInst/SLICE_993 ( .D1(\coreInst/INT_PC_NEXTX[1] ), 
    .C1(\coreInst/INT_PC_NEXTX[0] ), .B1(\coreInst/programCounterInst/N_962 ), 
    .A1(\coreInst/programCounterInst/INTR0[3] ), 
    .D0(\coreInst/INT_PC_NEXTX[1] ), .C0(\coreInst/INT_PC_NEXTX[0] ), 
    .B0(\coreInst/INT_PC_NEXTX[2] ), .A0(\coreInst/DEBUG_MODE ), 
    .M1(\coreInst/programCounterInst/SUM[15] ), 
    .M0(\coreInst/programCounterInst/SUM[14] ), 
    .CE(\coreInst/programCounterInst/INTR05 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/N_451 ), 
    .Q0(\coreInst/programCounterInst/INTR0[14] ), 
    .F1(\coreInst/programCounterInst/N_701 ), 
    .Q1(\coreInst/programCounterInst/INTR0[15] ));
  coreInst_programCounterInst_SLICE_994 
    \coreInst/programCounterInst/SLICE_994 ( 
    .D1(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .C1(\PIN_DIN_GPIO_c[1] ), .B1(\coreInst/PC_OFFSETX[0] ), 
    .A1(\coreInst/PC_OFFSETX[1] ), 
    .D0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .C0(\coreInst/programCounterInst/ARGA_m2 ), .B0(\coreInst/PC_OFFSETX[0] ), 
    .A0(\PIN_DIN_GPIO_c[2] ), .F0(\coreInst/programCounterInst/ARGA_N_5 ), 
    .F1(\coreInst/programCounterInst/ARGA_0_iv_i_0_0[1] ));
  coreInst_programCounterInst_SLICE_995 
    \coreInst/programCounterInst/SLICE_995 ( .D1(\coreInst/PC_OFFSETX[0] ), 
    .A1(\coreInst/PC_OFFSETX[1] ), .D0(\coreInst/PC_OFFSETX[0] ), 
    .A0(\coreInst/PC_OFFSETX[1] ), .F0(\coreInst/programCounterInst/N_481 ), 
    .F1(\coreInst/programCounterInst/ARGA_m5_0_a2_0 ));
  coreInst_programCounterInst_SLICE_996 
    \coreInst/programCounterInst/SLICE_996 ( 
    .D1(\coreInst/programCounterInst/N_977 ), .C1(\coreInst/PC_A[8] ), 
    .B1(\coreInst/ALUB_DATA[8] ), .A1(\coreInst/programCounterInst/N_446 ), 
    .D0(\coreInst/ALUB_DATA[10] ), .C0(\coreInst/PC_A[10] ), 
    .B0(\coreInst/programCounterInst/N_977 ), 
    .A0(\coreInst/programCounterInst/N_446 ), 
    .F0(\coreInst/programCounterInst/ARGB[10] ), 
    .F1(\coreInst/programCounterInst/ARGB[8] ));
  coreInst_programCounterInst_SLICE_997 
    \coreInst/programCounterInst/SLICE_997 ( 
    .D1(\coreInst/programCounterInst/INTR1[13] ), 
    .C1(\coreInst/programCounterInst/INTR0[13] ), 
    .B1(\coreInst/programCounterInst/N_979 ), 
    .A1(\coreInst/programCounterInst/N_973 ), 
    .D0(\coreInst/programCounterInst/INTR1[1] ), 
    .C0(\coreInst/programCounterInst/INTR0[1] ), 
    .B0(\coreInst/programCounterInst/N_979 ), 
    .A0(\coreInst/programCounterInst/N_973 ), 
    .M1(\coreInst/programCounterInst/SUM[5] ), 
    .M0(\coreInst/programCounterInst/SUM[4] ), 
    .CE(\coreInst/programCounterInst/INTR05 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[1] ), 
    .Q0(\coreInst/programCounterInst/INTR0[4] ), 
    .F1(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_0 ), 
    .Q1(\coreInst/programCounterInst/INTR0[5] ));
  coreInst_programCounterInst_SLICE_998 
    \coreInst/programCounterInst/SLICE_998 ( 
    .D1(\coreInst/programCounterInst/INTR0[14] ), 
    .C1(\coreInst/programCounterInst/INTR1[14] ), 
    .B1(\coreInst/programCounterInst/N_979 ), 
    .A1(\coreInst/programCounterInst/N_973 ), 
    .D0(\coreInst/programCounterInst/INTR0[4] ), 
    .C0(\coreInst/programCounterInst/INTR1[4] ), 
    .B0(\coreInst/programCounterInst/N_979 ), 
    .A0(\coreInst/programCounterInst/N_973 ), 
    .M1(\coreInst/programCounterInst/SUM[7] ), 
    .M0(\coreInst/programCounterInst/SUM[6] ), 
    .CE(\coreInst/programCounterInst/INTR05 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[4] ), 
    .Q0(\coreInst/programCounterInst/INTR0[6] ), 
    .F1(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1 ), 
    .Q1(\coreInst/programCounterInst/INTR0[7] ));
  coreInst_programCounterInst_SLICE_999 
    \coreInst/programCounterInst/SLICE_999 ( 
    .D1(\coreInst/programCounterInst/INTR0[9] ), 
    .C1(\coreInst/programCounterInst/INTR1[9] ), 
    .B1(\coreInst/programCounterInst/N_979 ), 
    .A1(\coreInst/programCounterInst/N_973 ), 
    .D0(\coreInst/programCounterInst/INTR0[5] ), 
    .C0(\coreInst/programCounterInst/INTR1[5] ), 
    .B0(\coreInst/programCounterInst/N_979 ), 
    .A0(\coreInst/programCounterInst/N_973 ), 
    .M1(\coreInst/programCounterInst/SUM[9] ), 
    .M0(\coreInst/programCounterInst/SUM[8] ), 
    .CE(\coreInst/programCounterInst/INTR05 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[5] ), 
    .Q0(\coreInst/programCounterInst/INTR0[8] ), 
    .F1(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_3 ), 
    .Q1(\coreInst/programCounterInst/INTR0[9] ));
  coreInst_programCounterInst_SLICE_1000 
    \coreInst/programCounterInst/SLICE_1000 ( 
    .D1(\coreInst/programCounterInst/INTR0[10] ), 
    .C1(\coreInst/programCounterInst/INTR1[10] ), 
    .B1(\coreInst/programCounterInst/N_979 ), 
    .A1(\coreInst/programCounterInst/N_973 ), 
    .D0(\coreInst/programCounterInst/INTR1[6] ), 
    .C0(\coreInst/programCounterInst/INTR0[6] ), 
    .B0(\coreInst/programCounterInst/N_979 ), 
    .A0(\coreInst/programCounterInst/N_973 ), 
    .F0(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[6] ), 
    .F1(\coreInst/programCounterInst/PC_A_NEXT_6_0_0_N_2L1_0 ));
  coreInst_programCounterInst_SLICE_1001 
    \coreInst/programCounterInst/SLICE_1001 ( 
    .D1(\coreInst/programCounterInst/INTR1[11] ), 
    .C1(\coreInst/programCounterInst/N_973 ), 
    .B1(\coreInst/programCounterInst/N_979 ), 
    .A1(\coreInst/programCounterInst/INTR0[11] ), 
    .D0(\coreInst/programCounterInst/INTR1[7] ), 
    .C0(\coreInst/programCounterInst/N_973 ), 
    .B0(\coreInst/programCounterInst/INTR0[7] ), 
    .A0(\coreInst/programCounterInst/N_979 ), 
    .F0(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[7] ), 
    .F1(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_2 ));
  coreInst_programCounterInst_SLICE_1002 
    \coreInst/programCounterInst/SLICE_1002 ( 
    .D1(\coreInst/programCounterInst/INTR1[12] ), 
    .C1(\coreInst/programCounterInst/INTR0[12] ), 
    .B1(\coreInst/programCounterInst/N_979 ), 
    .A1(\coreInst/programCounterInst/N_973 ), 
    .D0(\coreInst/programCounterInst/INTR0[8] ), 
    .C0(\coreInst/programCounterInst/INTR1[8] ), 
    .B0(\coreInst/programCounterInst/N_979 ), 
    .A0(\coreInst/programCounterInst/N_973 ), 
    .F0(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[8] ), 
    .F1(\coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_1 ));
  coreInst_busControllerInst_sequencer_SLICE_1003 
    \coreInst/busControllerInst/sequencer/SLICE_1003 ( 
    .D1(\coreInst/INSTRUCTION[9] ), .C1(\coreInst/GROUPX[0] ), 
    .B1(\coreInst/ALU_ALU_OPX[0] ), .C0(\coreInst/GROUPX[0] ), 
    .B0(\coreInst/ALU_ALU_OPX[0] ), .A0(\coreInst/INSTRUCTION[8] ), 
    .F0(\coreInst/busControllerInst/sequencer/N_599 ), 
    .F1(\coreInst/busControllerInst/sequencer/N_512 ));
  coreInst_busControllerInst_SLICE_1004 
    \coreInst/busControllerInst/SLICE_1004 ( .D1(\coreInst.REGA_DOUT[7] ), 
    .C1(N_447), .B1(\coreInst/N_964 ), .A1(\coreInst/REGA_DOUT[15] ), 
    .D0(\coreInst/REGA_DOUT[12] ), .C0(N_447), .B0(\coreInst/N_964 ), 
    .A0(\coreInst/REGA_DOUT[4] ), 
    .F0(\coreInst/busControllerInst/DOUT_BUF_i_0[12] ), 
    .F1(\coreInst/busControllerInst/DOUT_BUF_i_0[15] ));
  coreInst_busControllerInst_SLICE_1005 
    \coreInst/busControllerInst/SLICE_1005 ( .D1(\coreInst/REGA_DOUT[14] ), 
    .C1(N_447), .B1(\coreInst/N_964 ), .A1(\coreInst/REGA_DOUT[6] ), 
    .D0(\coreInst/REGA_DOUT[3] ), .C0(N_447), .B0(\coreInst/N_964 ), 
    .A0(\coreInst/REGA_DOUT[11] ), 
    .F0(\coreInst/busControllerInst/DOUT_BUF_i_0[11] ), 
    .F1(\coreInst/busControllerInst/DOUT_BUF_i_0[14] ));
  coreInst_SLICE_1006 \coreInst/SLICE_1006 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[8] ), .B1(\coreInst/ALUB_DATA_0[8] ), 
    .A1(\coreInst/ALUB_DATA_0_0[8] ), .D0(\coreInst/busControllerInst/N_978 ), 
    .C0(\coreInst/ALUB_DATA_0_0[8] ), .B0(\coreInst/ALUB_DATA_0[8] ), 
    .F0(\coreInst/busControllerInst/N_576 ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_7[8] ));
  coreInst_SLICE_1007 \coreInst/SLICE_1007 ( .D1(\coreInst/ALUB_DATA_0[8] ), 
    .C1(\coreInst/ALUB_DATA_0[10] ), .A1(\coreInst/fullALUInst/ALUA_DATA[10] ), 
    .D0(\coreInst/ALUB_DATA_0[8] ), .C0(\coreInst/ALUB_DATA_0[10] ), 
    .B0(\coreInst/busControllerInst/N_978 ), 
    .F0(\coreInst/busControllerInst/N_571 ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_7[10] ));
  coreInst_busControllerInst_SLICE_1008 
    \coreInst/busControllerInst/SLICE_1008 ( .D1(\coreInst/PC_A[2] ), 
    .C1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .B1(\coreInst/DEBUG_ADDR_OUT[2] ), .A1(\coreInst/busControllerInst/N_960 ), 
    .D0(\coreInst/PC_A[8] ), .C0(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .B0(\coreInst/DEBUG_ADDR_OUT[8] ), .A0(\coreInst/busControllerInst/N_960 ), 
    .F0(\coreInst/busControllerInst/ADDR_BUF_i_2_0[8] ), 
    .F1(\coreInst/busControllerInst/ADDR_BUF_i_0[2] ));
  coreInst_fullALUInst_aluInst_SLICE_1009 
    \coreInst/fullALUInst/aluInst/SLICE_1009 ( .D1(\coreInst/ALUB_DATA[4] ), 
    .C1(\coreInst/fullALUInst/aluInst/N_20_2 ), 
    .B1(\coreInst/fullALUInst/ALUB_DATA[2] ), .A1(\coreInst/ALUB_DATA[3] ), 
    .D0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_29_0 ), 
    .B0(\coreInst/fullALUInst/ALUB_DATA[2] ), .A0(\coreInst/ALUB_DATA[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_10[12] ), 
    .F1(\coreInst/fullALUInst/aluInst/un38_RESULT_93_0 ));
  coreInst_fullALUInst_aluInst_SLICE_1010 
    \coreInst/fullALUInst/aluInst/SLICE_1010 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_46_0 ), .C1(\coreInst/ALUB_DATA[3] ), 
    .B1(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[15] ), .C0(\coreInst/ALUB_DATA[3] ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_42_1 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_131_mux ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_10[13] ));
  coreInst_fullALUInst_aluInst_SLICE_1011 
    \coreInst/fullALUInst/aluInst/SLICE_1011 ( 
    .C1(\coreInst/fullALUInst/aluInst/N_44_0 ), 
    .B1(\coreInst/fullALUInst/aluInst/OVER_0 ), .A1(\coreInst/ALUB_DATA[3] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_40_0 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_48_0 ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_0 ), .A0(\coreInst/ALUB_DATA[3] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_10[7] ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_10[11] ));
  coreInst_fullALUInst_aluInst_SLICE_1012 
    \coreInst/fullALUInst/aluInst/SLICE_1012 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_43_0 ), .C1(\coreInst/ALUB_DATA[3] ), 
    .B1(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .D0(\coreInst/fullALUInst/aluInst/N_39_0 ), .C0(\coreInst/ALUB_DATA[3] ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_47_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_10[6] ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_10[10] ));
  coreInst_fullALUInst_aluInst_SLICE_1013 
    \coreInst/fullALUInst/aluInst/SLICE_1013 ( 
    .C1(\coreInst/fullALUInst/aluInst/OVER_0 ), .B1(\coreInst/ALUB_DATA[3] ), 
    .A1(\coreInst/fullALUInst/aluInst/N_42_0 ), .D0(\coreInst/ALUB_DATA[3] ), 
    .C0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_129 ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_10[9] ));
  coreInst_fullALUInst_aluInst_SLICE_1014 
    \coreInst/fullALUInst/aluInst/SLICE_1014 ( 
    .D1(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .B1(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .A1(\coreInst/fullALUInst/aluInst/N_36_1 ), 
    .D0(\coreInst/fullALUInst/aluInst/un47_RESULT[3] ), 
    .B0(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .A0(\coreInst/fullALUInst/aluInst/N_40 ), 
    .F0(\coreInst/fullALUInst/aluInst/un53_RESULT[7] ), 
    .F1(\coreInst/fullALUInst/aluInst/un53_RESULT[3] ));
  coreInst_fullALUInst_aluInst_SLICE_1015 
    \coreInst/fullALUInst/aluInst/SLICE_1015 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_23 ), 
    .C1(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_19 ), 
    .D0(\coreInst/fullALUInst/aluInst/N_23 ), 
    .C0(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .A0(\coreInst/fullALUInst/aluInst/N_27 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_43 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_39 ));
  coreInst_SLICE_1016 \coreInst/SLICE_1016 ( .D1(\coreInst/N_134 ), 
    .C1(\coreInst/fullALUInst/N_47 ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[14] ), .D0(\coreInst/N_134 ), 
    .C0(\coreInst/fullALUInst/N_47 ), .B0(\coreInst/fullALUInst/N_46 ), 
    .M1(\PIN_DEBUG_DATA_in[6] ), .M0(\PIN_DEBUG_DATA_in[5] ), 
    .CE(\coreInst/debugger/EN_AL ), .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .F0(\coreInst/fullALUInst/aluInst/OVER_2_5 ), 
    .Q0(\coreInst/debugger/addrL/Q_R[4] ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_7[14] ), 
    .Q1(\coreInst/debugger/addrL/Q_R[5] ));
  coreInst_SLICE_1017 \coreInst/SLICE_1017 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[6] ), .B1(\coreInst/N_134 ), 
    .A1(\coreInst/N_39 ), .D0(\coreInst/fullALUInst/aluInst/un1_RESULT[6] ), 
    .C0(\coreInst/ALU_OPX_i_1[0] ), .B0(\coreInst/N_134 ), 
    .A0(\coreInst/N_39 ), .M1(\coreInst/debugger/modeReg/Q_PHI0[0] ), 
    .M0(\coreInst/debugger/addrL/PL_R ), .LSR(PIN_RESETN_c), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/fullALUInst/aluInst/N_73 ), 
    .Q0(\coreInst/debugger/addrL/PL_PHI0 ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_7[6] ), 
    .Q1(\coreInst/DEBUG_STOP ));
  coreInst_fullALUInst_aluInst_SLICE_1018 
    \coreInst/fullALUInst/aluInst/SLICE_1018 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[2] ), .C1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[3] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[2] ), .C0(\coreInst/ALUB_DATA[0] ), 
    .B0(\coreInst/fullALUInst/aluInst/madd_0[2] ), 
    .F0(\coreInst/fullALUInst/aluInst/un21_RESULT[2] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_3_0 ));
  coreInst_fullALUInst_aluInst_SLICE_1019 
    \coreInst/fullALUInst/aluInst/SLICE_1019 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[12] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[10] ), 
    .C0(\coreInst/fullALUInst/ALUA_DATA[11] ), .A0(\coreInst/ALUB_DATA[0] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_12_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_12_0 ));
  coreInst_debugger_SLICE_1020 \coreInst/debugger/SLICE_1020 ( 
    .D1(\coreInst/N_460 ), .C1(\coreInst/debugger/N_475 ), 
    .B1(\coreInst/DIN_LATCHED[3] ), .A1(\coreInst/REGB_DOUT[3] ), 
    .D0(\coreInst/N_460 ), .C0(\coreInst/REGB_DOUT[0] ), 
    .B0(\coreInst/debugger/N_475 ), .A0(\coreInst/DIN_LATCHED[0] ), 
    .F0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[0] ), 
    .F1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[3] ));
  coreInst_debugger_SLICE_1021 \coreInst/debugger/SLICE_1021 ( 
    .D1(\coreInst/N_460 ), .C1(\coreInst/PC_A[10] ), 
    .B1(\coreInst/debugger/N_967 ), .A1(\coreInst/REGB_DOUT[10] ), 
    .D0(\coreInst/N_460 ), .C0(\coreInst/REGB_DOUT[11] ), 
    .B0(\coreInst/PC_A[11] ), .A0(\coreInst/debugger/N_967 ), 
    .F0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[11] ), 
    .F1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[10] ));
  coreInst_debugger_SLICE_1022 \coreInst/debugger/SLICE_1022 ( 
    .D1(\coreInst/REGB_DOUT[6] ), .C1(\coreInst/debugger/N_967 ), 
    .B1(\coreInst/PC_A[6] ), .A1(\coreInst/N_460 ), .D0(\coreInst/PC_A[13] ), 
    .C0(\coreInst/REGB_DOUT[13] ), .B0(\coreInst/debugger/N_967 ), 
    .A0(\coreInst/N_460 ), 
    .F0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[13] ), 
    .F1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[6] ));
  coreInst_debugger_SLICE_1023 \coreInst/debugger/SLICE_1023 ( 
    .D1(\coreInst/REGB_DOUT[9] ), .C1(\coreInst/PC_A[9] ), 
    .B1(\coreInst/N_460 ), .A1(\coreInst/debugger/N_967 ), 
    .D0(\coreInst/debugger/N_967 ), .C0(\coreInst/REGB_DOUT[7] ), 
    .B0(\coreInst/N_460 ), .A0(\coreInst/PC_A[7] ), 
    .F0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[7] ), 
    .F1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[9] ));
  coreInst_debugger_SLICE_1024 \coreInst/debugger/SLICE_1024 ( 
    .D1(\coreInst/N_460 ), .C1(\coreInst/REGB_DOUT[5] ), 
    .B1(\coreInst/debugger/N_967 ), .A1(\coreInst/PC_A[5] ), 
    .D0(\coreInst/N_460 ), .C0(\coreInst/PC_A[14] ), 
    .B0(\coreInst/REGB_DOUT[14] ), .A0(\coreInst/debugger/N_967 ), 
    .F0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[14] ), 
    .F1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[5] ));
  coreInst_debugger_SLICE_1025 \coreInst/debugger/SLICE_1025 ( 
    .D1(\coreInst/PC_A[12] ), .C1(\coreInst/REGB_DOUT[12] ), 
    .B1(\coreInst/debugger/N_967 ), .A1(\coreInst/N_460 ), 
    .D0(\coreInst/debugger/N_967 ), .C0(\coreInst/PC_A[15] ), 
    .B0(\coreInst/REGB_DOUT[15] ), .A0(\coreInst/N_460 ), 
    .F0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[15] ), 
    .F1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[12] ));
  coreInst_debugger_SLICE_1026 \coreInst/debugger/SLICE_1026 ( 
    .D1(\coreInst/PC_A[3] ), .C1(\coreInst/debugger/N_1002 ), 
    .B1(\coreInst/debugger/N_967 ), .A1(\coreInst/INSTRUCTION[3] ), 
    .D0(\coreInst/INSTRUCTION[0] ), .C0(\coreInst/debugger/N_1002 ), 
    .B0(\coreInst/debugger/N_967 ), .A0(\coreInst/PC_A[0] ), 
    .F0(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[0] ), 
    .F1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[3] ));
  mcuResourcesInst_SLICE_1027 \mcuResourcesInst/SLICE_1027 ( .D1(N_332), 
    .C1(\mcuResourcesInst/INTS_REG[4] ), .B1(\mcuResourcesInst/MASK_REG[4] ), 
    .A1(\mcuResourcesInst.memoryMapperInst.CPU_m7_e_1 ), 
    .C0(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[5] ), .B0(N_332), 
    .A0(\mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[5] ), 
    .F0(\mcuResourcesInst/N_15 ), 
    .F1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_bm_RNO[4] ));
  mcuResourcesInst_memoryMapperInst_SLICE_1028 
    \mcuResourcesInst/memoryMapperInst/SLICE_1028 ( 
    .D1(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .C1(\mcuResourcesInst/DIN_UART[10] ), .A1(\PIN_DIN_GPIO_c[10] ), 
    .D0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .C0(\PIN_DIN_GPIO_c[4] ), .A0(\mcuResourcesInst/DIN_UART[4] ), 
    .F0(\mcuResourcesInst/memoryMapperInst/N_49 ), 
    .F1(\mcuResourcesInst/memoryMapperInst/N_55 ));
  mcuResourcesInst_memoryMapperInst_SLICE_1029 
    \mcuResourcesInst/memoryMapperInst/SLICE_1029 ( 
    .D1(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .C1(\PIN_DIN_GPIO_c[3] ), .A1(\mcuResourcesInst/DIN_UART[3] ), 
    .D0(\mcuResourcesInst.memoryMapperInst.GPIO_MAP ), 
    .C0(\mcuResourcesInst/DIN_UART[5] ), .B0(\PIN_DIN_GPIO_c[5] ), 
    .F0(\mcuResourcesInst/memoryMapperInst/N_50 ), 
    .F1(\mcuResourcesInst/memoryMapperInst/N_48 ));
  SLICE_1030 SLICE_1030( .D1(\coreInst/DECODE ), .A1(PIN_RDN_c), 
    .C0(\mcuResourcesInst/memoryMapperInst/un1_RESET ), .B0(PIN_WRN1), 
    .A0(PIN_RDN_c), .F0(\mcuResourcesInst/BE0 ), 
    .F1(\coreInst/dinLatch/DOUT6 ));
  mcuResourcesInst_memoryMapperInst_SLICE_1031 
    \mcuResourcesInst/memoryMapperInst/SLICE_1031 ( .D1(N_160), 
    .C1(\mcuResourcesInst/memoryMapperInst/GPIO_MAP_8_0_sx ), .D0(N_160), 
    .C0(N_162), .B0(N_158), 
    .F0(\mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_3 ), 
    .F1(\mcuResourcesInst.memoryMapperInst.GPIO_MAP_8_0 ));
  coreInst_opxMultiplexerInst_SLICE_1032 
    \coreInst/opxMultiplexerInst/SLICE_1032 ( .C1(\coreInst/ALU_ALU_OPX[3] ), 
    .B1(\coreInst/DEBUG_MODE_rep1 ), .A1(\coreInst/GROUPX_0_rep1 ), 
    .D0(\coreInst/ALU_ALU_OPX[2] ), .C0(\coreInst/ALU_ALU_OPX[3] ), 
    .B0(\coreInst/GROUPX[0] ), .A0(\coreInst/PC_m3 ), .F0(\coreInst/N_1014 ), 
    .F1(\coreInst/opxMultiplexerInst/ALUB_m10_i_a4_0 ));
  coreInst_opxMultiplexerInst_SLICE_1033 
    \coreInst/opxMultiplexerInst/SLICE_1033 ( 
    .D1(\coreInst/opxMultiplexerInst/ALUB_SRCX_0_x_sx[1] ), 
    .C1(\coreInst/ALUB_SRCX_a3_1[1] ), .B1(\coreInst/ADDR_N_8 ), 
    .D0(\coreInst/PC_m3 ), .C0(\coreInst/ALU_ALU_OPX[0] ), 
    .B0(\coreInst/ADDR_N_8 ), .F0(\coreInst/opxMultiplexerInst/ALUB_N_15 ), 
    .F1(\coreInst/ALUB_SRCX_0_x[1] ));
  coreInst_SLICE_1034 \coreInst/SLICE_1034 ( .C1(\coreInst/INSTRUCTION[9] ), 
    .A1(\coreInst/GROUPX_0_rep1 ), .D0(\coreInst/INSTRUCTION[9] ), 
    .C0(\coreInst/INSTRUCTION[8] ), .B0(\coreInst/d_m8_0_o4_0 ), 
    .A0(\coreInst/ALUB_SRCX_ss0_i_0_i ), .M1(\CPU_DIN[6] ), .M0(\CPU_DIN[5] ), 
    .CE(\coreInst/EXECUTE ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/opxMultiplexerInst/ALUB_SRCX_0_2_N_3L3 ), 
    .Q0(\coreInst/INSTRUCTION[5] ), .F1(\coreInst/N_598 ), 
    .Q1(\coreInst/INSTRUCTION[6] ));
  coreInst_SLICE_1035 \coreInst/SLICE_1035 ( .D1(\coreInst/PC_A[1] ), 
    .C1(\coreInst/debugger/N_967 ), .B1(\coreInst/INSTRUCTION[1] ), 
    .A1(\coreInst/debugger/N_1002 ), .D0(\coreInst/PC_A[1] ), 
    .C0(\coreInst/programCounterInst/N_977 ), .B0(\coreInst/ALUB_DATA[1] ), 
    .A0(\coreInst/programCounterInst/N_446 ), 
    .F0(\coreInst/programCounterInst/ARGB[1] ), 
    .F1(\coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[1] ));
  coreInst_SLICE_1036 \coreInst/SLICE_1036 ( .D1(N_459), 
    .C1(\coreInst/un1_HERE[2] ), .B1(\coreInst/N_444 ), 
    .A1(\coreInst/ALU_R[2] ), .D0(\coreInst/PC_A[2] ), .C0(\coreInst/N_476 ), 
    .B0(\coreInst/N_437 ), .A0(\coreInst/N_444 ), 
    .F0(\coreInst/programCounterInst/N_630 ), 
    .F1(\coreInst/registerFileInst/DINA_3_i_0[2] ));
  coreInst_SLICE_1037 \coreInst/SLICE_1037 ( .D1(\coreInst/N_696 ), 
    .C1(\coreInst/CCL_ENRX ), .B1(\coreInst/FETCH ), .A1(N_459), 
    .B0(\coreInst/PC_ENX ), .A0(\coreInst/FETCH ), 
    .F0(\coreInst/programCounterInst/HERE11 ), 
    .F1(\coreInst/fullALUInst/ccRegs/CC_RUN_REG_0_sqmuxa ));
  coreInst_SLICE_1038 \coreInst/SLICE_1038 ( .B1(\coreInst/FETCH ), 
    .A1(\coreInst/EXECUTE ), .C0(\coreInst/PC_LD_INT0X ), 
    .B0(\coreInst/FETCH ), .F0(\coreInst/programCounterInst/INTR05 ), 
    .F1(\coreInst/busControllerInst/sequencer/N_1010_i ));
  coreInst_SLICE_1039 \coreInst/SLICE_1039 ( .D1(\coreInst/N_134 ), 
    .C1(\coreInst/N_35 ), .B1(\coreInst/ALUB_DATA[0] ), .A1(\coreInst/N_67 ), 
    .D0(\coreInst/programCounterInst/N_977 ), .A0(\coreInst/N_35 ), 
    .F0(\coreInst/programCounterInst/N_631 ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp_1[5] ));
  coreInst_SLICE_1040 \coreInst/SLICE_1040 ( .D1(\coreInst/REGA_DINX[0] ), 
    .C1(\coreInst/N_964 ), .D0(\coreInst/REGA_DOUT[10] ), 
    .C0(\coreInst/N_964 ), .B0(N_447), .A0(\coreInst/REGA_DOUT[2] ), 
    .F0(\coreInst.busControllerInst.DOUT_BUF_i_0[10] ), 
    .F1(\coreInst/registerFileInst/N_986 ));
  coreInst_registerFileInst_SLICE_1041 \coreInst/registerFileInst/SLICE_1041 
    ( .C1(\CPU_DIN[6] ), .A1(\coreInst/registerFileInst/N_456 ), 
    .D0(\CPU_DIN[3] ), .A0(\coreInst/registerFileInst/N_456 ), 
    .F0(\coreInst/registerFileInst/N_667 ), 
    .F1(\coreInst/registerFileInst/N_655 ));
  coreInst_registerFileInst_SLICE_1042 \coreInst/registerFileInst/SLICE_1042 
    ( .C1(\coreInst/registerFileInst/N_456 ), .B1(\CPU_DIN[5] ), 
    .D0(\CPU_DIN[4] ), .C0(\coreInst/registerFileInst/N_456 ), 
    .F0(\coreInst/registerFileInst/N_663 ), 
    .F1(\coreInst/registerFileInst/N_659 ));
  coreInst_registerFileInst_SLICE_1043 \coreInst/registerFileInst/SLICE_1043 
    ( .D1(\coreInst/DEBUG_MODE ), .C1(\coreInst/INSTRUCTION[1] ), 
    .B1(\coreInst/registerFileInst/ADDRB_0_1[1] ), 
    .A1(\coreInst/registerFileInst/N_1018 ), 
    .D0(\coreInst/registerFileInst/ADDRB_i_0[0] ), 
    .B0(\coreInst/INSTRUCTION[0] ), .A0(\coreInst/registerFileInst/N_1018 ), 
    .F0(\coreInst/registerFileInst/N_378_i ), 
    .F1(\coreInst/registerFileInst/ADDRB[1] ));
  coreInst_SLICE_1044 \coreInst/SLICE_1044 ( .D1(\coreInst/N_985 ), 
    .C1(\coreInst/ARGB_X[0] ), .B1(\coreInst/fullALUInst/N_44_0 ), 
    .A1(\coreInst/ALUB_DATA[0] ), .D0(\coreInst/N_985 ), .C0(\coreInst/N_487 ), 
    .A0(\coreInst/REGB_ADDRX[0] ), .F0(\coreInst/registerFileInst/ADDRB[2] ), 
    .F1(\coreInst/fullALUInst/aluInst/un10_RESULT_axb_0 ));
  coreInst_fullALUInst_aluInst_SLICE_1045 
    \coreInst/fullALUInst/aluInst/SLICE_1045 ( .D1(\coreInst/ALU_OPX[1] ), 
    .C1(\coreInst/ALU_OPX_i_1[0] ), .B1(\coreInst/N_171 ), 
    .A1(\coreInst/ALU_OPX[3] ), .D0(\coreInst/fullALUInst/aluInst/N_211 ), 
    .C0(\coreInst/ALU_OPX[3] ), .A0(\coreInst/fullALUInst/aluInst/N_227 ), 
    .F0(\coreInst/N_294 ), .F1(\coreInst/fullALUInst/aluInst/PARITY_sn_N_2 ));
  coreInst_fullALUInst_aluInst_SLICE_1046 
    \coreInst/fullALUInst/aluInst/SLICE_1046 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[4] ), 
    .C1(\coreInst/fullALUInst/ALUA_DATA[3] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[4] ), .C0(\coreInst/N_37 ), 
    .A0(\coreInst/N_134 ), .F0(\coreInst/fullALUInst/aluInst/RESULT_7[4] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_5_3 ));
  coreInst_SLICE_1047 \coreInst/SLICE_1047 ( 
    .C1(\coreInst/fullALUInst/ALUA_DATA[14] ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[15] ), .A1(\coreInst/ALUB_DATA[0] ), 
    .D0(\coreInst/ALU_R[15] ), .C0(\coreInst/N_134 ), 
    .B0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .A0(\coreInst/fullALUInst/N_48 ), 
    .M1(\coreInst/debugger/requestGen/modeReqReg/Q_R[0] ), 
    .M0(\coreInst/debugger/requestGen/modeReqReg/Q_PHI0[0] ), 
    .LSR(\coreInst/debugger/requestGen/Q_R10 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/fullALUInst/aluInst/OVFL ), .Q0(\coreInst/DEBUG_MODE_REQ ), 
    .F1(\coreInst/fullALUInst/aluInst/N_16_2 ), 
    .Q1(\coreInst/debugger/requestGen/modeReqReg/Q_PHI0[0] ));
  coreInst_SLICE_1048 \coreInst/SLICE_1048 ( 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI8T841[9] ), 
    .C1(\coreInst/RESULT_sn_N_9 ), .B1(\coreInst/fullALUInst/aluInst/N_295 ), 
    .A1(\coreInst/N_976 ), .C0(\coreInst/fullALUInst/aluInst/N_274 ), 
    .B0(\coreInst/RESULT_sn_N_9 ), .A0(\coreInst/fullALUInst/aluInst/N_291 ), 
    .M0(\CPU_DIN[13] ), .CE(\coreInst/dinLatch/DOUT6 ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/ALU_R[5] ), .Q0(\coreInst/DIN_LATCHED[13] ), 
    .F1(\coreInst/RESULT_13_RNIR8583[9] ));
  coreInst_fullALUInst_aluInst_SLICE_1049 
    \coreInst/fullALUInst/aluInst/SLICE_1049 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_251 ), .C1(\coreInst/RESULT109_1 ), 
    .A1(\coreInst/fullALUInst/aluInst/N_235 ), 
    .D0(\coreInst/fullALUInst/aluInst/N_242 ), .C0(\coreInst/RESULT109_1 ), 
    .B0(\coreInst/fullALUInst/aluInst/N_258 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_276 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_269 ));
  coreInst_fullALUInst_aluInst_SLICE_1050 
    \coreInst/fullALUInst/aluInst/SLICE_1050 ( 
    .C1(\coreInst/fullALUInst/aluInst/un3_tmp[13] ), 
    .B1(\coreInst/fullALUInst/aluInst/un3_tmp[12] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[13] ), 
    .C0(\coreInst/fullALUInst/aluInst/un3_tmp[13] ), 
    .B0(\coreInst/ALU_OPX[3] ), 
    .A0(\coreInst.fullALUInst.aluInst.un21_RESULT[13] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_134_0 ), 
    .F1(\coreInst/fullALUInst/aluInst/tmp_3_7[13] ));
  coreInst_fullALUInst_aluInst_SLICE_1051 
    \coreInst/fullALUInst/aluInst/SLICE_1051 ( 
    .D1(\coreInst/fullALUInst/aluInst/un1_RESULT[3] ), 
    .C1(\coreInst/ALUB_DATA[3] ), .B1(\coreInst/ALU_OPX_i_1[0] ), 
    .C0(\coreInst/ALUB_DATA[3] ), .B0(\coreInst/fullALUInst/aluInst/OVER_0 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_41_0 ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_10[8] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_70 ));
  coreInst_fullALUInst_aluInst_SLICE_1052 
    \coreInst/fullALUInst/aluInst/SLICE_1052 ( 
    .D1(\coreInst/fullALUInst/aluInst/un7_sex_1[0] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_38_2 ), 
    .D0(\coreInst/fullALUInst/aluInst/N_42_2 ), 
    .B0(\coreInst/fullALUInst/aluInst/un7_sex_1[0] ), 
    .F0(\coreInst/fullALUInst/aluInst/un38_RESULT_98_0 ), 
    .F1(\coreInst/fullALUInst/aluInst/un38_RESULT_94_0 ));
  coreInst_fullALUInst_aluInst_SLICE_1053 
    \coreInst/fullALUInst/aluInst/SLICE_1053 ( 
    .C1(\coreInst/fullALUInst/aluInst/N_8_0 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_6_0 ), .A1(\coreInst/ALUB_DATA[1] ), 
    .D0(\coreInst/fullALUInst/ALUA_DATA[15] ), 
    .C0(\coreInst/fullALUInst/aluInst/N_14_0 ), 
    .B0(\coreInst/fullALUInst/ALUB_DATA[2] ), .A0(\coreInst/ALUB_DATA[1] ), 
    .F0(\coreInst/fullALUInst/aluInst/N_46_1 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_22_0 ));
  coreInst_fullALUInst_aluInst_SLICE_1054 
    \coreInst/fullALUInst/aluInst/SLICE_1054 ( .C1(\coreInst/N_134 ), 
    .B1(\coreInst/N_40 ), .A1(\coreInst/fullALUInst/ALUA_DATA[7] ), 
    .D0(\coreInst/fullALUInst/N_45 ), .C0(\coreInst/N_134 ), 
    .A0(\coreInst/fullALUInst/ALUA_DATA[12] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_7[12] ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_7[7] ));
  coreInst_fullALUInst_aluInst_SLICE_1055 
    \coreInst/fullALUInst/aluInst/SLICE_1055 ( 
    .D1(\coreInst/fullALUInst/aluInst/N_8 ), 
    .C1(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .B1(\coreInst/fullALUInst/aluInst/N_10 ), 
    .C0(\coreInst/fullALUInst/aluInst/un47_RESULT[1] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_16 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_14 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_32 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_26 ));
  coreInst_SLICE_1056 \coreInst/SLICE_1056 ( 
    .D1(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[30] ), 
    .C1(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[30] ), 
    .A1(\coreInst/madd_14[15] ), 
    .C0(\coreInst/fullALUInst/aluInst/un21_RESULT_s0[19] ), 
    .B0(\coreInst/fullALUInst/aluInst/un21_RESULT_s1[19] ), 
    .A0(\coreInst/madd_14[15] ), .M0(\PIN_DEBUG_DATA_in[2] ), 
    .CE(\coreInst/debugger/EN_MODE ), .LSR(PIN_RESETN_c), 
    .CLK(PIN_DEBUG_WRN_c), .F0(\coreInst/fullALUInst/aluInst/PARITY_2_1_RNO ), 
    .Q0(\coreInst/debugger/modeReg/Q_R[2] ), 
    .F1(\coreInst/fullALUInst/aluInst/madd_cry_15_s1_0_RNI0P3P ));
  coreInst_debugger_SLICE_1057 \coreInst/debugger/SLICE_1057 ( 
    .D1(\coreInst/DEBUG_ADDR_INC_EN ), .B1(\coreInst/debugger/addrL/PL ), 
    .D0(\coreInst/DEBUG_ADDR_INC_EN ), .C0(\coreInst/debugger/AL_RO ), 
    .A0(\coreInst/debugger/addrH/PL ), .M1(\coreInst/debugger/addrH/PL_R ), 
    .M0(\coreInst/debugger/addrH/PL_PHI0 ), .LSR(PIN_RESETN_c), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/debugger/addrH/Qe ), 
    .Q0(\coreInst/debugger/addrH/PL ), .F1(\coreInst/debugger/addrL/Qe ), 
    .Q1(\coreInst/debugger/addrH/PL_PHI0 ));
  coreInst_debugger_SLICE_1058 \coreInst/debugger/SLICE_1058 ( 
    .C1(\coreInst/debugger/EN_DH ), 
    .B1(\coreInst/debugger/DEBUG_READ_MUX_IN_L[6] ), 
    .A1(\coreInst/debugger/DEBUG_READ_MUX_IN_H[6] ), 
    .D0(\coreInst/debugger/DEBUG_READ_MUX_IN_H[0] ), 
    .C0(\coreInst/debugger/EN_DH ), 
    .A0(\coreInst/debugger/DEBUG_READ_MUX_IN_L[0] ), .F0(\DEBUG_DOUT[0] ), 
    .F1(\DEBUG_DOUT[6] ));
  coreInst_debugger_SLICE_1059 \coreInst/debugger/SLICE_1059 ( 
    .C1(\coreInst/debugger/DEBUG_READ_MUX_IN_H[5] ), 
    .B1(\coreInst/debugger/DEBUG_READ_MUX_IN_L[5] ), 
    .A1(\coreInst/debugger/EN_DH ), 
    .D0(\coreInst/debugger/DEBUG_READ_MUX_IN_L[1] ), 
    .B0(\coreInst/debugger/DEBUG_READ_MUX_IN_H[1] ), 
    .A0(\coreInst/debugger/EN_DH ), .F0(\DEBUG_DOUT[1] ), .F1(\DEBUG_DOUT[5] ));
  coreInst_debugger_SLICE_1060 \coreInst/debugger/SLICE_1060 ( 
    .D1(\coreInst/debugger/DEBUG_READ_MUX_IN_L[4] ), 
    .C1(\coreInst/debugger/DEBUG_READ_MUX_IN_H[4] ), 
    .A1(\coreInst/debugger/EN_DH ), 
    .D0(\coreInst/debugger/DEBUG_READ_MUX_IN_H[2] ), 
    .B0(\coreInst/debugger/DEBUG_READ_MUX_IN_L[2] ), 
    .A0(\coreInst/debugger/EN_DH ), .F0(\DEBUG_DOUT[2] ), .F1(\DEBUG_DOUT[4] ));
  coreInst_SLICE_1061 \coreInst/SLICE_1061 ( 
    .C1(\coreInst/instructionPhaseDecoderInst/PHASE_R[1] ), 
    .B1(\coreInst/DEBUG_STOP ), 
    .A1(\coreInst/instructionPhaseDecoderInst/PHASE_R[0] ), 
    .C0(\coreInst/instructionPhaseDecoderInst/RESET_R ), .B0(\coreInst/HALTX ), 
    .M1(\coreInst/DEBUG_OP[1] ), .M0(\coreInst/DEBUG_OP[0] ), 
    .CE(\coreInst/EXECUTE ), .CLK(PIN_CLK_X1_c), 
    .F0(\coreInst/instructionPhaseDecoderInst/N_117 ), 
    .Q0(\coreInst/DEBUG_OPX[0] ), 
    .F1(\coreInst/instructionPhaseDecoderInst/N_714 ), 
    .Q1(\coreInst/DEBUG_OPX[1] ));
  coreInst_fullALUInst_aluInst_SLICE_1062 
    \coreInst/fullALUInst/aluInst/SLICE_1062 ( 
    .C1(\coreInst/fullALUInst/aluInst/N_57 ), 
    .B1(\coreInst/fullALUInst/aluInst/OVER_i ), 
    .D0(\coreInst/fullALUInst/aluInst/un47_RESULT[8] ), 
    .A0(\coreInst/fullALUInst/aluInst/un47_RESULT[9] ), 
    .F0(\coreInst/fullALUInst/aluInst/OVER_i_1_a2_2 ), 
    .F1(\coreInst/fullALUInst/aluInst/un53_RESULT[8] ));
  SLICE_1063 SLICE_1063( .D1(N_314), .C0(N_322), .B0(N_320), 
    .A0(\mcuResourcesInst/memoryMapperInst/INT_MAP_11_1_sx ), 
    .F0(\mcuResourcesInst/memoryMapperInst/INT_MAP_11_1_x ), .F1(N_314_i));
  coreInst_SLICE_1064 \coreInst/SLICE_1064 ( 
    .D1(\coreInst/fullALUInst/aluInst/un3_tmp_5_0_1 ), 
    .A1(\coreInst/fullALUInst/aluInst/un3_tmp_14[0] ), 
    .D0(\coreInst/ALUB_DATA[10] ), .C0(\coreInst/ALUB_DATA[9] ), 
    .B0(\coreInst/ALUB_DATA[11] ), .A0(\coreInst/ALUB_DATA[12] ), 
    .M0(\PIN_DEBUG_DATA_in[7] ), .CE(\coreInst/debugger/EN_AL ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .F0(\coreInst/fullALUInst/aluInst/OVER_2_7 ), 
    .Q0(\coreInst/debugger/addrL/Q_R[6] ), 
    .F1(\coreInst/fullALUInst/aluInst/un3_tmp[5] ));
  coreInst_fullALUInst_aluInst_SLICE_1065 
    \coreInst/fullALUInst/aluInst/SLICE_1065 ( 
    .D1(\coreInst/fullALUInst/ALUA_DATA[1] ), .C1(\coreInst/ALUB_DATA[0] ), 
    .A1(\coreInst/fullALUInst/ALUA_DATA[0] ), 
    .C0(\coreInst/fullALUInst/aluInst/un47_RESULT[2] ), 
    .B0(\coreInst/fullALUInst/aluInst/N_21 ), 
    .A0(\coreInst/fullALUInst/aluInst/N_17 ), 
    .F0(\coreInst/fullALUInst/aluInst/N_37_0 ), 
    .F1(\coreInst/fullALUInst/aluInst/N_2_2 ));
  coreInst_SLICE_1066 \coreInst/SLICE_1066 ( .D1(\coreInst/DEBUG_OPX[2] ), 
    .C1(\coreInst/GROUPX[1] ), .B1(\coreInst/DEBUG_OPX_fast[1] ), 
    .A1(\coreInst/DEBUG_OPX_fast[3] ), .D0(\coreInst/N_171 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_178 ), 
    .A0(\coreInst.fullALUInst.aluInst.N_129 ), 
    .M1(\coreInst/debugger/modeReg/Q_PHI0[2] ), 
    .M0(\coreInst/debugger/modeReg/Q_PHI0[1] ), .LSR(PIN_RESETN_c), 
    .CLK(PIN_CLK_X1_c), .F0(\coreInst/fullALUInst/aluInst/N_243 ), 
    .Q0(\coreInst/DEBUG_MODE ), 
    .F1(\coreInst/debugger/dataR/DEBUG_DATA_MUX_OUT_6_i_0[15] ), 
    .Q1(\coreInst.debugger.DEBUG_RESET ));
  coreInst_fullALUInst_SLICE_1067 \coreInst/fullALUInst/SLICE_1067 ( 
    .C1(\coreInst/fullALUInst/aluInst/N_40_2 ), 
    .B1(\coreInst/fullALUInst/aluInst/N_48_2 ), .A1(\coreInst/ALUB_DATA[3] ), 
    .D0(\coreInst/ALUB_N_14 ), .C0(\coreInst/N_487 ), .A0(\coreInst/N_513 ), 
    .F0(\coreInst/fullALUInst/muxB/ALUB_DATA_6_RNO[3] ), 
    .F1(\coreInst/fullALUInst/aluInst/N_65_0 ));
  coreInst_fullALUInst_aluInst_SLICE_1068 
    \coreInst/fullALUInst/aluInst/SLICE_1068 ( .C1(\coreInst/N_134 ), 
    .B1(\coreInst/fullALUInst/ALUA_DATA[11] ), 
    .A1(\coreInst/fullALUInst/N_44 ), .C0(\coreInst/fullALUInst/ALUA_DATA[9] ), 
    .B0(\coreInst/ALUB_DATA_0[8] ), .A0(\coreInst/ALUB_DATA_0[9] ), 
    .F0(\coreInst/fullALUInst/aluInst/RESULT_7[9] ), 
    .F1(\coreInst/fullALUInst/aluInst/RESULT_7[11] ));
  coreInst_SLICE_1069 \coreInst/SLICE_1069 ( .D1(\coreInst/LDS_BYTEX ), 
    .C1(\coreInst/busControllerInst/N_430 ), 
    .B1(\coreInst/busControllerInst/ADDR_BUF_i_o2_1[0] ), 
    .A1(\coreInst/busControllerInst/ADDR_BUSX_R[2] ), 
    .D0(\coreInst/fullALUInst/aluInst/N_296 ), 
    .C0(\coreInst/fullALUInst/aluInst/N_279 ), .B0(\coreInst/RESULT_sn_N_9 ), 
    .M0(\PIN_DEBUG_DATA_in[3] ), .CE(\coreInst/debugger/EN_MODE ), 
    .LSR(\coreInst/debugger/requestGen/Q_R10 ), .CLK(PIN_DEBUG_WRN_c), 
    .F0(\coreInst.ALU_R[10] ), 
    .Q0(\coreInst/debugger/requestGen/modeReqReg/Q_R[0] ), 
    .F1(\coreInst/N_440 ));
  PIN_DEBUG_DATA_0_ \PIN_DEBUG_DATA[0]_I ( .PADDI(\PIN_DEBUG_DATA_in[0] ), 
    .PADDT(PIN_DEBUG_RDN_c), .PADDO(\DEBUG_DOUT[0] ), 
    .PINDEBUGDATA0(PIN_DEBUG_DATA[0]));
  PIN_DEBUG_DATA_0__MGIOL \PIN_DEBUG_DATA[0]_MGIOL ( 
    .DI(\PIN_DEBUG_DATA_in[0] ), .CE(\coreInst.debugger.EN_AH ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .IN(\coreInst.debugger.addrH.Q_R[0] ));
  PIN_WR0N PIN_WR0N_I( .PADDO(GND), .PIN_WR0N(PIN_WR0N));
  PIN_STOPPEDN PIN_STOPPEDN_I( .IOLDO(PIN_STOPPEDN_c), 
    .PIN_STOPPEDN(PIN_STOPPEDN));
  PIN_STOPPEDN_MGIOL PIN_STOPPEDN_MGIOL( .IOLDO(PIN_STOPPEDN_c), 
    .OPOS(\coreInst.instructionPhaseDecoderInst.STOPPED_2_i ), 
    .CLK(PIN_CLK_X1_c));
  PIN_CLK_X1 PIN_CLK_X1_I( .PADDI(PIN_CLK_X1_c), .PIN_CLK_X1(PIN_CLK_X1));
  PIN_ADDR_GPIO PIN_ADDR_GPIO_I( .PADDO(N_332_i), 
    .PIN_ADDR_GPIO(PIN_ADDR_GPIO));
  PIN_WRN_GPIO PIN_WRN_GPIO_I( .PADDO(WR_GPIO_i), .PIN_WRN_GPIO(PIN_WRN_GPIO));
  PIN_RDN_GPIO PIN_RDN_GPIO_I( .PADDO(RD_GPIO_i), .PIN_RDN_GPIO(PIN_RDN_GPIO));
  PIN_DIN_GPIO_15_ \PIN_DIN_GPIO[15]_I ( .PADDI(\PIN_DIN_GPIO_c[15] ), 
    .PINDINGPIO15(PIN_DIN_GPIO[15]));
  PIN_DIN_GPIO_14_ \PIN_DIN_GPIO[14]_I ( .PADDI(\PIN_DIN_GPIO_c[14] ), 
    .PINDINGPIO14(PIN_DIN_GPIO[14]));
  PIN_DIN_GPIO_13_ \PIN_DIN_GPIO[13]_I ( .PADDI(\PIN_DIN_GPIO_c[13] ), 
    .PINDINGPIO13(PIN_DIN_GPIO[13]));
  PIN_DIN_GPIO_12_ \PIN_DIN_GPIO[12]_I ( .PADDI(\PIN_DIN_GPIO_c[12] ), 
    .PINDINGPIO12(PIN_DIN_GPIO[12]));
  PIN_DIN_GPIO_11_ \PIN_DIN_GPIO[11]_I ( .PADDI(\PIN_DIN_GPIO_c[11] ), 
    .PINDINGPIO11(PIN_DIN_GPIO[11]));
  PIN_DIN_GPIO_10_ \PIN_DIN_GPIO[10]_I ( .PADDI(\PIN_DIN_GPIO_c[10] ), 
    .PINDINGPIO10(PIN_DIN_GPIO[10]));
  PIN_DIN_GPIO_9_ \PIN_DIN_GPIO[9]_I ( .PADDI(\PIN_DIN_GPIO_c[9] ), 
    .PINDINGPIO9(PIN_DIN_GPIO[9]));
  PIN_DIN_GPIO_8_ \PIN_DIN_GPIO[8]_I ( .PADDI(\PIN_DIN_GPIO_c[8] ), 
    .PINDINGPIO8(PIN_DIN_GPIO[8]));
  PIN_DIN_GPIO_7_ \PIN_DIN_GPIO[7]_I ( .PADDI(\PIN_DIN_GPIO_c[7] ), 
    .PINDINGPIO7(PIN_DIN_GPIO[7]));
  PIN_DIN_GPIO_6_ \PIN_DIN_GPIO[6]_I ( .PADDI(\PIN_DIN_GPIO_c[6] ), 
    .PINDINGPIO6(PIN_DIN_GPIO[6]));
  PIN_DIN_GPIO_5_ \PIN_DIN_GPIO[5]_I ( .PADDI(\PIN_DIN_GPIO_c[5] ), 
    .PINDINGPIO5(PIN_DIN_GPIO[5]));
  PIN_DIN_GPIO_4_ \PIN_DIN_GPIO[4]_I ( .PADDI(\PIN_DIN_GPIO_c[4] ), 
    .PINDINGPIO4(PIN_DIN_GPIO[4]));
  PIN_DIN_GPIO_3_ \PIN_DIN_GPIO[3]_I ( .PADDI(\PIN_DIN_GPIO_c[3] ), 
    .PINDINGPIO3(PIN_DIN_GPIO[3]));
  PIN_DIN_GPIO_2_ \PIN_DIN_GPIO[2]_I ( .PADDI(\PIN_DIN_GPIO_c[2] ), 
    .PINDINGPIO2(PIN_DIN_GPIO[2]));
  PIN_DIN_GPIO_1_ \PIN_DIN_GPIO[1]_I ( .PADDI(\PIN_DIN_GPIO_c[1] ), 
    .PINDINGPIO1(PIN_DIN_GPIO[1]));
  PIN_DIN_GPIO_0_ \PIN_DIN_GPIO[0]_I ( .PADDI(\PIN_DIN_GPIO_c[0] ), 
    .PINDINGPIO0(PIN_DIN_GPIO[0]));
  PIN_DEBUG_STOP PIN_DEBUG_STOP_I( .PADDO(GND), 
    .PIN_DEBUG_STOP(PIN_DEBUG_STOP));
  PIN_DEBUG_ADDR_2_ \PIN_DEBUG_ADDR[2]_I ( .PADDI(\PIN_DEBUG_ADDR_c[2] ), 
    .PINDEBUGADDR2(PIN_DEBUG_ADDR[2]));
  PIN_DEBUG_ADDR_1_ \PIN_DEBUG_ADDR[1]_I ( .PADDI(\PIN_DEBUG_ADDR_c[1] ), 
    .PINDEBUGADDR1(PIN_DEBUG_ADDR[1]));
  PIN_DEBUG_ADDR_0_ \PIN_DEBUG_ADDR[0]_I ( .PADDI(\PIN_DEBUG_ADDR_c[0] ), 
    .PINDEBUGADDR0(PIN_DEBUG_ADDR[0]));
  PIN_DEBUG_RDN PIN_DEBUG_RDN_I( .PADDI(PIN_DEBUG_RDN_c), 
    .PIN_DEBUG_RDN(PIN_DEBUG_RDN));
  PIN_DEBUG_WRN PIN_DEBUG_WRN_I( .PADDI(PIN_DEBUG_WRN_c), 
    .PIN_DEBUG_WRN(PIN_DEBUG_WRN));
  PIN_DEBUG_DATA_7_ \PIN_DEBUG_DATA[7]_I ( .PADDI(\PIN_DEBUG_DATA_in[7] ), 
    .PADDT(PIN_DEBUG_RDN_c), .PADDO(\DEBUG_DOUT[7] ), 
    .PINDEBUGDATA7(PIN_DEBUG_DATA[7]));
  PIN_DEBUG_DATA_7__MGIOL \PIN_DEBUG_DATA[7]_MGIOL ( 
    .DI(\PIN_DEBUG_DATA_in[7] ), .CE(\coreInst.debugger.EN_AH ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .IN(\coreInst.debugger.addrH.Q_R[7] ));
  PIN_DEBUG_DATA_6_ \PIN_DEBUG_DATA[6]_I ( .PADDI(\PIN_DEBUG_DATA_in[6] ), 
    .PADDT(PIN_DEBUG_RDN_c), .PADDO(\DEBUG_DOUT[6] ), 
    .PINDEBUGDATA6(PIN_DEBUG_DATA[6]));
  PIN_DEBUG_DATA_6__MGIOL \PIN_DEBUG_DATA[6]_MGIOL ( 
    .DI(\PIN_DEBUG_DATA_in[6] ), .CE(\coreInst.debugger.EN_AH ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .IN(\coreInst.debugger.addrH.Q_R[6] ));
  PIN_DEBUG_DATA_5_ \PIN_DEBUG_DATA[5]_I ( .PADDI(\PIN_DEBUG_DATA_in[5] ), 
    .PADDT(PIN_DEBUG_RDN_c), .PADDO(\DEBUG_DOUT[5] ), 
    .PINDEBUGDATA5(PIN_DEBUG_DATA[5]));
  PIN_DEBUG_DATA_5__MGIOL \PIN_DEBUG_DATA[5]_MGIOL ( 
    .DI(\PIN_DEBUG_DATA_in[5] ), .CE(\coreInst.debugger.EN_AH ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .IN(\coreInst.debugger.addrH.Q_R[5] ));
  PIN_DEBUG_DATA_4_ \PIN_DEBUG_DATA[4]_I ( .PADDI(\PIN_DEBUG_DATA_in[4] ), 
    .PADDT(PIN_DEBUG_RDN_c), .PADDO(\DEBUG_DOUT[4] ), 
    .PINDEBUGDATA4(PIN_DEBUG_DATA[4]));
  PIN_DEBUG_DATA_4__MGIOL \PIN_DEBUG_DATA[4]_MGIOL ( 
    .DI(\PIN_DEBUG_DATA_in[4] ), .CE(\coreInst.debugger.EN_AH ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .IN(\coreInst.debugger.addrH.Q_R[4] ));
  PIN_DEBUG_DATA_3_ \PIN_DEBUG_DATA[3]_I ( .PADDI(\PIN_DEBUG_DATA_in[3] ), 
    .PADDT(PIN_DEBUG_RDN_c), .PADDO(\DEBUG_DOUT[3] ), 
    .PINDEBUGDATA3(PIN_DEBUG_DATA[3]));
  PIN_DEBUG_DATA_3__MGIOL \PIN_DEBUG_DATA[3]_MGIOL ( 
    .DI(\PIN_DEBUG_DATA_in[3] ), .CE(\coreInst.debugger.EN_AH ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .IN(\coreInst.debugger.addrH.Q_R[3] ));
  PIN_DEBUG_DATA_2_ \PIN_DEBUG_DATA[2]_I ( .PADDI(\PIN_DEBUG_DATA_in[2] ), 
    .PADDT(PIN_DEBUG_RDN_c), .PADDO(\DEBUG_DOUT[2] ), 
    .PINDEBUGDATA2(PIN_DEBUG_DATA[2]));
  PIN_DEBUG_DATA_2__MGIOL \PIN_DEBUG_DATA[2]_MGIOL ( 
    .DI(\PIN_DEBUG_DATA_in[2] ), .CE(\coreInst.debugger.EN_AH ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .IN(\coreInst.debugger.addrH.Q_R[2] ));
  PIN_DEBUG_DATA_1_ \PIN_DEBUG_DATA[1]_I ( .PADDI(\PIN_DEBUG_DATA_in[1] ), 
    .PADDT(PIN_DEBUG_RDN_c), .PADDO(\DEBUG_DOUT[1] ), 
    .PINDEBUGDATA1(PIN_DEBUG_DATA[1]));
  PIN_DEBUG_DATA_1__MGIOL \PIN_DEBUG_DATA[1]_MGIOL ( 
    .DI(\PIN_DEBUG_DATA_in[1] ), .CE(\coreInst.debugger.EN_AH ), 
    .LSR(PIN_RESETN_c), .CLK(PIN_DEBUG_WRN_c), 
    .IN(\coreInst.debugger.addrH.Q_R[1] ));
  PIN_LED_7_ \PIN_LED[7]_I ( .PADDO(GND), .PINLED7(PIN_LED[7]));
  PIN_LED_6_ \PIN_LED[6]_I ( .PADDO(GND), .PINLED6(PIN_LED[6]));
  PIN_LED_5_ \PIN_LED[5]_I ( .PADDO(GND), .PINLED5(PIN_LED[5]));
  PIN_LED_4_ \PIN_LED[4]_I ( .PADDO(GND), .PINLED4(PIN_LED[4]));
  PIN_LED_3_ \PIN_LED[3]_I ( .PADDO(GND), .PINLED3(PIN_LED[3]));
  PIN_LED_2_ \PIN_LED[2]_I ( .PADDO(GND), .PINLED2(PIN_LED[2]));
  PIN_LED_1_ \PIN_LED[1]_I ( .PADDO(GND), .PINLED1(PIN_LED[1]));
  PIN_LED_0_ \PIN_LED[0]_I ( .PADDO(GND), .PINLED0(PIN_LED[0]));
  PIN_TXD PIN_TXD_I( .IOLDO(PIN_TXD_c), .PIN_TXD(PIN_TXD));
  PIN_TXD_MGIOL PIN_TXD_MGIOL( .IOLDO(PIN_TXD_c), 
    .OPOS(\mcuResourcesInst.UARTInst.uartTxInst.o_TX_Serial_3_iv_i ), 
    .CLK(PIN_CLK_X1_c));
  PIN_RXD PIN_RXD_I( .PADDI(PIN_RXD_c), .PIN_RXD(PIN_RXD));
  PIN_RXD_MGIOL PIN_RXD_MGIOL( .DI(PIN_RXD_c), .CE(\mcuResourcesInst.N_167 ), 
    .CLK(PIN_CLK_X1_c), .IN(\mcuResourcesInst.UARTInst.RX_BYTE[7] ));
  PIN_WR1N PIN_WR1N_I( .PADDO(GND), .PIN_WR1N(PIN_WR1N));
  PIN_RDN PIN_RDN_I( .PADDO(PIN_RDN_c), .PIN_RDN(PIN_RDN));
  PIN_INT6 PIN_INT6_I( .PADDI(PIN_INT6_c), .PIN_INT6(PIN_INT6));
  PIN_INT5 PIN_INT5_I( .PADDI(PIN_INT5_c), .PIN_INT5(PIN_INT5));
  PIN_INT4 PIN_INT4_I( .PADDI(PIN_INT4_c), .PIN_INT4(PIN_INT4));
  PIN_INT3 PIN_INT3_I( .PADDI(PIN_INT3_c), .PIN_INT3(PIN_INT3));
  PIN_INT2 PIN_INT2_I( .PADDI(PIN_INT2_c), .PIN_INT2(PIN_INT2));
  PIN_INT1 PIN_INT1_I( .PADDI(PIN_INT1_c), .PIN_INT1(PIN_INT1));
  PIN_INT0 PIN_INT0_I( .PADDI(PIN_INT0_c), .PIN_INT0(PIN_INT0));
  PIN_DATA_BUS_15_ \PIN_DATA_BUS[15]_I ( .PADDO(N_183_i), 
    .PINDATABUS15(PIN_DATA_BUS[15]));
  PIN_DATA_BUS_14_ \PIN_DATA_BUS[14]_I ( .PADDO(N_185_i), 
    .PINDATABUS14(PIN_DATA_BUS[14]));
  PIN_DATA_BUS_13_ \PIN_DATA_BUS[13]_I ( .PADDO(N_338_i), 
    .PINDATABUS13(PIN_DATA_BUS[13]));
  PIN_DATA_BUS_12_ \PIN_DATA_BUS[12]_I ( .PADDO(N_340_i), 
    .PINDATABUS12(PIN_DATA_BUS[12]));
  PIN_DATA_BUS_11_ \PIN_DATA_BUS[11]_I ( .PADDO(N_342_i), 
    .PINDATABUS11(PIN_DATA_BUS[11]));
  PIN_DATA_BUS_10_ \PIN_DATA_BUS[10]_I ( .PADDO(N_187_i), 
    .PINDATABUS10(PIN_DATA_BUS[10]));
  PIN_DATA_BUS_9_ \PIN_DATA_BUS[9]_I ( .PADDO(N_189_i), 
    .PINDATABUS9(PIN_DATA_BUS[9]));
  PIN_DATA_BUS_8_ \PIN_DATA_BUS[8]_I ( .PADDO(N_270_i), 
    .PINDATABUS8(PIN_DATA_BUS[8]));
  PIN_DATA_BUS_7_ \PIN_DATA_BUS[7]_I ( .PADDO(\DOUT[7] ), 
    .PINDATABUS7(PIN_DATA_BUS[7]));
  PIN_DATA_BUS_6_ \PIN_DATA_BUS[6]_I ( .PADDO(\DOUT[6] ), 
    .PINDATABUS6(PIN_DATA_BUS[6]));
  PIN_DATA_BUS_5_ \PIN_DATA_BUS[5]_I ( .PADDO(\DOUT[5] ), 
    .PINDATABUS5(PIN_DATA_BUS[5]));
  PIN_DATA_BUS_4_ \PIN_DATA_BUS[4]_I ( .PADDO(\DOUT[4] ), 
    .PINDATABUS4(PIN_DATA_BUS[4]));
  PIN_DATA_BUS_3_ \PIN_DATA_BUS[3]_I ( .PADDO(\DOUT[3] ), 
    .PINDATABUS3(PIN_DATA_BUS[3]));
  PIN_DATA_BUS_2_ \PIN_DATA_BUS[2]_I ( .PADDO(\DOUT[2] ), 
    .PINDATABUS2(PIN_DATA_BUS[2]));
  PIN_DATA_BUS_1_ \PIN_DATA_BUS[1]_I ( .PADDO(\DOUT[1] ), 
    .PINDATABUS1(PIN_DATA_BUS[1]));
  PIN_DATA_BUS_0_ \PIN_DATA_BUS[0]_I ( .PADDO(\DOUT[0] ), 
    .PINDATABUS0(PIN_DATA_BUS[0]));
  PIN_ADDR_BUS_15_ \PIN_ADDR_BUS[15]_I ( .PADDO(N_314_i), 
    .PINADDRBUS15(PIN_ADDR_BUS[15]));
  PIN_ADDR_BUS_14_ \PIN_ADDR_BUS[14]_I ( .PADDO(N_316_i), 
    .PINADDRBUS14(PIN_ADDR_BUS[14]));
  PIN_ADDR_BUS_13_ \PIN_ADDR_BUS[13]_I ( .PADDO(N_318_i), 
    .PINADDRBUS13(PIN_ADDR_BUS[13]));
  PIN_ADDR_BUS_12_ \PIN_ADDR_BUS[12]_I ( .PADDO(N_320_i), 
    .PINADDRBUS12(PIN_ADDR_BUS[12]));
  PIN_ADDR_BUS_11_ \PIN_ADDR_BUS[11]_I ( .PADDO(N_322_i), 
    .PINADDRBUS11(PIN_ADDR_BUS[11]));
  PIN_ADDR_BUS_10_ \PIN_ADDR_BUS[10]_I ( .PADDO(N_156_i), 
    .PINADDRBUS10(PIN_ADDR_BUS[10]));
  PIN_ADDR_BUS_9_ \PIN_ADDR_BUS[9]_I ( .PADDO(N_324_i), 
    .PINADDRBUS9(PIN_ADDR_BUS[9]));
  PIN_ADDR_BUS_8_ \PIN_ADDR_BUS[8]_I ( .PADDO(N_158_i), 
    .PINADDRBUS8(PIN_ADDR_BUS[8]));
  PIN_ADDR_BUS_7_ \PIN_ADDR_BUS[7]_I ( .PADDO(N_160_i), 
    .PINADDRBUS7(PIN_ADDR_BUS[7]));
  PIN_ADDR_BUS_6_ \PIN_ADDR_BUS[6]_I ( .PADDO(N_162_i), 
    .PINADDRBUS6(PIN_ADDR_BUS[6]));
  PIN_ADDR_BUS_5_ \PIN_ADDR_BUS[5]_I ( .PADDO(N_164_i), 
    .PINADDRBUS5(PIN_ADDR_BUS[5]));
  PIN_ADDR_BUS_4_ \PIN_ADDR_BUS[4]_I ( .PADDO(N_326_i), 
    .PINADDRBUS4(PIN_ADDR_BUS[4]));
  PIN_ADDR_BUS_3_ \PIN_ADDR_BUS[3]_I ( .PADDO(N_328_i), 
    .PINADDRBUS3(PIN_ADDR_BUS[3]));
  PIN_ADDR_BUS_2_ \PIN_ADDR_BUS[2]_I ( .PADDO(N_330_i), 
    .PINADDRBUS2(PIN_ADDR_BUS[2]));
  PIN_ADDR_BUS_1_ \PIN_ADDR_BUS[1]_I ( .PADDO(N_332_i), 
    .PINADDRBUS1(PIN_ADDR_BUS[1]));
  PIN_ADDR_BUS_0_ \PIN_ADDR_BUS[0]_I ( .PADDO(N_439_i), 
    .PINADDRBUS0(PIN_ADDR_BUS[0]));
  PIN_COMMITN PIN_COMMITN_I( .IOLDO(PIN_COMMITN_c), .PIN_COMMITN(PIN_COMMITN));
  PIN_COMMITN_MGIOL PIN_COMMITN_MGIOL( .IOLDO(PIN_COMMITN_c), 
    .OPOS(COMMIT_2_i_a4), .CLK(PIN_CLK_X1_c));
  PIN_EXECUTEN PIN_EXECUTEN_I( .IOLDO(PIN_EXECUTEN_c), 
    .PIN_EXECUTEN(PIN_EXECUTEN));
  PIN_EXECUTEN_MGIOL PIN_EXECUTEN_MGIOL( .IOLDO(PIN_EXECUTEN_c), 
    .OPOS(EXECUTE_2_0_i_a2), .CLK(PIN_CLK_X1_c));
  PIN_DECODEN PIN_DECODEN_I( .IOLDO(PIN_DECODEN_c), .PIN_DECODEN(PIN_DECODEN));
  PIN_DECODEN_MGIOL PIN_DECODEN_MGIOL( .IOLDO(PIN_DECODEN_c), 
    .OPOS(\coreInst.instructionPhaseDecoderInst.DECODE_2_i ), 
    .CLK(PIN_CLK_X1_c));
  PIN_FETCHN PIN_FETCHN_I( .IOLDO(PIN_FETCHN_c), .PIN_FETCHN(PIN_FETCHN));
  PIN_FETCHN_MGIOL PIN_FETCHN_MGIOL( .IOLDO(PIN_FETCHN_c), 
    .OPOS(\coreInst.instructionPhaseDecoderInst.FETCH_2_i ), 
    .CLK(PIN_CLK_X1_c));
  PIN_RESETN PIN_RESETN_I( .PADDI(PIN_RESETN_c), .PIN_RESETN(PIN_RESETN));
  mcuResourcesInst_RAMInst_RAM_0_0_7 \mcuResourcesInst/RAMInst/RAM_0_0_7 ( 
    .DIA7(\DOUT[7] ), .DIA6(\DOUT[6] ), .DIA5(\DOUT[5] ), .DIA4(\DOUT[4] ), 
    .DIA3(\DOUT[3] ), .DIA2(\DOUT[2] ), .DIA1(\DOUT[1] ), .DIA0(\DOUT[0] ), 
    .ADA12(N_324_i), .ADA11(N_158_i), .ADA10(N_160_i), .ADA9(N_162_i), 
    .ADA8(N_164_i), .ADA7(N_326_i), .ADA6(N_328_i), .ADA5(N_330_i), 
    .ADA4(N_332_i), .ADA0(\mcuResourcesInst/BE0 ), 
    .DOA7(\mcuResourcesInst/RAMInst/mdout0_0_7 ), 
    .DOA6(\mcuResourcesInst/RAMInst/mdout0_0_6 ), 
    .DOA5(\mcuResourcesInst/RAMInst/mdout0_0_5 ), 
    .DOA4(\mcuResourcesInst/RAMInst/mdout0_0_4 ), 
    .DOA3(\mcuResourcesInst/RAMInst/mdout0_0_3 ), 
    .DOA2(\mcuResourcesInst/RAMInst/mdout0_0_2 ), 
    .DOA1(\mcuResourcesInst/RAMInst/mdout0_0_1 ), 
    .DOA0(\mcuResourcesInst/RAMInst/mdout0_0_0 ), 
    .WEA(\mcuResourcesInst/WR_RAM ), .CEA(\mcuResourcesInst/EN_RAM ), 
    .OCEA(\mcuResourcesInst/EN_RAM ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c), 
    .CSA1(N_322_i), .CSA0(N_156_i));
  mcuResourcesInst_RAMInst_RAM_0_1_6 \mcuResourcesInst/RAMInst/RAM_0_1_6 ( 
    .DIA7(N_183_i), .DIA6(N_185_i), .DIA5(N_338_i), .DIA4(N_340_i), 
    .DIA3(N_342_i), .DIA2(N_187_i), .DIA1(N_189_i), .DIA0(N_270_i), 
    .ADA12(N_324_i), .ADA11(N_158_i), .ADA10(N_160_i), .ADA9(N_162_i), 
    .ADA8(N_164_i), .ADA7(N_326_i), .ADA6(N_328_i), .ADA5(N_330_i), 
    .ADA4(N_332_i), .ADA0(\mcuResourcesInst/BE1 ), 
    .DOA7(\mcuResourcesInst/RAMInst/mdout0_0_16 ), 
    .DOA6(\mcuResourcesInst/RAMInst/mdout0_0_15 ), 
    .DOA5(\mcuResourcesInst/RAMInst/mdout0_0_14 ), 
    .DOA4(\mcuResourcesInst/RAMInst/mdout0_0_13 ), 
    .DOA3(\mcuResourcesInst/RAMInst/mdout0_0_12 ), 
    .DOA2(\mcuResourcesInst/RAMInst/mdout0_0_11 ), 
    .DOA1(\mcuResourcesInst/RAMInst/mdout0_0_10 ), 
    .DOA0(\mcuResourcesInst/RAMInst/mdout0_0_9 ), 
    .WEA(\mcuResourcesInst/WR_RAM ), .CEA(\mcuResourcesInst/EN_RAM ), 
    .OCEA(\mcuResourcesInst/EN_RAM ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c), 
    .CSA1(N_322_i), .CSA0(N_156_i));
  mcuResourcesInst_RAMInst_RAM_1_0_5 \mcuResourcesInst/RAMInst/RAM_1_0_5 ( 
    .DIA7(\DOUT[7] ), .DIA6(\DOUT[6] ), .DIA5(\DOUT[5] ), .DIA4(\DOUT[4] ), 
    .DIA3(\DOUT[3] ), .DIA2(\DOUT[2] ), .DIA1(\DOUT[1] ), .DIA0(\DOUT[0] ), 
    .ADA12(N_324_i), .ADA11(N_158_i), .ADA10(N_160_i), .ADA9(N_162_i), 
    .ADA8(N_164_i), .ADA7(N_326_i), .ADA6(N_328_i), .ADA5(N_330_i), 
    .ADA4(N_332_i), .ADA0(\mcuResourcesInst/BE0 ), 
    .DOA7(\mcuResourcesInst/RAMInst/mdout0_1_7 ), 
    .DOA6(\mcuResourcesInst/RAMInst/mdout0_1_6 ), 
    .DOA5(\mcuResourcesInst/RAMInst/mdout0_1_5 ), 
    .DOA4(\mcuResourcesInst/RAMInst/mdout0_1_4 ), 
    .DOA3(\mcuResourcesInst/RAMInst/mdout0_1_3 ), 
    .DOA2(\mcuResourcesInst/RAMInst/mdout0_1_2 ), 
    .DOA1(\mcuResourcesInst/RAMInst/mdout0_1_1 ), 
    .DOA0(\mcuResourcesInst/RAMInst/mdout0_1_0 ), 
    .WEA(\mcuResourcesInst/WR_RAM ), .CEA(\mcuResourcesInst/EN_RAM ), 
    .OCEA(\mcuResourcesInst/EN_RAM ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c), 
    .CSA1(N_322_i), .CSA0(N_156_i));
  mcuResourcesInst_RAMInst_RAM_1_1_4 \mcuResourcesInst/RAMInst/RAM_1_1_4 ( 
    .DIA7(N_183_i), .DIA6(N_185_i), .DIA5(N_338_i), .DIA4(N_340_i), 
    .DIA3(N_342_i), .DIA2(N_187_i), .DIA1(N_189_i), .DIA0(N_270_i), 
    .ADA12(N_324_i), .ADA11(N_158_i), .ADA10(N_160_i), .ADA9(N_162_i), 
    .ADA8(N_164_i), .ADA7(N_326_i), .ADA6(N_328_i), .ADA5(N_330_i), 
    .ADA4(N_332_i), .ADA0(\mcuResourcesInst/BE1 ), 
    .DOA7(\mcuResourcesInst/RAMInst/mdout0_1_16 ), 
    .DOA6(\mcuResourcesInst/RAMInst/mdout0_1_15 ), 
    .DOA5(\mcuResourcesInst/RAMInst/mdout0_1_14 ), 
    .DOA4(\mcuResourcesInst/RAMInst/mdout0_1_13 ), 
    .DOA3(\mcuResourcesInst/RAMInst/mdout0_1_12 ), 
    .DOA2(\mcuResourcesInst/RAMInst/mdout0_1_11 ), 
    .DOA1(\mcuResourcesInst/RAMInst/mdout0_1_10 ), 
    .DOA0(\mcuResourcesInst/RAMInst/mdout0_1_9 ), 
    .WEA(\mcuResourcesInst/WR_RAM ), .CEA(\mcuResourcesInst/EN_RAM ), 
    .OCEA(\mcuResourcesInst/EN_RAM ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c), 
    .CSA1(N_322_i), .CSA0(N_156_i));
  mcuResourcesInst_RAMInst_RAM_2_0_3 \mcuResourcesInst/RAMInst/RAM_2_0_3 ( 
    .DIA7(\DOUT[7] ), .DIA6(\DOUT[6] ), .DIA5(\DOUT[5] ), .DIA4(\DOUT[4] ), 
    .DIA3(\DOUT[3] ), .DIA2(\DOUT[2] ), .DIA1(\DOUT[1] ), .DIA0(\DOUT[0] ), 
    .ADA12(N_324_i), .ADA11(N_158_i), .ADA10(N_160_i), .ADA9(N_162_i), 
    .ADA8(N_164_i), .ADA7(N_326_i), .ADA6(N_328_i), .ADA5(N_330_i), 
    .ADA4(N_332_i), .ADA0(\mcuResourcesInst/BE0 ), 
    .DOA7(\mcuResourcesInst/RAMInst/mdout0_2_7 ), 
    .DOA6(\mcuResourcesInst/RAMInst/mdout0_2_6 ), 
    .DOA5(\mcuResourcesInst/RAMInst/mdout0_2_5 ), 
    .DOA4(\mcuResourcesInst/RAMInst/mdout0_2_4 ), 
    .DOA3(\mcuResourcesInst/RAMInst/mdout0_2_3 ), 
    .DOA2(\mcuResourcesInst/RAMInst/mdout0_2_2 ), 
    .DOA1(\mcuResourcesInst/RAMInst/mdout0_2_1 ), 
    .DOA0(\mcuResourcesInst/RAMInst/mdout0_2_0 ), 
    .WEA(\mcuResourcesInst/WR_RAM ), .CEA(\mcuResourcesInst/EN_RAM ), 
    .OCEA(\mcuResourcesInst/EN_RAM ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c), 
    .CSA1(N_322_i), .CSA0(N_156_i));
  mcuResourcesInst_RAMInst_RAM_2_1_2 \mcuResourcesInst/RAMInst/RAM_2_1_2 ( 
    .DIA7(N_183_i), .DIA6(N_185_i), .DIA5(N_338_i), .DIA4(N_340_i), 
    .DIA3(N_342_i), .DIA2(N_187_i), .DIA1(N_189_i), .DIA0(N_270_i), 
    .ADA12(N_324_i), .ADA11(N_158_i), .ADA10(N_160_i), .ADA9(N_162_i), 
    .ADA8(N_164_i), .ADA7(N_326_i), .ADA6(N_328_i), .ADA5(N_330_i), 
    .ADA4(N_332_i), .ADA0(\mcuResourcesInst/BE1 ), 
    .DOA7(\mcuResourcesInst/RAMInst/mdout0_2_16 ), 
    .DOA6(\mcuResourcesInst/RAMInst/mdout0_2_15 ), 
    .DOA5(\mcuResourcesInst/RAMInst/mdout0_2_14 ), 
    .DOA4(\mcuResourcesInst/RAMInst/mdout0_2_13 ), 
    .DOA3(\mcuResourcesInst/RAMInst/mdout0_2_12 ), 
    .DOA2(\mcuResourcesInst/RAMInst/mdout0_2_11 ), 
    .DOA1(\mcuResourcesInst/RAMInst/mdout0_2_10 ), 
    .DOA0(\mcuResourcesInst/RAMInst/mdout0_2_9 ), 
    .WEA(\mcuResourcesInst/WR_RAM ), .CEA(\mcuResourcesInst/EN_RAM ), 
    .OCEA(\mcuResourcesInst/EN_RAM ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c), 
    .CSA1(N_322_i), .CSA0(N_156_i));
  mcuResourcesInst_RAMInst_RAM_3_0_1 \mcuResourcesInst/RAMInst/RAM_3_0_1 ( 
    .DIA7(\DOUT[7] ), .DIA6(\DOUT[6] ), .DIA5(\DOUT[5] ), .DIA4(\DOUT[4] ), 
    .DIA3(\DOUT[3] ), .DIA2(\DOUT[2] ), .DIA1(\DOUT[1] ), .DIA0(\DOUT[0] ), 
    .ADA12(N_324_i), .ADA11(N_158_i), .ADA10(N_160_i), .ADA9(N_162_i), 
    .ADA8(N_164_i), .ADA7(N_326_i), .ADA6(N_328_i), .ADA5(N_330_i), 
    .ADA4(N_332_i), .ADA0(\mcuResourcesInst/BE0 ), 
    .DOA7(\mcuResourcesInst/RAMInst/mdout0_3_7 ), 
    .DOA6(\mcuResourcesInst/RAMInst/mdout0_3_6 ), 
    .DOA5(\mcuResourcesInst/RAMInst/mdout0_3_5 ), 
    .DOA4(\mcuResourcesInst/RAMInst/mdout0_3_4 ), 
    .DOA3(\mcuResourcesInst/RAMInst/mdout0_3_3 ), 
    .DOA2(\mcuResourcesInst/RAMInst/mdout0_3_2 ), 
    .DOA1(\mcuResourcesInst/RAMInst/mdout0_3_1 ), 
    .DOA0(\mcuResourcesInst/RAMInst/mdout0_3_0 ), 
    .WEA(\mcuResourcesInst/WR_RAM ), .CEA(\mcuResourcesInst/EN_RAM ), 
    .OCEA(\mcuResourcesInst/EN_RAM ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c), 
    .CSA1(N_322_i), .CSA0(N_156_i));
  mcuResourcesInst_RAMInst_RAM_3_1_0 \mcuResourcesInst/RAMInst/RAM_3_1_0 ( 
    .DIA7(N_183_i), .DIA6(N_185_i), .DIA5(N_338_i), .DIA4(N_340_i), 
    .DIA3(N_342_i), .DIA2(N_187_i), .DIA1(N_189_i), .DIA0(N_270_i), 
    .ADA12(N_324_i), .ADA11(N_158_i), .ADA10(N_160_i), .ADA9(N_162_i), 
    .ADA8(N_164_i), .ADA7(N_326_i), .ADA6(N_328_i), .ADA5(N_330_i), 
    .ADA4(N_332_i), .ADA0(\mcuResourcesInst/BE1 ), 
    .DOA7(\mcuResourcesInst/RAMInst/mdout0_3_16 ), 
    .DOA6(\mcuResourcesInst/RAMInst/mdout0_3_15 ), 
    .DOA5(\mcuResourcesInst/RAMInst/mdout0_3_14 ), 
    .DOA4(\mcuResourcesInst/RAMInst/mdout0_3_13 ), 
    .DOA3(\mcuResourcesInst/RAMInst/mdout0_3_12 ), 
    .DOA2(\mcuResourcesInst/RAMInst/mdout0_3_11 ), 
    .DOA1(\mcuResourcesInst/RAMInst/mdout0_3_10 ), 
    .DOA0(\mcuResourcesInst/RAMInst/mdout0_3_9 ), 
    .WEA(\mcuResourcesInst/WR_RAM ), .CEA(\mcuResourcesInst/EN_RAM ), 
    .OCEA(\mcuResourcesInst/EN_RAM ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c), 
    .CSA1(N_322_i), .CSA0(N_156_i));
  mcuResourcesInst_ROMInst_rom_0_15_0 \mcuResourcesInst/ROMInst/rom_0_15_0 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst/DIN_ROM[15] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  mcuResourcesInst_ROMInst_rom_0_0_15 \mcuResourcesInst/ROMInst/rom_0_0_15 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst/DIN_ROM[0] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  mcuResourcesInst_ROMInst_rom_0_1_14 \mcuResourcesInst/ROMInst/rom_0_1_14 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst.DIN_ROM[1] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  mcuResourcesInst_ROMInst_rom_0_2_13 \mcuResourcesInst/ROMInst/rom_0_2_13 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst/DIN_ROM[2] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  mcuResourcesInst_ROMInst_rom_0_3_12 \mcuResourcesInst/ROMInst/rom_0_3_12 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst/DIN_ROM[3] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  mcuResourcesInst_ROMInst_rom_0_4_11 \mcuResourcesInst/ROMInst/rom_0_4_11 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst/DIN_ROM[4] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  mcuResourcesInst_ROMInst_rom_0_5_10 \mcuResourcesInst/ROMInst/rom_0_5_10 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst/DIN_ROM[5] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  mcuResourcesInst_ROMInst_rom_0_6_9 \mcuResourcesInst/ROMInst/rom_0_6_9 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst/DIN_ROM[6] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  mcuResourcesInst_ROMInst_rom_0_7_8 \mcuResourcesInst/ROMInst/rom_0_7_8 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst/DIN_ROM[7] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  mcuResourcesInst_ROMInst_rom_0_8_7 \mcuResourcesInst/ROMInst/rom_0_8_7 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst/DIN_ROM[8] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  mcuResourcesInst_ROMInst_rom_0_9_6 \mcuResourcesInst/ROMInst/rom_0_9_6 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst/DIN_ROM[9] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  mcuResourcesInst_ROMInst_rom_0_10_5 \mcuResourcesInst/ROMInst/rom_0_10_5 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst/DIN_ROM[10] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  mcuResourcesInst_ROMInst_rom_0_11_4 \mcuResourcesInst/ROMInst/rom_0_11_4 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst/DIN_ROM[11] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  mcuResourcesInst_ROMInst_rom_0_12_3 \mcuResourcesInst/ROMInst/rom_0_12_3 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst/DIN_ROM[12] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  mcuResourcesInst_ROMInst_rom_0_13_2 \mcuResourcesInst/ROMInst/rom_0_13_2 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst/DIN_ROM[13] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  mcuResourcesInst_ROMInst_rom_0_14_1 \mcuResourcesInst/ROMInst/rom_0_14_1 ( 
    .ADA12(N_320_i), .ADA11(N_322_i), .ADA10(N_156_i), .ADA9(N_324_i), 
    .ADA8(N_158_i), .ADA7(N_160_i), .ADA6(N_162_i), .ADA5(N_164_i), 
    .ADA4(N_326_i), .ADA3(N_328_i), .ADA2(N_330_i), .ADA1(N_332_i), 
    .DOA0(\mcuResourcesInst/DIN_ROM[14] ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c));
  coreInst_registerFileInst_regs_registers_0_0_1 
    \coreInst/registerFileInst/regs/registers_0_0_1 ( 
    .DIA7(\coreInst/registerFileInst/regs/N_238_i ), 
    .DIA6(\coreInst/registerFileInst/regs/N_240_i ), 
    .DIA5(\coreInst/registerFileInst/regs/N_242_i ), 
    .DIA4(\coreInst/registerFileInst/regs/N_244_i ), 
    .DIA3(\coreInst/registerFileInst/regs/N_246_i ), 
    .DIA2(\coreInst/registerFileInst/regs/N_248_i ), 
    .DIA1(\coreInst/registerFileInst/regs/N_250_i ), 
    .DIA0(\coreInst/registerFileInst/regs/N_252_i ), 
    .ADA6(\coreInst/registerFileInst/ADDRA[3] ), 
    .ADA5(\coreInst/registerFileInst/ADDRA[2] ), 
    .ADA4(\coreInst/registerFileInst/ADDRA[1] ), 
    .ADA3(\coreInst/registerFileInst/ADDRA[0] ), 
    .DOA7(\coreInst.REGA_DOUT[7] ), .DOA6(\coreInst/REGA_DOUT[6] ), 
    .DOA5(\coreInst/REGA_DOUT[5] ), .DOA4(\coreInst/REGA_DOUT[4] ), 
    .DOA3(\coreInst/REGA_DOUT[3] ), .DOA2(\coreInst/REGA_DOUT[2] ), 
    .DOA1(\coreInst/REGA_DOUT[1] ), .DOA0(\coreInst/REGA_DOUT[0] ), 
    .WEA(\coreInst/REGA_WEN ), .CEA(\coreInst/REGA_EN ), 
    .OCEA(\coreInst/REGA_EN ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c), 
    .CLKB(PIN_CLK_X1_c), .RSTB(RESET), .OCEB(\coreInst/REGB_EN ), 
    .CEB(\coreInst/REGB_EN ), .WEB(\coreInst/REGB_WEN ), 
    .DOB0(\coreInst/REGB_DOUT[0] ), .DOB1(\coreInst/REGB_DOUT[1] ), 
    .DOB2(\coreInst/REGB_DOUT[2] ), .DOB3(\coreInst/REGB_DOUT[3] ), 
    .DOB4(\coreInst/REGB_DOUT[4] ), .DOB5(\coreInst/REGB_DOUT[5] ), 
    .DOB6(\coreInst/REGB_DOUT[6] ), .DOB7(\coreInst/REGB_DOUT[7] ), 
    .ADB3(\coreInst/registerFileInst/N_378_i ), 
    .ADB4(\coreInst/registerFileInst/ADDRB[1] ), 
    .ADB5(\coreInst/registerFileInst/ADDRB[2] ), 
    .ADB6(\coreInst/registerFileInst/N_370_i ), .DIB0(\coreInst/ALU_R[0] ), 
    .DIB1(\coreInst/ALU_R[1] ), .DIB2(\coreInst/ALU_R[2] ), 
    .DIB3(\coreInst/ALU_R[3] ), .DIB4(\coreInst/ALU_R[4] ), 
    .DIB5(\coreInst/ALU_R[5] ), .DIB6(\coreInst/ALU_R[6] ), 
    .DIB7(\coreInst.ALU_R[7] ));
  coreInst_registerFileInst_regs_registers_0_1_0 
    \coreInst/registerFileInst/regs/registers_0_1_0 ( 
    .DIA7(\coreInst/registerFileInst/DINA[15] ), 
    .DIA6(\coreInst/registerFileInst/DINA[14] ), 
    .DIA5(\coreInst/registerFileInst/DINA[13] ), 
    .DIA4(\coreInst/registerFileInst/DINA[12] ), 
    .DIA3(\coreInst/registerFileInst/DINA[11] ), 
    .DIA2(\coreInst/registerFileInst/DINA[10] ), 
    .DIA1(\coreInst/registerFileInst/DINA[9] ), 
    .DIA0(\coreInst/registerFileInst/DINA[8] ), 
    .ADA6(\coreInst/registerFileInst/ADDRA[3] ), 
    .ADA5(\coreInst/registerFileInst/ADDRA[2] ), 
    .ADA4(\coreInst/registerFileInst/ADDRA[1] ), 
    .ADA3(\coreInst/registerFileInst/ADDRA[0] ), 
    .DOA7(\coreInst/REGA_DOUT[15] ), .DOA6(\coreInst/REGA_DOUT[14] ), 
    .DOA5(\coreInst/REGA_DOUT[13] ), .DOA4(\coreInst/REGA_DOUT[12] ), 
    .DOA3(\coreInst/REGA_DOUT[11] ), .DOA2(\coreInst/REGA_DOUT[10] ), 
    .DOA1(\coreInst/REGA_DOUT[9] ), .DOA0(\coreInst/REGA_DOUT[8] ), 
    .WEA(\coreInst/REGA_WEN ), .CEA(\coreInst/REGA_EN ), 
    .OCEA(\coreInst/REGA_EN ), .RSTA(RESET), .CLKA(PIN_CLK_X1_c), 
    .CLKB(PIN_CLK_X1_c), .RSTB(RESET), .OCEB(\coreInst/REGB_EN ), 
    .CEB(\coreInst/REGB_EN ), .WEB(\coreInst/REGB_WEN ), 
    .DOB0(\coreInst/REGB_DOUT[8] ), .DOB1(\coreInst/REGB_DOUT[9] ), 
    .DOB2(\coreInst/REGB_DOUT[10] ), .DOB3(\coreInst/REGB_DOUT[11] ), 
    .DOB4(\coreInst/REGB_DOUT[12] ), .DOB5(\coreInst/REGB_DOUT[13] ), 
    .DOB6(\coreInst/REGB_DOUT[14] ), .DOB7(\coreInst/REGB_DOUT[15] ), 
    .ADB3(\coreInst/registerFileInst/N_378_i ), 
    .ADB4(\coreInst/registerFileInst/ADDRB[1] ), 
    .ADB5(\coreInst/registerFileInst/ADDRB[2] ), 
    .ADB6(\coreInst/registerFileInst/N_370_i ), .DIB0(\coreInst/ALU_R[8] ), 
    .DIB1(\coreInst/ALU_R[9] ), .DIB2(\coreInst.ALU_R[10] ), 
    .DIB3(\coreInst/ALU_R[11] ), .DIB4(\coreInst/ALU_R[12] ), 
    .DIB5(\coreInst/ALU_R[13] ), .DIB6(\coreInst/ALU_R[14] ), 
    .DIB7(\coreInst/ALU_R[15] ));
  GSR_INST GSR_INST( .GSRNET(~RESET));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCCI));
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_0 ( input FCI, output F0 );
  wire   GNDI;

  ccu2 \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_1 ( input A1, B0, A0, FCI, 
    output FCO );
  wire   GNDI;

  ccu20001 \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_15_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5009;
  defparam inst1.INIT1 = 16'h5001;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_2 ( input B1, A1, B0, A0, 
    FCI, output FCO );
  wire   GNDI;

  ccu20002 \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_13_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5009;
  defparam inst1.INIT1 = 16'h5009;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_3 ( input B1, A1, B0, A0, 
    FCI, output FCO );
  wire   GNDI;

  ccu20002 \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_11_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_4 ( input B1, A1, B0, A0, 
    FCI, output FCO );
  wire   GNDI;

  ccu20002 \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_9_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_5 ( input B1, A1, B0, A0, 
    FCI, output FCO );
  wire   GNDI;

  ccu20002 \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_7_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_6 ( input B1, A1, B0, A0, 
    FCI, output FCO );
  wire   GNDI;

  ccu20003 \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_5_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3009;
  defparam inst1.INIT1 = 16'h5009;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_7 ( input B1, A1, B0, A0, 
    FCI, output FCO );
  wire   GNDI;

  ccu20002 \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_3_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_8 ( input B1, A1, B0, A0, 
    FCI, output FCO );
  wire   GNDI;

  ccu20002 \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_1_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_9 ( input C1, B1, A1, 
    output FCO );
  wire   GNDI;

  ccu20004 \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_0_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h503C;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_10 ( input B0, FCI, output 
    F0, F1 );
  wire   GNDI;

  ccu20005 \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_15_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0001;
  defparam inst1.INIT1 = 16'h300F;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_11 ( input A1, B0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_13_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0001;
  defparam inst1.INIT1 = 16'h0001;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_12 ( input B1, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_11_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_13 ( input B1, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_9_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_14 ( input A1, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_7_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_15 ( input B1, B0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_5_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_16 ( input B1, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_3_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_17 ( input A1, B0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_1_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_18 ( input A1, output F1, 
    FCO );
  wire   GNDI;

  ccu20007 \mcuResourcesInst/UARTInst/uartTxInst/un1_CLKS_PER_BIT_cry_0_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h5001;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_19 ( input A0, DI0, LSR, CLK, 
    FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[15] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20008 \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_s_15_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module ccu20008 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h300A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_20 ( input A1, A0, DI1, DI0, 
    LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[14] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[13] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));
  ccu20008 \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_13_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_21 ( input A1, A0, DI1, DI0, 
    LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[12] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[11] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));
  ccu20008 \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_11_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_22 ( input A1, A0, DI1, DI0, 
    LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[10] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[9] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));
  ccu20008 \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_9_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_23 ( input A1, A0, DI1, DI0, 
    LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[8] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[7] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));
  ccu20008 \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_7_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_24 ( input A1, A0, DI1, DI0, 
    LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[6] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[5] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));
  ccu20008 \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_5_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_25 ( input A1, A0, DI1, DI0, 
    LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[4] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[3] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));
  ccu20008 \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_3_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_26 ( input A1, A0, DI1, DI0, 
    LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[2] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[1] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));
  ccu20008 \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_1_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_27 ( input A1, A0, DI1, LSR, 
    CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count[0] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20009 \mcuResourcesInst/UARTInst/uartTxInst/un1_r_Clock_Count_cry_0_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20009 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h500C;
  defparam inst1.INIT1 = 16'h300A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module mcuResourcesInst_UARTInst_SLICE_28 ( input M0, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre0010 \mcuResourcesInst/UARTInst/TX_ACTIVE_R ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu2 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_I_51_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0010 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module mcuResourcesInst_UARTInst_SLICE_29 ( input C1, D0, C0, B0, A0, M1, M0, 
    CE, CLK, FCI, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0010 \mcuResourcesInst/UARTInst/TX_CLK_DIV[7] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0011 \mcuResourcesInst/UARTInst/TX_CLK_DIV[6] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_I_33_0 ( 
    .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(GNDI), .B1(GNDI), .C1(C1), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (C1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0011 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module ccu20012 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h8241;
  defparam inst1.INIT1 = 16'h0A01;
  defparam inst1.INJECT1_0 = "YES";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module mcuResourcesInst_UARTInst_SLICE_30 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, CE, CLK, FCI, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0010 \mcuResourcesInst/UARTInst/TX_CLK_DIV[1] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/TX_CLK_DIV[13] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_I_15_0 ( 
    .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), 
    .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20013 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h8421;
  defparam inst1.INIT1 = 16'h8421;
  defparam inst1.INJECT1_0 = "YES";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module mcuResourcesInst_UARTInst_SLICE_31 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, CE, CLK, FCI, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0010 \mcuResourcesInst/UARTInst/TX_CLK_DIV[9] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/TX_CLK_DIV[8] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20014 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_I_45_0 ( 
    .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), 
    .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20014 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h8421;
  defparam inst1.INIT1 = 16'h9009;
  defparam inst1.INJECT1_0 = "YES";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module mcuResourcesInst_UARTInst_SLICE_32 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, CE, CLK, FCI, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0011 \mcuResourcesInst/UARTInst/TX_CLK_DIV[5] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/TX_CLK_DIV[4] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20015 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_I_21_0 ( 
    .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), 
    .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20015 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h8421;
  defparam inst1.INIT1 = 16'h8241;
  defparam inst1.INJECT1_0 = "YES";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module mcuResourcesInst_UARTInst_SLICE_33 ( input D1, C1, B1, A1, M1, M0, CE, 
    CLK, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0011 \mcuResourcesInst/UARTInst/TX_CLK_DIV[3] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/TX_CLK_DIV[2] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20016 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count17_0_I_1_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), 
    .D1(D1), .CI(GNDI), .S0(), .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20016 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h9009;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_34 ( input FCI, output F0 );
  wire   GNDI;

  ccu2 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_16_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_35 ( input A1, B0, A0, FCI, 
    output FCO );
  wire   GNDI;

  ccu20001 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_15_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_36 ( input B1, A1, B0, A0, 
    FCI, output FCO );
  wire   GNDI;

  ccu20003 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_13_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_37 ( input B1, A1, B0, A0, 
    FCI, output FCO );
  wire   GNDI;

  ccu20002 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_11_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_38 ( input B1, A1, B0, A0, 
    FCI, output FCO );
  wire   GNDI;

  ccu20002 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_9_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_39 ( input B1, A1, B0, A0, 
    FCI, output FCO );
  wire   GNDI;

  ccu20002 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_7_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_40 ( input B1, A1, B0, A0, 
    FCI, output FCO );
  wire   GNDI;

  ccu20002 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_5_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_41 ( input B1, A1, B0, A0, 
    FCI, output FCO );
  wire   GNDI;

  ccu20002 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_3_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_42 ( input B1, A1, B0, A0, 
    FCI, output FCO );
  wire   GNDI;

  ccu20003 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_1_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_43 ( input C1, B1, A1, 
    output FCO );
  wire   GNDI;

  ccu20004 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count32_cry_0_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_44 ( input FCI, output F0 );
  wire   GNDI;

  ccu20017 \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_s_17_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20017 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300F;
  defparam inst1.INIT1 = 16'h300A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_45 ( input A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20005 \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_15_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_46 ( input A1, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_13_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_47 ( input B1, B0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_11_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_48 ( input A1, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_9_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_49 ( input A1, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_7_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_50 ( input A1, B0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_5_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_51 ( input B1, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_3_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_52 ( input A1, B0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20006 \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_1_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_53 ( input A1, M0, CE, CLK, 
    output Q0, F1, FCO );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte[6] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20007 \mcuResourcesInst/UARTInst/uartRXInst/un1_CLKS_PER_BIT_cry_0_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0018 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_54 ( input B0, FCI, output 
    F0 );
  wire   GNDI;

  ccu20009 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_s_15_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_55 ( input A1, B0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20009 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_13_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_56 ( input B1, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20019 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_11_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20019 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h500C;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_57 ( input A1, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20008 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_9_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_58 ( input B1, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20019 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_7_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_59 ( input B1, B0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20020 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_5_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20020 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h500C;
  defparam inst1.INIT1 = 16'h500C;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_60 ( input A1, B0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20009 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_3_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_61 ( input B1, B0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20020 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_1_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_62 ( input A1, B0, output F1, 
    FCO );
  wire   GNDI;

  ccu20008 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_0_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_63 ( input A1, output FCO );
  wire   GNDI;

  ccu20021 \coreInst/un1_HERE_cry_0_0 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20021 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h000A;
  defparam inst1.INIT1 = 16'hF001;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_programCounterInst_SLICE_64 ( input A1, B0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20009 \coreInst/programCounterInst/un2_HERE_cry_14_0 ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_programCounterInst_SLICE_65 ( input B1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20019 \coreInst/programCounterInst/un2_HERE_cry_12_0 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_programCounterInst_SLICE_66 ( input A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20008 \coreInst/programCounterInst/un2_HERE_cry_10_0 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_programCounterInst_SLICE_67 ( input B1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20019 \coreInst/programCounterInst/un2_HERE_cry_8_0 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_programCounterInst_SLICE_68 ( input A1, B0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20009 \coreInst/programCounterInst/un2_HERE_cry_6_0 ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_programCounterInst_SLICE_69 ( input A1, A0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20008 \coreInst/programCounterInst/un2_HERE_cry_4_0 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_programCounterInst_SLICE_70 ( input B1, B0, FCI, output F0, F1, 
    FCO );
  wire   GNDI;

  ccu20020 \coreInst/programCounterInst/un2_HERE_cry_2_0 ( .A0(GNDI), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_programCounterInst_SLICE_71 ( input A1, output FCO );
  wire   GNDI;

  ccu20022 \coreInst/programCounterInst/un2_HERE_cry_1_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20022 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h5001;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_programCounterInst_SLICE_72 ( input C0, B0, A0, DI0, M1, CE, 
    CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  vmuxregsre0010 \coreInst/programCounterInst/INTR1[0] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR1[15] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20023 \coreInst/programCounterInst/SUM_s_15_0 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20023 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h50A6;
  defparam inst1.INIT1 = 16'h300A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_programCounterInst_SLICE_73 ( input C1, B1, A1, C0, B0, A0, 
    DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0010 \coreInst/programCounterInst/INTR1[14] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR1[13] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20024 \coreInst/programCounterInst/SUM_cry_13_0 ( .A0(A0), .B0(B0), 
    .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20024 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h30C6;
  defparam inst1.INIT1 = 16'h50A6;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_programCounterInst_SLICE_74 ( input C1, B1, A1, C0, B0, A0, 
    DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0010 \coreInst/programCounterInst/INTR1[12] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR1[11] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \coreInst/programCounterInst/SUM_cry_11_0 ( .A0(A0), .B0(B0), 
    .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20025 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h30C6;
  defparam inst1.INIT1 = 16'h30C6;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_programCounterInst_SLICE_75 ( input C1, B1, A1, C0, B0, A0, 
    DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0010 \coreInst/programCounterInst/INTR1[10] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR1[9] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20026 \coreInst/programCounterInst/SUM_cry_9_0 ( .A0(A0), .B0(B0), 
    .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20026 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h50A6;
  defparam inst1.INIT1 = 16'h30C6;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_programCounterInst_SLICE_76 ( input C1, B1, A1, C0, B0, A0, 
    DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0010 \coreInst/programCounterInst/INTR1[8] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR1[7] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \coreInst/programCounterInst/SUM_cry_7_0 ( .A0(A0), .B0(B0), 
    .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module coreInst_programCounterInst_SLICE_77 ( input C1, B1, A1, C0, B0, A0, 
    DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0010 \coreInst/programCounterInst/INTR1[6] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR1[5] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \coreInst/programCounterInst/SUM_cry_5_0 ( .A0(A0), .B0(B0), 
    .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module coreInst_programCounterInst_SLICE_78 ( input C1, B1, A1, C0, B0, A0, 
    DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0010 \coreInst/programCounterInst/INTR1[4] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR1[3] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20025 \coreInst/programCounterInst/SUM_cry_3_0 ( .A0(A0), .B0(B0), 
    .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module coreInst_programCounterInst_SLICE_79 ( input C1, B1, A1, C0, B0, A0, 
    DI1, DI0, CE, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0010 \coreInst/programCounterInst/INTR1[2] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR1[1] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20027 \coreInst/programCounterInst/SUM_cry_1_0 ( .A0(A0), .B0(B0), 
    .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20027 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h50A9;
  defparam inst1.INIT1 = 16'h10E1;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_programCounterInst_SLICE_80 ( input C1, B1, A1, output FCO );
  wire   GNDI;

  ccu20028 \coreInst/programCounterInst/SUM_cry_0_0 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20028 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h30C9;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_81 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20008 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_14_s_23_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_82 ( input A1, B0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20009 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_14_cry_21_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_83 ( input B1, B0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20020 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_14_cry_19_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_84 ( input B1, B0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20020 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_14_cry_17_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_85 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_14_cry_15_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20029 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3006;
  defparam inst1.INIT1 = 16'h3006;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_86 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_14_cry_13_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20030 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5006;
  defparam inst1.INIT1 = 16'h5006;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_87 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_14_cry_11_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20031 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3006;
  defparam inst1.INIT1 = 16'h5006;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_88 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_14_cry_9_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_89 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_14_cry_7_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_90 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_14_cry_5_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_91 ( input C1, B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20032 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_14_cry_3_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20032 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3006;
  defparam inst1.INIT1 = 16'h9096;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_92 ( input C1, B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20033 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_14_cry_1_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20033 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5006;
  defparam inst1.INIT1 = 16'h9096;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_93 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20034 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_14_cry_0_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20034 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h3006;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_94 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20008 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_13_s_23_0 ( .A0(A0), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_95 ( input B1, B0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20020 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_13_cry_21_0 ( 
    .A0(GNDI), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_96 ( input B1, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20035 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_13_cry_19_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20035 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5006;
  defparam inst1.INIT1 = 16'h500C;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_97 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_13_cry_17_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_98 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_13_cry_15_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_99 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_13_cry_13_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_100 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_13_cry_11_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_101 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_13_cry_9_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_102 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20036 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_13_cry_7_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20036 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5006;
  defparam inst1.INIT1 = 16'h3006;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_103 ( input C1, B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20032 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_13_cry_5_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_104 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20037 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_13_cry_4_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20037 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h5006;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_105 ( input A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20008 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_12_cry_19_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_106 ( input B1, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20019 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_12_cry_17_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_107 ( input B1, B0, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20035 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_12_cry_15_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_108 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20036 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_12_cry_13_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_109 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_12_cry_11_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_110 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_12_cry_9_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_111 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_12_cry_7_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_112 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_12_cry_5_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_113 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_12_cry_3_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_114 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20038 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_12_cry_1_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20038 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9096;
  defparam inst1.INIT1 = 16'h9096;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_115 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20034 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_12_cry_0_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_116 ( input FCI, output F0 );
  wire   GNDI;

  ccu2 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_11_cry_18_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_117 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20039 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_11_cry_17_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20039 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF002;
  defparam inst1.INIT1 = 16'h7008;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_118 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20040 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_11_cry_15_0 ( 
    .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20040 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h50A6;
  defparam inst1.INIT1 = 16'h50A6;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_119 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_11_cry_13_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_120 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_11_cry_11_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_121 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_11_cry_9_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_122 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_11_cry_7_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_123 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20036 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_11_cry_5_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_124 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_11_cry_3_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_125 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20034 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_11_cry_2_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_126 ( input FCI, output F0 );
  wire   GNDI;

  ccu2 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_5_cry_15_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_127 ( input B1, A1, D0, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20041 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_5_cry_14_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20041 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7888;
  defparam inst1.INIT1 = 16'h7008;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_128 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_5_cry_12_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20042 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7888;
  defparam inst1.INIT1 = 16'h7888;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_129 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_5_cry_10_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_130 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_5_cry_8_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_131 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_5_cry_6_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_132 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_5_cry_4_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_133 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_5_cry_2_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_134 ( input D1, C1, B1, A1, output 
    FCO );
  wire   GNDI;

  ccu20043 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_5_cry_1_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), 
    .D1(D1), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20043 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h7888;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_135 ( input FCI, output F0 );
  wire   GNDI;

  ccu2 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_4_cry_15_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_136 ( input B1, A1, D0, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20041 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_4_cry_14_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_137 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_4_cry_12_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_138 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_4_cry_10_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_139 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_4_cry_8_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_140 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_4_cry_6_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_141 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_4_cry_4_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_142 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_4_cry_2_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_143 ( input D1, C1, B1, A1, output 
    FCO );
  wire   GNDI;

  ccu20043 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_4_cry_1_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), 
    .D1(D1), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_144 ( input FCI, output F0 );
  wire   GNDI;

  ccu2 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_9_cry_18_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_145 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20044 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_9_cry_17_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20044 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF004;
  defparam inst1.INIT1 = 16'hF004;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_146 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20040 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_9_cry_15_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_147 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_9_cry_13_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_148 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20036 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_9_cry_11_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_149 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20036 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_9_cry_9_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_150 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20036 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_9_cry_7_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_151 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_9_cry_5_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_152 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_9_cry_3_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_153 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20037 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_9_cry_2_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_154 ( input C1, B1, A1, B0, A0, FCI, 
    output F0, F1 );
  wire   GNDI;

  ccu20045 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_7_cry_16_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20045 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF006;
  defparam inst1.INIT1 = 16'h30EC;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_155 ( input B1, A1, D0, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20046 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_7_cry_14_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20046 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hD222;
  defparam inst1.INIT1 = 16'hB004;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_156 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20047 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_7_cry_12_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20047 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hD222;
  defparam inst1.INIT1 = 16'hB444;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_157 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20048 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_7_cry_10_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20048 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hB444;
  defparam inst1.INIT1 = 16'hB444;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_158 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20048 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_7_cry_8_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_159 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20049 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_7_cry_6_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20049 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hD222;
  defparam inst1.INIT1 = 16'hD222;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_160 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20050 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_7_cry_4_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20050 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hB444;
  defparam inst1.INIT1 = 16'hD222;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_161 ( input D1, C1, B1, A1, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20051 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_7_cry_2_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20051 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hB0B4;
  defparam inst1.INIT1 = 16'hD222;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_162 ( input D1, C1, B1, A1, output 
    FCO );
  wire   GNDI;

  ccu20052 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_7_cry_1_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), 
    .D1(D1), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20052 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'hB444;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_163 ( input FCI, output F0 );
  wire   GNDI;

  ccu2 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_10_cry_18_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_164 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20053 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_10_cry_17_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20053 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF002;
  defparam inst1.INIT1 = 16'hF002;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_165 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20040 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_10_cry_15_0 ( 
    .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_166 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_10_cry_13_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_167 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_10_cry_11_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_168 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20036 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_10_cry_9_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_169 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_10_cry_7_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_170 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_10_cry_5_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_171 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_10_cry_3_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_172 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20037 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_10_cry_2_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_173 ( input FCI, output F0 );
  wire   GNDI;

  ccu2 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_6_cry_15_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_174 ( input B1, A1, D0, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20041 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_6_cry_14_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_175 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_6_cry_12_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_176 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_6_cry_10_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_177 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_6_cry_8_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_178 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_6_cry_6_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_179 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_6_cry_4_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_180 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_6_cry_2_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_181 ( input D1, C1, B1, A1, output 
    FCO );
  wire   GNDI;

  ccu20043 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_6_cry_1_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), 
    .D1(D1), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_182 ( input FCI, output F0 );
  wire   GNDI;

  ccu2 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_3_cry_15_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_183 ( input B1, A1, D0, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20041 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_3_cry_14_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_184 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_3_cry_12_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_185 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_3_cry_10_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_186 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_3_cry_8_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_187 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_3_cry_6_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_188 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_3_cry_4_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_189 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_3_cry_2_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_190 ( input D1, C1, B1, A1, output 
    FCO );
  wire   GNDI;

  ccu20043 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_3_cry_1_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), 
    .D1(D1), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_191 ( input FCI, output F0 );
  wire   GNDI;

  ccu2 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_2_cry_15_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_192 ( input B1, A1, D0, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20041 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_2_cry_14_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_193 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_2_cry_12_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_194 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_2_cry_10_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_195 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_2_cry_8_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_196 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_2_cry_6_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_197 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_2_cry_4_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_198 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_2_cry_2_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_199 ( input D1, C1, B1, A1, output 
    FCO );
  wire   GNDI;

  ccu20043 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_2_cry_1_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), 
    .D1(D1), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_200 ( input B0, A0, FCI, output F0, 
    F1 );
  wire   GNDI;

  ccu20054 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_0_cry_15_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20054 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7008;
  defparam inst1.INIT1 = 16'h300A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_201 ( input C1, B1, A1, D0, C0, B0, 
    A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20055 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_0_cry_13_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20055 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7888;
  defparam inst1.INIT1 = 16'h7078;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_202 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_0_cry_11_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_203 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_0_cry_9_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_204 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_0_cry_7_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_205 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_0_cry_5_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_206 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_0_cry_3_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_207 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_0_cry_1_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_208 ( input D1, C1, B1, A1, output 
    FCO );
  wire   GNDI;

  ccu20043 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_0_cry_0_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), 
    .D1(D1), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_209 ( input FCI, output F0 );
  wire   GNDI;

  ccu2 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_16_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_210 ( input B1, A1, C0, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20056 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_15_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20056 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h50A6;
  defparam inst1.INIT1 = 16'hF004;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_211 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20057 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_13_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20057 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7078;
  defparam inst1.INIT1 = 16'h30C6;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_212 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20058 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_11_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20058 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5096;
  defparam inst1.INIT1 = 16'h306C;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_213 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20058 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_9_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_214 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20059 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_7_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20059 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3096;
  defparam inst1.INIT1 = 16'h506A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_215 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20058 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_5_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_216 ( input C1, B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20060 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_3_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20060 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h3006;
  defparam inst1.INIT1 = 16'h306C;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_217 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20061 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_1_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20061 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9096;
  defparam inst1.INIT1 = 16'h506A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_218 ( input C1, B1, A1, output FCO );
  wire   GNDI;

  ccu20062 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_0_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20062 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'h7078;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_219 ( input FCI, output F0 );
  wire   GNDI;

  ccu2 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_1_cry_15_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_220 ( input B1, A1, D0, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20041 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_1_cry_14_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_221 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_1_cry_12_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_222 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_1_cry_10_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_223 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_1_cry_8_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_224 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_1_cry_6_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_225 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_1_cry_4_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_226 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, FCI, output F0, F1, FCO );

  ccu20042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_1_cry_2_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_227 ( input D1, C1, B1, A1, output 
    FCO );
  wire   GNDI;

  ccu20043 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_1_cry_1_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), 
    .D1(D1), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_228 ( input C1, B1, A1, B0, A0, FCI, 
    output F0, F1 );
  wire   GNDI;

  ccu20063 \coreInst/fullALUInst/aluInst/un47_RESULT.un47_RESULT_cry_15_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20063 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF007;
  defparam inst1.INIT1 = 16'h3037;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_229 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20064 \coreInst/fullALUInst/aluInst/un47_RESULT.un47_RESULT_cry_13_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20064 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF007;
  defparam inst1.INIT1 = 16'hF007;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_230 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20064 \coreInst/fullALUInst/aluInst/un47_RESULT.un47_RESULT_cry_11_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_231 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20064 \coreInst/fullALUInst/aluInst/un47_RESULT.un47_RESULT_cry_9_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_232 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20064 \coreInst/fullALUInst/aluInst/un47_RESULT.un47_RESULT_cry_7_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_233 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20064 \coreInst/fullALUInst/aluInst/un47_RESULT.un47_RESULT_cry_5_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_234 ( input B1, A1, A0, FCI, output 
    F0, F1, FCO );
  wire   GNDI;

  ccu20065 \coreInst/fullALUInst/aluInst/un47_RESULT.un47_RESULT_cry_3_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20065 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF001;
  defparam inst1.INIT1 = 16'h500C;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_235 ( input A1, A0, FCI, output F0, 
    F1, FCO );
  wire   GNDI;

  ccu20066 \coreInst/fullALUInst/aluInst/un47_RESULT.un47_RESULT_cry_1_0 ( 
    .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20066 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF001;
  defparam inst1.INIT1 = 16'hF001;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_236 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20008 \coreInst/fullALUInst/aluInst/un47_RESULT.un47_RESULT_cry_0_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_237 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1 );
  wire   GNDI;

  ccu20067 \coreInst/fullALUInst/aluInst/un1_RESULT_cry_15_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20067 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7078;
  defparam inst1.INIT1 = 16'h506A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_238 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20068 \coreInst/fullALUInst/aluInst/un1_RESULT_cry_13_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20068 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7078;
  defparam inst1.INIT1 = 16'h7078;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_239 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20068 \coreInst/fullALUInst/aluInst/un1_RESULT_cry_11_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_240 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20068 \coreInst/fullALUInst/aluInst/un1_RESULT_cry_9_0 ( .A0(A0), .B0(B0), 
    .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_241 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20068 \coreInst/fullALUInst/aluInst/un1_RESULT_cry_7_0 ( .A0(A0), .B0(B0), 
    .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_242 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20068 \coreInst/fullALUInst/aluInst/un1_RESULT_cry_5_0 ( .A0(A0), .B0(B0), 
    .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_243 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \coreInst/fullALUInst/aluInst/un1_RESULT_cry_3_0 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_244 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un1_RESULT_cry_1_0 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_245 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20034 \coreInst/fullALUInst/aluInst/un1_RESULT_cry_0_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_246 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1 );
  wire   GNDI;

  ccu20069 \coreInst/fullALUInst/aluInst/un10_RESULT_cry_15_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20069 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h8087;
  defparam inst1.INIT1 = 16'h5095;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_247 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20070 \coreInst/fullALUInst/aluInst/un10_RESULT_cry_13_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20070 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h8087;
  defparam inst1.INIT1 = 16'h8087;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_248 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20070 \coreInst/fullALUInst/aluInst/un10_RESULT_cry_11_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_249 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20070 \coreInst/fullALUInst/aluInst/un10_RESULT_cry_9_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_250 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20070 \coreInst/fullALUInst/aluInst/un10_RESULT_cry_7_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_251 ( input C1, B1, A1, C0, B0, A0, 
    FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20070 \coreInst/fullALUInst/aluInst/un10_RESULT_cry_5_0 ( .A0(A0), 
    .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_252 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20071 \coreInst/fullALUInst/aluInst/un10_RESULT_cry_3_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20071 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hC009;
  defparam inst1.INIT1 = 16'hC009;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_253 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20072 \coreInst/fullALUInst/aluInst/un10_RESULT_cry_1_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20072 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hA009;
  defparam inst1.INIT1 = 16'hC009;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_254 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20073 \coreInst/fullALUInst/aluInst/un10_RESULT_cry_0_0 ( .A0(GNDI), 
    .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20073 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h000A;
  defparam inst1.INIT1 = 16'hC009;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_255 ( input B0, A0, FCI, output F0 );
  wire   GNDI;

  ccu20074 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_s_16_s0_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20074 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5006;
  defparam inst1.INIT1 = 16'h300A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_fullALUInst_aluInst_SLICE_256 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_14_s0_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_257 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_12_s0_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_258 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_10_s0_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_259 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20036 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_8_s0_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_260 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_6_s0_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_261 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_4_s0_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_262 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_2_s0_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_263 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20037 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_1_s0_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_264 ( input B1, A1, B0, A0, FCI, 
    output F0, F1 );
  wire   GNDI;

  ccu20031 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_15_s1_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_265 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_13_s1_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_266 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_11_s1_0 ( 
    .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), 
    .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_267 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20036 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_9_s1_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_268 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20031 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_7_s1_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_269 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20036 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_5_s1_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_270 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20029 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_3_s1_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_271 ( input B1, A1, B0, A0, FCI, 
    output F0, F1, FCO );
  wire   GNDI;

  ccu20030 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_1_s1_0 ( .A0(A0), 
    .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), 
    .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_272 ( input A1, output FCO );
  wire   GNDI;

  ccu20022 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_0_s1_0 ( 
    .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), 
    .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_debugger_addrH_SLICE_273 ( input C0, B0, A0, DI0, CE, LSR, CLK, 
    FCI, output F0, Q0 );
  wire   VCCI, LSR_NOTIN, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0018 \coreInst/debugger/addrH/Q[7] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  ccu20075 \coreInst/debugger/addrH/Q_s_0[7] ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module ccu20075 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h30E2;
  defparam inst1.INIT1 = 16'h300A;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_debugger_addrH_SLICE_274 ( input C1, B1, A1, C0, B0, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, LSR_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0018 \coreInst/debugger/addrH/Q[6] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrH/Q[5] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  ccu20076 \coreInst/debugger/addrH/Q_cry_0[5] ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20076 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF0E2;
  defparam inst1.INIT1 = 16'hF0E2;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_debugger_addrH_SLICE_275 ( input C1, B1, A1, C0, B0, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, LSR_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0018 \coreInst/debugger/addrH/Q[4] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrH/Q[3] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  ccu20076 \coreInst/debugger/addrH/Q_cry_0[3] ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module coreInst_debugger_addrH_SLICE_276 ( input C1, B1, A1, C0, B0, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, LSR_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0018 \coreInst/debugger/addrH/Q[2] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrH/Q[1] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  ccu20076 \coreInst/debugger/addrH/Q_cry_0[1] ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module coreInst_debugger_addrH_SLICE_277 ( input C1, B1, A1, B0, DI1, CE, LSR, 
    CLK, output F1, Q1, FCO );
  wire   VCCI, LSR_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0018 \coreInst/debugger/addrH/Q[0] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  ccu20077 \coreInst/debugger/addrH/Q_cry_0[0] ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20077 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h300A;
  defparam inst1.INIT1 = 16'hF0E2;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_debugger_addrL_SLICE_278 ( input C1, B1, A1, C0, B0, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1 );
  wire   VCCI, LSR_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0018 \coreInst/debugger/addrL/Q[6] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrL/Q[5] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  ccu20078 \coreInst/debugger/addrL/Q_cry_0[5] ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20078 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF0E4;
  defparam inst1.INIT1 = 16'h50E4;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_debugger_addrL_SLICE_279 ( input C1, B1, A1, C0, B0, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, LSR_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0018 \coreInst/debugger/addrL/Q[4] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrL/Q[3] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  ccu20076 \coreInst/debugger/addrL/Q_cry_0[3] ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module coreInst_debugger_addrL_SLICE_280 ( input C1, B1, A1, C0, B0, A0, DI1, 
    DI0, CE, LSR, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, LSR_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0018 \coreInst/debugger/addrL/Q[2] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrL/Q[1] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  ccu20079 \coreInst/debugger/addrL/Q_cry_0[1] ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20079 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF0E4;
  defparam inst1.INIT1 = 16'hF0E4;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module coreInst_debugger_addrL_SLICE_281 ( input C1, B1, A1, B0, DI1, CE, LSR, 
    CLK, output F1, Q1, FCO );
  wire   VCCI, LSR_NOTIN, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0018 \coreInst/debugger/addrL/Q[0] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  ccu20077 \coreInst/debugger/addrL/Q_cry_0[0] ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module coreInst_SLICE_282 ( input A1, B0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20009 \coreInst/un1_HERE_cry_13_0 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_283 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 \coreInst/un1_HERE_cry_11_0 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_284 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 \coreInst/un1_HERE_cry_9_0 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_285 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 \coreInst/un1_HERE_cry_7_0 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_286 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 \coreInst/un1_HERE_cry_5_0 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_287 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 \coreInst/un1_HERE_cry_3_0 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_288 ( input A1, B0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 \coreInst/un1_HERE_cry_1_0 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_interruptMaskRegisterInst_SLICE_289 ( input D0, C0, B0, 
    A0, DI0, CLK, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut4 \mcuResourcesInst/interruptMaskRegisterInst/INT1_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/INT1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_290 ( input B1, A1, D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40080 \coreInst/generalGroupDecoderInst/EIX6_0_a2 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40081 \coreInst/busControllerInst/sequencer/RDN_BUF_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0011 \coreInst/busControllerInst/sequencer/RDN_BUF ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F07) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_sequencer_SLICE_291 ( input D1, C1, B1, A1, 
    D0, C0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40082 \coreInst/busControllerInst/sequencer/WRN1_BUF_3_0 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40083 \coreInst/busControllerInst/sequencer/WRN0_BUF_3_0 ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0011 \coreInst/busControllerInst/sequencer/WRN1_BUF ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0011 \coreInst/busControllerInst/sequencer/WRN0_BUF ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8FFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF5F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_293 ( input D1, C1, B1, A1, D0, C0, B0, DI0, M0, CE, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_293/SLICE_293_K1_H1 , GNDI, 
         \SLICE_293/mcuResourcesInst/memoryMapperInst/CPU_DIN[10]/GATE_H0 , 
         VCCI, CLK_NOTIN, DI0_dly, CLK_dly, CE_dly;

  lut40084 SLICE_293_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_293/SLICE_293_K1_H1 ));
  lut40085 \mcuResourcesInst/memoryMapperInst/CPU_DIN[10]/GATE ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_293/mcuResourcesInst/memoryMapperInst/CPU_DIN[10]/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/instructionLatchInst/INSTRUCTION[10] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  selmux2 SLICE_293_K0K1MUX( 
    .D0(\SLICE_293/mcuResourcesInst/memoryMapperInst/CPU_DIN[10]/GATE_H0 ), 
    .D1(\SLICE_293/SLICE_293_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0032) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module SLICE_294 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40086 \mcuResourcesInst/memoryMapperInst/CPU_DIN[13] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40087 \mcuResourcesInst/memoryMapperInst/CPU_DIN[12] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/instructionLatchInst/INSTRUCTION[13] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/instructionLatchInst/INSTRUCTION[12] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C5C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h101F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_interruptStateMachineInst_SLICE_295 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, DI0, CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40088 \coreInst/interruptStateMachineInst/STATE_ns_i_i_0_a2_0[0] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40089 \coreInst/interruptStateMachineInst/STATE_ns_i_i_0[0] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0011 \coreInst/interruptStateMachineInst/STATE[0] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0070) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFAE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_296 ( input C1, B1, A1, D0, C0, B0, A0, DI0, 
    M0, CE, CLK, output OFX0, Q0 );
  wire   GNDI, 
         \coreInst/fullALUInst/SLICE_296/coreInst/fullALUInst/SLICE_296_K1_H1 , 
         \coreInst/fullALUInst/SLICE_296/coreInst/fullALUInst/aluInst/PARITY_u/GATE_H0 
         , VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40090 \coreInst/fullALUInst/SLICE_296_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\coreInst/fullALUInst/SLICE_296/coreInst/fullALUInst/SLICE_296_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \coreInst/fullALUInst/aluInst/PARITY_u/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/SLICE_296/coreInst/fullALUInst/aluInst/PARITY_u/GATE_H0 )
    );
  vmuxregsre0010 \coreInst/fullALUInst/ccRegs/CC_RUN_REG[0] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \coreInst/fullALUInst/SLICE_296_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/SLICE_296/coreInst/fullALUInst/aluInst/PARITY_u/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/SLICE_296/coreInst/fullALUInst/SLICE_296_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE0E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_297 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40092 \coreInst/fullALUInst/aluInst/CARRY ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40093 \coreInst/fullALUInst/aluInst/ZERO ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0010 \coreInst/fullALUInst/ccRegs/CC_RUN_REG[2] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/fullALUInst/ccRegs/CC_RUN_REG[1] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_298 ( input C1, B1, A1, D0, C0, B0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40094 \coreInst/busControllerInst/DOUT_BUF_i[15] ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 \coreInst/fullALUInst/aluInst/RESULT[15] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/fullALUInst/ccRegs/CC_RUN_REG[3] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hABAB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_instructionPhaseDecoderInst_SLICE_299 ( input C1, B1, C0, B0, 
    DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40096 \coreInst/instructionPhaseDecoderInst/COMMIT_2_i_a4 ( .A(GNDI), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \coreInst/instructionPhaseDecoderInst/COMMIT_RNO ( .A(GNDI), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0010 \coreInst/instructionPhaseDecoderInst/COMMIT ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0303) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_300 ( input C1, B1, D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40098 \coreInst/debugger/requestGen/dhReqReg/Q_R10 ( .A(GNDI), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 \coreInst/instructionPhaseDecoderInst/PHASE_R_RNO[10] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/instructionPhaseDecoderInst/PHASE_R[10] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFCF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAF8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_301 ( input C1, A1, D0, C0, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40100 \coreInst/opxMultiplexerInst/BUS_SEQX_m1_i_a2[1] ( .A(A1), .B(GNDI), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40101 \coreInst/debugSequencerInst/DEBUG_ADDR_INC_EN_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/debugSequencerInst/DEBUG_ADDR_INC_EN ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0505) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_303 ( input D1, C1, B1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40102 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_o2[8] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \coreInst/debugSequencerInst/DEBUG_LD_DATA_EN_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/debugSequencerInst/DEBUG_LD_DATA_EN ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h333F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_instructionPhaseDecoderInst_SLICE_315 ( input D0, C0, B0, A0, 
    DI0, CLK, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40104 \coreInst/instructionPhaseDecoderInst/DECODE_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/instructionPhaseDecoderInst/DECODE ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFC8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_316 ( input D1, C1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40105 \mcuResourcesInst/memoryMapperInst/CPU_DIN[1] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40106 \mcuResourcesInst/memoryMapperInst/CPU_DIN[0] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[1] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[0] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_317 ( input D1, C1, B1, A1, D0, C0, B0, DI0, M0, CE, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_317/SLICE_317_K1_H1 , GNDI, 
         \SLICE_317/mcuResourcesInst/memoryMapperInst/CPU_DIN[2]/GATE_H0 , 
         VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40107 SLICE_317_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_317/SLICE_317_K1_H1 ));
  lut40108 \mcuResourcesInst/memoryMapperInst/CPU_DIN[2]/GATE ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_317/mcuResourcesInst/memoryMapperInst/CPU_DIN[2]/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[2] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_317_K0K1MUX( 
    .D0(\SLICE_317/mcuResourcesInst/memoryMapperInst/CPU_DIN[2]/GATE_H0 ), 
    .D1(\SLICE_317/SLICE_317_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_318 ( input D1, C1, B1, A1, D0, C0, B0, DI0, M0, CE, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_318/SLICE_318_K1_H1 , GNDI, 
         \SLICE_318/mcuResourcesInst/memoryMapperInst/CPU_DIN[3]/GATE_H0 , 
         VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40109 SLICE_318_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_318/SLICE_318_K1_H1 ));
  lut40085 \mcuResourcesInst/memoryMapperInst/CPU_DIN[3]/GATE ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_318/mcuResourcesInst/memoryMapperInst/CPU_DIN[3]/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[3] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_318_K0K1MUX( 
    .D0(\SLICE_318/mcuResourcesInst/memoryMapperInst/CPU_DIN[3]/GATE_H0 ), 
    .D1(\SLICE_318/SLICE_318_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_319 ( input D1, C1, B1, A1, D0, C0, B0, DI0, M0, CE, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_319/SLICE_319_K1_H1 , GNDI, 
         \SLICE_319/mcuResourcesInst/memoryMapperInst/CPU_DIN[4]/GATE_H0 , 
         VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40110 SLICE_319_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_319/SLICE_319_K1_H1 ));
  lut40111 \mcuResourcesInst/memoryMapperInst/CPU_DIN[4]/GATE ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_319/mcuResourcesInst/memoryMapperInst/CPU_DIN[4]/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[4] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_319_K0K1MUX( 
    .D0(\SLICE_319/mcuResourcesInst/memoryMapperInst/CPU_DIN[4]/GATE_H0 ), 
    .D1(\SLICE_319/SLICE_319_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_320 ( input D1, C1, B1, A1, D0, B0, A0, DI0, M0, CE, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_320/SLICE_320_K1_H1 , GNDI, 
         \SLICE_320/mcuResourcesInst/memoryMapperInst/CPU_DIN[5]/GATE_H0 , 
         VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40112 SLICE_320_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_320/SLICE_320_K1_H1 ));
  lut40113 \mcuResourcesInst/memoryMapperInst/CPU_DIN[5]/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\SLICE_320/mcuResourcesInst/memoryMapperInst/CPU_DIN[5]/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[5] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_320_K0K1MUX( 
    .D0(\SLICE_320/mcuResourcesInst/memoryMapperInst/CPU_DIN[5]/GATE_H0 ), 
    .D1(\SLICE_320/SLICE_320_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDD88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_321 ( input D1, C1, B1, A1, D0, C0, A0, DI0, M0, CE, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_321/SLICE_321_K1_H1 , GNDI, 
         \SLICE_321/mcuResourcesInst/memoryMapperInst/CPU_DIN[6]/GATE_H0 , 
         VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40114 SLICE_321_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_321/SLICE_321_K1_H1 ));
  lut40115 \mcuResourcesInst/memoryMapperInst/CPU_DIN[6]/GATE ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), 
    .Z(\SLICE_321/mcuResourcesInst/memoryMapperInst/CPU_DIN[6]/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[6] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_321_K0K1MUX( 
    .D0(\SLICE_321/mcuResourcesInst/memoryMapperInst/CPU_DIN[6]/GATE_H0 ), 
    .D1(\SLICE_321/SLICE_321_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_322 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, M1, M0, FXB, FXA, 
    CE, CLK, output OFX0, Q1, OFX1 );
  wire   \SLICE_322/mcuResourcesInst/memoryMapperInst/CPU_DIN_RNO[7]/GATE_H1 , 
         \SLICE_322/SLICE_322_K0_H0 , VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40116 \mcuResourcesInst/memoryMapperInst/CPU_DIN_RNO[7]/GATE ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_322/mcuResourcesInst/memoryMapperInst/CPU_DIN_RNO[7]/GATE_H1 ));
  lut40117 SLICE_322_K0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_322/SLICE_322_K0_H0 ));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[7] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_322_K0K1MUX( .D0(\SLICE_322/SLICE_322_K0_H0 ), 
    .D1(\SLICE_322/mcuResourcesInst/memoryMapperInst/CPU_DIN_RNO[7]/GATE_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 SLICE_322_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA280) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_323 ( input D1, C1, B1, A1, D0, C0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   \coreInst/SLICE_323/coreInst/SLICE_323_K1_H1 , GNDI, 
         \coreInst/SLICE_323/coreInst/registerFileInst/regs/registers_0_1_0_RNI46CK9/GATE_H0 
         , VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40118 \coreInst/SLICE_323_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/SLICE_323/coreInst/SLICE_323_K1_H1 ));
  lut40119 \coreInst/registerFileInst/regs/registers_0_1_0_RNI46CK9/GATE ( 
    .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(\coreInst/SLICE_323/coreInst/registerFileInst/regs/registers_0_1_0_RNI46CK9/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[8] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \coreInst/SLICE_323_K0K1MUX ( 
    .D0(\coreInst/SLICE_323/coreInst/registerFileInst/regs/registers_0_1_0_RNI46CK9/GATE_H0 )
    , .D1(\coreInst/SLICE_323/coreInst/SLICE_323_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1011) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAF05) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_324 ( input D1, C1, B1, D0, C0, B0, A0, DI0, M1, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  lut40120 \coreInst/busControllerInst/DOUT_BUF_i[9] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40121 \mcuResourcesInst/memoryMapperInst/CPU_DIN[9] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[10] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[9] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF03) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0355) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_325 ( input D1, C1, A1, D0, C0, B0, A0, DI0, M1, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  lut40122 \coreInst/busControllerInst/DOUT_BUF_i[11] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40123 \mcuResourcesInst/memoryMapperInst/CPU_DIN[11] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[12] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[11] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAAF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h101F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_327 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40124 \mcuResourcesInst/memoryMapperInst/CPU_DIN[15] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40125 \mcuResourcesInst/memoryMapperInst/CPU_DIN[14] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[15] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[14] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1F10) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h11F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_328 ( input D1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40126 \coreInst/jumpGroupDecoderInst/REGB_ADDRX_1_i_o2[0] ( .A(A1), 
    .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40127 \coreInst/generalGroupDecoderInst/DIX_RNO ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/generalGroupDecoderInst/DIX ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h55FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_329 ( input D1, C1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40128 \coreInst/registerSequencerInst/REGA_WEN_3_i_a2_5 ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40129 \coreInst/generalGroupDecoderInst/EI_0_a2 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/generalGroupDecoderInst/EIX ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40129 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_instructionPhaseDecoderInst_SLICE_330 ( input B1, A1, B0, A0, 
    DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40130 \coreInst/instructionPhaseDecoderInst/EXECUTE_2_0_i_a2 ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40131 \coreInst/instructionPhaseDecoderInst/EXECUTE_RNO ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0010 \coreInst/instructionPhaseDecoderInst/EXECUTE ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40131 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_instructionPhaseDecoderInst_SLICE_331 ( input D1, C1, D0, C0, 
    DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40132 \coreInst/instructionPhaseDecoderInst/PHASE_R_RNIILUE[9] ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40133 \coreInst/instructionPhaseDecoderInst/FETCH_2_0_0 ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/instructionPhaseDecoderInst/FETCH ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40133 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_335 ( input D1, C1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40134 \coreInst/opxMultiplexerInst/BUS_SEQX_m0_i_a2[0] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40135 \coreInst/generalGroupDecoderInst/HALTX_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/generalGroupDecoderInst/HALTX ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5505) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40135 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_interruptStateMachineInst_SLICE_341 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, DI1, DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40136 \coreInst/interruptStateMachineInst/PC_NEXTX_NEXT_0_0[1] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40137 \coreInst/interruptStateMachineInst/PC_NEXTX_NEXT_0_0[0] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/interruptStateMachineInst/PC_NEXTX[1] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/interruptStateMachineInst/PC_NEXTX[0] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40136 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40137 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAF8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_342 ( input D1, C1, B1, A1, D0, C0, B0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40138 \coreInst/fullALUInst/ccRegs/CC_INT1_REG_0_sqmuxa ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40139 \coreInst/interruptStateMachineInst/STATE_ns_a3_0_a3_0_a2[7] ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/interruptStateMachineInst/STATE[7] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40139 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_343 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40140 \coreInst/jumpGroupDecoderInst/ADDR_BUSX_1_i_x2[0] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40141 \coreInst/jumpGroupDecoderInst/BUS_SEQX_RNO[1] ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/instructionPhaseDecoderInst/PHASE_R[4] ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/jumpGroupDecoderInst/BUS_SEQX[1] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40140 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC693) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40141 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD0D0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_345 ( input D1, C1, B1, D0, B0, A0, 
    DI1, DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40142 \coreInst/programCounterInst/PC_A_NEXT_6_i_i[1] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40143 \coreInst/programCounterInst/PC_A_NEXT_6_i_i[0] ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0011 \coreInst/programCounterInst/PC_A[1] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/programCounterInst/PC_A[0] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40142 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40143 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_346 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI1, DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40144 \coreInst/programCounterInst/PC_A_NEXT_6_i_i[3] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40145 \coreInst/programCounterInst/PC_A_NEXT_6_i_i[2] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0011 \coreInst/programCounterInst/PC_A[3] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0011 \coreInst/programCounterInst/PC_A[2] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40144 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40145 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFAF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_347 ( input D1, C1, A1, D0, C0, B0, 
    DI1, DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40146 \coreInst/programCounterInst/PC_A_NEXT_6_i_i[5] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40147 \coreInst/programCounterInst/PC_A_NEXT_6_i_i[4] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0011 \coreInst/programCounterInst/PC_A[5] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0011 \coreInst/programCounterInst/PC_A[4] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40146 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40147 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_348 ( input D1, C1, B1, C0, B0, A0, 
    DI1, DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40147 \coreInst/programCounterInst/PC_A_NEXT_6_i_i[7] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40148 \coreInst/programCounterInst/PC_A_NEXT_6_i_i[6] ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0011 \coreInst/programCounterInst/PC_A[7] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0011 \coreInst/programCounterInst/PC_A[6] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40148 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_349 ( input D1, C1, B1, D0, C0, B0, 
    DI1, DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40149 \coreInst/programCounterInst/PC_A_NEXT_6_i_i[9] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40150 \coreInst/programCounterInst/PC_A_NEXT_6_i_i[8] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0011 \coreInst/programCounterInst/PC_A[9] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0011 \coreInst/programCounterInst/PC_A[8] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40150 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_350 ( input D1, C1, A1, C0, B0, A0, 
    DI1, DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40151 \coreInst/programCounterInst/PC_A_NEXT_6_i_i[11] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40152 \coreInst/programCounterInst/PC_A_NEXT_6_0_0[10] ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0011 \coreInst/programCounterInst/PC_A[11] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0011 \coreInst/programCounterInst/PC_A[10] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAF0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40152 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB3B3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_351 ( input D1, C1, A1, D0, C0, B0, 
    DI1, DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40153 \coreInst/programCounterInst/PC_A_NEXT_6_i_i[13] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40154 \coreInst/programCounterInst/PC_A_NEXT_6_i_i[12] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0011 \coreInst/programCounterInst/PC_A[13] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0011 \coreInst/programCounterInst/PC_A[12] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40154 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_352 ( input D1, C1, B1, D0, C0, B0, 
    DI1, DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40155 \coreInst/programCounterInst/PC_A_NEXT_6_0_0[15] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40156 \coreInst/programCounterInst/PC_A_NEXT_6_i_i[14] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0011 \coreInst/programCounterInst/PC_A[15] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0011 \coreInst/programCounterInst/PC_A[14] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40155 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h30FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40156 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF333) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_instructionPhaseDecoderInst_SLICE_353 ( input D1, C1, B1, A1, 
    C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40157 \coreInst/instructionPhaseDecoderInst/PC_STOP_0_a2_0_a2_2 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40158 \coreInst/instructionPhaseDecoderInst/PC_ENX_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0011 \coreInst/instructionPhaseDecoderInst/PC_ENX ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40157 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40158 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7373) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_interruptStateMachineInst_SLICE_354 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, DI0, CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40135 \coreInst/interruptStateMachineInst/PC_NEXTX_NEXT_0_0_a2_3[0] ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40159 \coreInst/interruptStateMachineInst/PC_NEXTX_NEXT_0_0_a2[0] ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/interruptStateMachineInst/PC_LD_INT0 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40159 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_355 ( input D1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40160 \coreInst/busControllerInst/sequencer/ADDR_m10_i_m4_N_2L1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40161 
    \coreInst/interruptStateMachineInst/STATE_NEXT_1_sqmuxa_5_0_a3_0_a3_0_a2 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/interruptStateMachineInst/STATE[1] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40160 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4477) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40161 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerSequencerInst_SLICE_356 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   VCCI, CLK_NOTIN, GNDI, DI0_dly, CLK_dly;

  lut40162 \coreInst/registerSequencerInst/REGA_EN_RNO_0 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40163 \coreInst/registerSequencerInst/REGA_EN_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/registerSequencerInst/REGA_EN ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40162 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hABAF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40163 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0054) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerSequencerInst_SLICE_357 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40164 \coreInst/registerSequencerInst/REGA_WEN_3_i_a2 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40165 \coreInst/registerSequencerInst/REGA_WEN_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/registerSequencerInst/REGA_WEN ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40164 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40165 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerSequencerInst_SLICE_358 ( input C1, B1, A1, D0, C0, B0, 
    A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40166 \coreInst/registerSequencerInst/REGB_EN_3_i_a2 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40167 \coreInst/registerSequencerInst/REGB_EN_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/registerSequencerInst/REGB_EN ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40166 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40167 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h010D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_359 ( input D1, C1, B1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40168 \coreInst/opxMultiplexerInst/ALUA_SRCX_i_o2[0] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40169 \coreInst/registerSequencerInst/REGB_WEN_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/registerSequencerInst/REGB_WEN ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40168 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40169 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_360 ( input D1, C1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40133 \coreInst/aluGroupDecoderInst/PC_OFFSETX10_i_i_o2 ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40170 \coreInst/generalGroupDecoderInst/RETIX_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/generalGroupDecoderInst/RETIX ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40170 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_interruptStateMachineInst_SLICE_361 ( input D1, C1, B1, D0, C0, 
    B0, A0, DI0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40171 \coreInst/interruptStateMachineInst/STATE_ns_0_0_a2_0[4] ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40172 \coreInst/interruptStateMachineInst/STATE_ns_0_0[4] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/interruptStateMachineInst/STATE[4] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40171 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40172 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_sequencer_SLICE_362 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40173 \coreInst/busControllerInst/sequencer/ADDR_BUSX_R_RNO[1] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40174 \coreInst/busControllerInst/sequencer/ADDR_BUSX_R_RNO[0] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/busControllerInst/sequencer/ADDR_BUSX_R[1] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/busControllerInst/sequencer/ADDR_BUSX_R[0] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40173 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0023) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40174 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_363 ( input D1, B1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40175 \coreInst/programCounterInst/N_290_i ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40176 \coreInst/busControllerInst/sequencer/ADDR_BUSX_R_RNO[2] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/busControllerInst/sequencer/ADDR_BUSX_R[2] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40175 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40176 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_addrL_SLICE_364 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, DI0, M1, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, LSR_NOTIN, DI0_dly, CLK_dly, M1_dly, LSR_dly;

  lut40177 \coreInst/debugger/addrL/RO_R6_0_a2_4 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40178 \coreInst/debugger/addrL/RO_R6_0_a2 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrL/PL ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrL/RO ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40177 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40178 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_dataR_SLICE_365 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40179 \coreInst/debugger/dataR/DOUT_RNO[9] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40180 \coreInst/debugger/dataR/DOUT_RNO[8] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[9] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[8] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40179 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0023) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40180 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_dataR_SLICE_366 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40179 \coreInst/debugger/dataR/DOUT_RNO[11] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40181 \coreInst/debugger/dataR/DOUT_RNO[10] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[11] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[10] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40181 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_dataR_SLICE_367 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40182 \coreInst/debugger/dataR/DOUT_RNO[13] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40183 \coreInst/debugger/dataR/DOUT_RNO[12] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[13] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[12] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40182 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0203) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40183 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0051) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_dataR_SLICE_368 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40184 \coreInst/debugger/dataR/DOUT_RNO[15] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40185 \coreInst/debugger/dataR/DOUT_RNO[14] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[15] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[14] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40184 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0501) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40185 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0051) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_dataR_SLICE_369 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40186 \coreInst/debugger/dataR/DOUT_RNO[1] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40187 \coreInst/debugger/dataR/DOUT_RNO[0] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[1] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[0] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40186 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40187 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0032) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_dataR_SLICE_370 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40188 \coreInst/debugger/dataR/DOUT_RNO[3] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40189 \coreInst/debugger/dataR/DOUT_RNO[2] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[3] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[2] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40188 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0504) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40189 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0504) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_dataR_SLICE_371 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40182 \coreInst/debugger/dataR/DOUT_RNO[5] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40190 \coreInst/debugger/dataR/DOUT_RNO[4] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[5] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[4] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40190 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0501) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_dataR_SLICE_372 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40191 \coreInst/debugger/dataR/DOUT_RNO[7] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40192 \coreInst/debugger/dataR/DOUT_RNO[6] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[7] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/dataR/DOUT[6] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40191 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0031) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40192 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0301) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_375 ( input C1, B1, A1, C0, B0, A0, DI0, LSR, 
    CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40193 \coreInst/debugger/decoder/S0 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40194 \coreInst/debugger/decoder/S5 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrH/PL_R ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40193 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40194 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_382 ( input C1, B1, A1, C0, B0, A0, DI0, LSR, 
    CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40195 \coreInst/debugger/decoder/S1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40196 \coreInst/debugger/decoder/S4 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrL/PL_R ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40195 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40196 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_instructionPhaseDecoderInst_SLICE_403 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40197 \coreInst/instructionPhaseDecoderInst/PHASE_R_ns_o4_0_o2_0[1] ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40198 \coreInst/instructionPhaseDecoderInst/PHASE_R_RNO[0] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/instructionPhaseDecoderInst/PHASE_R[1] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0011 \coreInst/instructionPhaseDecoderInst/PHASE_R[0] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40197 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDCCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40198 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_instructionPhaseDecoderInst_SLICE_404 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI0, M1, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40199 \coreInst/instructionPhaseDecoderInst/DECODE_2_0_0_a2_1_a2_RNI7HVP 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40200 \coreInst/instructionPhaseDecoderInst/DECODE_2_0_0_a2_1_a2 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/instructionPhaseDecoderInst/PHASE_R[3] ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/instructionPhaseDecoderInst/PHASE_R[2] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40199 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0057) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40200 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0D0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_instructionPhaseDecoderInst_SLICE_406 ( input D1, C1, B1, D0, 
    C0, B0, A0, DI0, M1, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40201 \coreInst/instructionPhaseDecoderInst/PHASE_R_ns_0_0_o2[5] ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40202 \coreInst/instructionPhaseDecoderInst/PHASE_R_ns_0_0[5] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/instructionPhaseDecoderInst/PHASE_R[6] ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/instructionPhaseDecoderInst/PHASE_R[5] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40201 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFCF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40202 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD5C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_407 ( input D1, A1, D0, C0, A0, DI0, M1, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40203 \coreInst/debugger/requestGen/DEBUG_REQ ( .A(A1), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40204 \coreInst/instructionPhaseDecoderInst/PHASE_R_RNO[7] ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/instructionPhaseDecoderInst/PHASE_R[8] ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/instructionPhaseDecoderInst/PHASE_R[7] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40203 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40204 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_interruptStateMachineInst_SLICE_410 ( input C0, B0, A0, DI0, 
    CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40205 \coreInst/interruptStateMachineInst/EI_2_iv_0_0 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/interruptStateMachineInst/EI ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40205 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCECE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_interruptStateMachineInst_SLICE_411 ( input D1, C1, B1, C0, B0, 
    A0, DI1, DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40206 \coreInst/interruptStateMachineInst/STATE_RNO[3] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40207 \coreInst/interruptStateMachineInst/STATE_RNO[2] ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0010 \coreInst/interruptStateMachineInst/STATE[3] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/interruptStateMachineInst/STATE[2] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40206 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40207 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE0E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_interruptStateMachineInst_SLICE_412 ( input C1, B1, A1, C0, B0, 
    A0, DI1, DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40208 \coreInst/interruptStateMachineInst/STATE_ns_0_0[6] ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40209 \coreInst/interruptStateMachineInst/STATE_ns_0_0[5] ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0010 \coreInst/interruptStateMachineInst/STATE[6] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/interruptStateMachineInst/STATE[5] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40208 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBABA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40209 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF2F2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_interruptStateMachineInst_SLICE_413 ( input D1, A1, D0, C0, 
    DI1, DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40210 \coreInst/interruptStateMachineInst/STATE_ns_a3_0_a3_0_a2[9] ( 
    .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40211 \coreInst/interruptStateMachineInst/STATE_ns_a3_0_a3_0_a2[8] ( 
    .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/interruptStateMachineInst/STATE[9] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/interruptStateMachineInst/STATE[8] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40210 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40211 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_414 ( input D1, C1, B1, A1, D0, C0, 
    A0, DI0, M1, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  lut40212 \coreInst/programCounterInst/ARGB_3_0[0] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40213 \coreInst/programCounterInst/SUM_axb_0 ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[1] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[0] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40212 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40213 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAA5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_SLICE_423 ( input D1, C1, A1, D0, B0, A0, DI1, 
    DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40214 \mcuResourcesInst/UARTInst/DOUT_RNO[1] ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40215 \mcuResourcesInst/UARTInst/DOUT_RNO[0] ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/DOUT[1] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/DOUT[0] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40214 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40215 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_SLICE_424 ( input C1, A1, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40216 \mcuResourcesInst/memoryMapperInst/RD_UART ( .A(A1), .B(GNDI), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40217 \mcuResourcesInst/UARTInst/DOUT_RNO[2] ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/DOUT[2] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40216 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5050) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40217 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_interruptMaskRegisterInst_SLICE_425 ( input D1, C1, B1, 
    A1, C0, B0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40218 \mcuResourcesInst/interruptMaskRegisterInst/un34_PRI_m5s4 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40219 \mcuResourcesInst/interruptMaskRegisterInst/INTS[2] ( .A(GNDI), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[2] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40218 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40219 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_426 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40220 \mcuResourcesInst/memoryMapperInst/EN_RAM ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40221 \coreInst/busControllerInst/DOUT_BUF_0[2] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[2] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40220 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0028) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40221 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAE0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_interruptMaskRegisterInst_SLICE_427 ( input D1, B1, A1, 
    D0, C0, A0, DI0, M0, CLK, output OFX0, Q0 );
  wire   GNDI, 
         \mcuResourcesInst/interruptMaskRegisterInst/SLICE_427/mcuResourcesInst/interruptMaskRegisterInst/SLICE_427_K1_H1 
         , 
         \mcuResourcesInst/interruptMaskRegisterInst/SLICE_427/mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[2]/GATE_H0 
         , VCCI, DI0_dly, CLK_dly;

  lut40222 \mcuResourcesInst/interruptMaskRegisterInst/SLICE_427_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), 
    .Z(\mcuResourcesInst/interruptMaskRegisterInst/SLICE_427/mcuResourcesInst/interruptMaskRegisterInst/SLICE_427_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40223 \mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[2]/GATE ( 
    .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/interruptMaskRegisterInst/SLICE_427/mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[2]/GATE_H0 )
    );
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/PRI_REG[2] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \mcuResourcesInst/interruptMaskRegisterInst/SLICE_427_K0K1MUX ( 
    .D0(\mcuResourcesInst/interruptMaskRegisterInst/SLICE_427/mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[2]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/interruptMaskRegisterInst/SLICE_427/mcuResourcesInst/interruptMaskRegisterInst/SLICE_427_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40222 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0011) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40223 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_SLICE_428 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, DI0, CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40224 \mcuResourcesInst/UARTInst/DATA_AVAILABLE_R_1_sqmuxa_i_0 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40225 \mcuResourcesInst/UARTInst/DATA_AVAILABLE_R_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/DATA_AVAILABLE_R ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40224 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCECC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40225 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_SLICE_429 ( input D1, C1, A1, D0, C0, A0, DI0, 
    M0, CE, LSR, CLK, output OFX0, Q0 );
  wire   GNDI, 
         \mcuResourcesInst/UARTInst/SLICE_429/mcuResourcesInst/UARTInst/SLICE_429_K1_H1 
         , 
         \mcuResourcesInst/UARTInst/SLICE_429/mcuResourcesInst/UARTInst/DOUT_RNO[3]/GATE_H0 
         , VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40226 \mcuResourcesInst/UARTInst/SLICE_429_K1 ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), 
    .Z(\mcuResourcesInst/UARTInst/SLICE_429/mcuResourcesInst/UARTInst/SLICE_429_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40227 \mcuResourcesInst/UARTInst/DOUT_RNO[3]/GATE ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/UARTInst/SLICE_429/mcuResourcesInst/UARTInst/DOUT_RNO[3]/GATE_H0 )
    );
  vmuxregsre \mcuResourcesInst/UARTInst/DOUT[3] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \mcuResourcesInst/UARTInst/SLICE_429_K0K1MUX ( 
    .D0(\mcuResourcesInst/UARTInst/SLICE_429/mcuResourcesInst/UARTInst/DOUT_RNO[3]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/UARTInst/SLICE_429/mcuResourcesInst/UARTInst/SLICE_429_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40226 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40227 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_SLICE_430 ( input D1, C1, B1, A1, D0, C0, B0, 
    DI1, DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40228 \mcuResourcesInst/UARTInst/DOUT_7_m_0[5] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40229 \mcuResourcesInst/UARTInst/DOUT_RNO[4] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/DOUT[5] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/DOUT[4] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40228 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40229 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_SLICE_431 ( input D1, C1, A1, D0, C0, B0, A0, 
    DI0, CE, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40230 \mcuResourcesInst/UARTInst/DOUT_RNO_0[6] ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40231 \mcuResourcesInst/UARTInst/DOUT_RNO[6] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/DOUT[6] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40230 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40231 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3B08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_SLICE_432 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, DI0, CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40232 \mcuResourcesInst/UARTInst/DOUT_7_m_0_a2_0_0[7] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40233 \mcuResourcesInst/UARTInst/DOUT_7_m_0[7] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/DOUT[7] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40232 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3022) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40233 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE0A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_SLICE_433 ( input D1, C1, B1, D0, C0, B0, DI1, 
    DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40234 \mcuResourcesInst/UARTInst/DOUT_RNO[10] ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40235 \mcuResourcesInst/UARTInst/DOUT_RNO[9] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/DOUT[10] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/DOUT[9] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40234 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40235 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_SLICE_434 ( input D1, C1, B1, D0, C0, A0, DI1, 
    DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40236 \mcuResourcesInst/UARTInst/DOUT_RNO[12] ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40230 \mcuResourcesInst/UARTInst/DOUT_RNO[11] ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/DOUT[12] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/DOUT[11] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40236 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_SLICE_435 ( input D1, C1, B1, D0, C0, B0, DI1, 
    DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40234 \mcuResourcesInst/UARTInst/DOUT_RNO[14] ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40234 \mcuResourcesInst/UARTInst/DOUT_RNO[13] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/DOUT[14] ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/DOUT[13] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mcuResourcesInst_SLICE_436 ( input D1, B1, A1, D0, B0, A0, DI0, CE, LSR, 
    CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40237 \mcuResourcesInst/interruptMaskRegisterInst/DOUT_1_1[6] ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40238 \mcuResourcesInst/UARTInst/DOUT_RNO[15] ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/DOUT[15] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40237 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40238 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_interruptMaskRegisterInst_SLICE_437 ( input D1, B1, A1, 
    C0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40239 \mcuResourcesInst/interruptMaskRegisterInst/INTS[7] ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40240 \mcuResourcesInst/interruptMaskRegisterInst/INTS[4] ( .A(A0), 
    .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[7] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[4] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40239 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40240 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_438 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40241 \coreInst/busControllerInst/DOUT_BUF_0[7] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40241 \coreInst/busControllerInst/DOUT_BUF_0[4] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[7] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[4] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40241 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_interruptMaskRegisterInst_SLICE_439 ( input D1, C1, B1, 
    C0, B0, A0, DI0, M0, CLK, output OFX0, Q0 );
  wire   GNDI, 
         \mcuResourcesInst/interruptMaskRegisterInst/SLICE_439/mcuResourcesInst/interruptMaskRegisterInst/SLICE_439_K1_H1 
         , 
         \mcuResourcesInst/interruptMaskRegisterInst/SLICE_439/mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[1]/GATE_H0 
         , VCCI, DI0_dly, CLK_dly;

  lut40242 \mcuResourcesInst/interruptMaskRegisterInst/SLICE_439_K1 ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/interruptMaskRegisterInst/SLICE_439/mcuResourcesInst/interruptMaskRegisterInst/SLICE_439_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40243 \mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[1]/GATE ( 
    .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\mcuResourcesInst/interruptMaskRegisterInst/SLICE_439/mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[1]/GATE_H0 )
    );
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/PRI_REG[1] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \mcuResourcesInst/interruptMaskRegisterInst/SLICE_439_K0K1MUX ( 
    .D0(\mcuResourcesInst/interruptMaskRegisterInst/SLICE_439/mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[1]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/interruptMaskRegisterInst/SLICE_439/mcuResourcesInst/interruptMaskRegisterInst/SLICE_439_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40242 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40243 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0E0E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_440 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40244 \coreInst/busControllerInst/ADDR_BUF_i_a2_0_RNI7OBD1[5] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40245 \coreInst/busControllerInst/ADDR_BUF_i_2_RNI3UF73[10] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/RAMInst/FF_1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40244 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0051) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40245 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4405) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_441 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40246 \coreInst/busControllerInst/ADDR_BUF_i_2_RNIJUR35[9] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40247 \coreInst/busControllerInst/ADDR_BUF_i_2_RNI20UU4[11] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/RAMInst/FF_0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40246 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3011) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40247 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_SLICE_442 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, DI0, CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40248 \mcuResourcesInst/UARTInst/DOUT_23 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40249 \mcuResourcesInst/UARTInst/TXI_R_0_sqmuxa_i ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/TXI_R ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40248 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5455) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40249 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_443 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40250 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_RX_DV9_i_0 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40251 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV_r ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40250 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0255) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40251 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_SLICE_444 ( input D1, C1, A1, D0, C0, A0, DI0, CE, LSR, 
    CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40252 \mcuResourcesInst/interruptMaskRegisterInst/DOUT_1_1[3] ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40253 \mcuResourcesInst/UARTInst/DOUT_RNO[8] ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/DOUT[8] ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40252 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40253 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_452 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40254 \coreInst/busControllerInst/DOUT_BUF_0[1] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40255 \coreInst/busControllerInst/DOUT_BUF_0[0] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/RX_CLK_DIV[1] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/RX_CLK_DIV[0] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40254 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0EC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40255 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB3A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_454 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M1, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  lut40256 \coreInst/opxMultiplexerInst/ALUB_SRCX_i_o2[2] ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40241 \coreInst/busControllerInst/DOUT_BUF_0[3] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/RX_CLK_DIV[4] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0011 \mcuResourcesInst/UARTInst/RX_CLK_DIV[3] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40256 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_455 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40257 \coreInst/busControllerInst/DOUT_BUF_0[6] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40257 \coreInst/busControllerInst/DOUT_BUF_0[5] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0011 \mcuResourcesInst/UARTInst/RX_CLK_DIV[6] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0011 \mcuResourcesInst/UARTInst/RX_CLK_DIV[5] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40257 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0EA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_457 ( input C1, B1, A1, D0, C0, A0, DI1, DI0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40258 \coreInst/busControllerInst/DOUT_BUF_i_0_RNIBASU[9] ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40259 \coreInst/busControllerInst/DOUT_BUF_i_0_RNIU2K11[8] ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/RX_CLK_DIV[9] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/RX_CLK_DIV[8] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40258 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3232) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40259 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F05) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_458 ( input D1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40260 \coreInst/busControllerInst/DOUT_BUF_i_0_RNITNV31[11] ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40258 \coreInst/busControllerInst/DOUT_BUF_i_0_RNIRLV31[10] ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/RX_CLK_DIV[11] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/RX_CLK_DIV[10] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40260 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00EE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_459 ( input D1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40261 \coreInst/busControllerInst/DOUT_BUF_i_0_RNI1SV31[13] ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40262 \coreInst/busControllerInst/DOUT_BUF_i_0_RNIVPV31[12] ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/RX_CLK_DIV[13] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/RX_CLK_DIV[12] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40261 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5544) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40262 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0E0E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_460 ( input D1, C1, A1, D0, B0, A0, DI1, DI0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40263 \coreInst/busControllerInst/DOUT_BUF_i_0_RNI50041[15] ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40264 \coreInst/busControllerInst/DOUT_BUF_i_0_RNI3UV31[14] ( .A(A0), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/RX_CLK_DIV[15] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/RX_CLK_DIV[14] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40263 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5550) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40264 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5544) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_461 ( input D1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40265 \coreInst/programCounterInst/ARGA_0_iv_i_a2_0[1] ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40266 \mcuResourcesInst/UARTInst/START_TX_1_sqmuxa_0_a2 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/START_TX ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40265 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40266 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_462 ( input C1, A1, C0, DI0, 
    CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40267 \mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_ns_0_a2_0_0[0] ( 
    .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40268 \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Active_RNO ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Active ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40267 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5050) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40268 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_471 ( input M1, M0, CE, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40269 GND( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/TX_CLK_DIV[15] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/TX_CLK_DIV[14] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40269 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_SLICE_472 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, 
    CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40270 \mcuResourcesInst/memoryMapperInst/INT_MAP_4_i_o2_RNIPN973 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40271 \mcuResourcesInst/UARTInst/TX_COMPLETE_R_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0011 \mcuResourcesInst/UARTInst/TX_COMPLETE_R ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40270 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFB3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40271 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF7F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_473 ( input D1, C1, B1, A1, 
    D0, C0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40272 
    \mcuResourcesInst/UARTInst/uartTxInst/r_Clock_Count15_cry_16_0_RNIBNIL ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40273 \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Active_1_sqmuxa_0_a2 ( 
    .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Done ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40272 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0307) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40273 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_474 ( input D1, C1, B1, A1, 
    D0, B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40274 \mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index_RNO[1] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40275 \mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index_RNO[0] ( .A(A0), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[1] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[0] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40274 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2212) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40275 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4411) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_475 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI0, LSR, CLK, output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40276 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_SM_Main_9_i ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40277 \mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index_5[2] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index[2] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40276 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40277 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1230) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_476 ( input B1, A1, D0, A0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40080 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[1] ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40278 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[0] ( .A(A0), 
    .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[1] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[0] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40278 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5500) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_477 ( input C1, A1, C0, B0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40279 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[3] ( .A(A1), 
    .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40280 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[2] ( .A(GNDI), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[3] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[2] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40279 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40280 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_478 ( input D1, C1, C0, A0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40281 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[5] ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40279 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[4] ( .A(A0), 
    .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[5] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[4] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40281 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_479 ( input D1, C1, D0, B0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40282 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[7] ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40283 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[6] ( .A(GNDI), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[7] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[6] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40282 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40283 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_480 ( input C1, A1, D0, C0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40279 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[9] ( .A(A1), 
    .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40281 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[8] ( .A(GNDI), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[9] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[8] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_481 ( input C1, B1, C0, B0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40284 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[11] ( 
    .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40280 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[10] ( 
    .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[11] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[10] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40284 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_482 ( input B1, A1, D0, B0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40080 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[13] ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40285 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[12] ( 
    .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[13] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[12] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40285 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_483 ( input C1, A1, C0, B0, 
    DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40279 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[15] ( .A(A1), 
    .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40280 \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count_8[14] ( 
    .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[15] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartRXInst/r_Clock_Count[14] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_484 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40286 \mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_8_1_0_.m11_0 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40287 \mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_8_1_0_.m7_0 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[1] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[0] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40286 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40287 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFCE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_485 ( input C1, B1, A1, D0, 
    C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40288 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_DV8_0_a2 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40289 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_RX_DV9_i_a2_0 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main[2] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40288 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40289 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_486 ( input D1, A1, D0, C0, 
    B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40290 \mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index_RNO[1] ( .A(A1), 
    .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40291 \mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index_RNO[0] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[1] ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[0] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40290 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h55AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40291 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA9A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_487 ( input D1, C1, B1, A1, 
    D0, B0, A0, DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40292 
    \mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_ns_0_a2_1_3_RNIVURS[0] ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40293 \mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index_RNO[2] ( .A(A0), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \mcuResourcesInst/UARTInst/uartTxInst/r_Bit_Index[2] ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40292 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40293 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h66AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_488 ( input D1, B1, A1, D0, 
    C0, B0, A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40294 \mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_RNO[1] ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40295 \mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_ns_0[0] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[1] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main[0] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40294 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBB44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40295 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBD8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_489 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40296 \coreInst/debugger/DEBUG_DOUT[3] ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40297 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[1] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[1] ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[0] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40296 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40297 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h11F1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_490 ( input D1, C1, C0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40298 \coreInst/debugger/requestGen/dhReqReg/Q_R_RNO[0] ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40268 \coreInst/debugger/addrL/PL_RNIP78C ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[3] ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[2] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40298 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_491 ( input B1, C0, B0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40299 \coreInst/debugger/addrH/PL_RNILRR7 ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40300 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_1_0_RNIOGGG ( 
    .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[5] ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[4] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40299 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3333) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40300 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3C3C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_492 ( input D1, C1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40301 \coreInst/fullALUInst/aluInst/PARITY_2_3_RNO ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40302 
    \coreInst/fullALUInst/aluInst/un47_RESULT.un47_RESULT_cry_11_0_RNILU9H ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[7] ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartTxInst/r_TX_Data[6] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40301 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40302 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_interruptMaskRegisterInst_SLICE_493 ( input D1, A1, D0, 
    B0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40210 \mcuResourcesInst/interruptMaskRegisterInst/INTS[3] ( .A(A1), 
    .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40303 \mcuResourcesInst/interruptMaskRegisterInst/INTS[1] ( .A(GNDI), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[3] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[1] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40303 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_interruptMaskRegisterInst_SLICE_494 ( input D1, C1, C0, 
    A0, DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40211 \mcuResourcesInst/interruptMaskRegisterInst/INTS[6] ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40304 \mcuResourcesInst/interruptMaskRegisterInst/INTS[5] ( .A(A0), 
    .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[6] ( 
    .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/INTS_REG[5] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40304 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_495 ( input C1, B1, A1, D0, C0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40305 \coreInst/fullALUInst/aluInst/RESULT_10_28 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40298 \coreInst/fullALUInst/ccRegs/m14_m3_0_a2_1_0 ( .A(GNDI), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[1] ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[0] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40305 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_496 ( input C1, B1, D0, C0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40306 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_3L3 ( .A(GNDI), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40307 \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[6] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[5] ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[3] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40306 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3F3F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40307 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_SLICE_497 ( input D1, C1, B1, A1, D0, C0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40308 \mcuResourcesInst/UARTInst/DOUT_7_m_0_a2_0_0[5] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40309 \mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_8_1_0_.m11_0_o2 ( 
    .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG[6] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40308 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40309 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_interruptMaskRegisterInst_SLICE_498 ( input D1, B1, A1, 
    D0, C0, A0, DI0, M0, CLK, output OFX0, Q0 );
  wire   GNDI, 
         \mcuResourcesInst/interruptMaskRegisterInst/SLICE_498/mcuResourcesInst/interruptMaskRegisterInst/SLICE_498_K1_H1 
         , 
         \mcuResourcesInst/interruptMaskRegisterInst/SLICE_498/mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[0]/GATE_H0 
         , VCCI, DI0_dly, CLK_dly;

  lut40310 \mcuResourcesInst/interruptMaskRegisterInst/SLICE_498_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), 
    .Z(\mcuResourcesInst/interruptMaskRegisterInst/SLICE_498/mcuResourcesInst/interruptMaskRegisterInst/SLICE_498_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40311 \mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[0]/GATE ( 
    .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/interruptMaskRegisterInst/SLICE_498/mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[0]/GATE_H0 )
    );
  vmuxregsre0010 \mcuResourcesInst/interruptMaskRegisterInst/PRI_REG[0] ( 
    .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \mcuResourcesInst/interruptMaskRegisterInst/SLICE_498_K0K1MUX ( 
    .D0(\mcuResourcesInst/interruptMaskRegisterInst/SLICE_498/mcuResourcesInst/interruptMaskRegisterInst/un34_PRI[0]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/interruptMaskRegisterInst/SLICE_498/mcuResourcesInst/interruptMaskRegisterInst/SLICE_498_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40310 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40311 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0FA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module 
  mcuResourcesInst_interruptMaskRegisterInst_MASK_REG_RNIDJO72_0__SLICE_499 ( 
    input D1, B1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/SLICE_499/mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/SLICE_499_K1_H1 
         , 
         \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/SLICE_499/mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/GATE_H0 
         ;

  lut40312 
    \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/SLICE_499_K1 
    ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/SLICE_499/mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/SLICE_499_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40313 
    \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/GATE ( 
    .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/SLICE_499/mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/GATE_H0 )
    );
  selmux2 
    \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/SLICE_499_K0K1MUX 
    ( 
    .D0(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/SLICE_499/mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/SLICE_499/mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_RNIDJO72[0]/SLICE_499_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40312 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40313 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_o_TX_Serial_2_6_SLICE_500 ( input 
    D1, C1, A1, D0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/SLICE_500/mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/SLICE_500_K1_H1 
         , 
         \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/SLICE_500/mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/GATE_H0 
         ;

  lut40314 \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/SLICE_500_K1 
    ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/SLICE_500/mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/SLICE_500_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40315 \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/GATE ( .A(A0), 
    .B(B0), .C(GNDI), .D(D0), 
    .Z(\mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/SLICE_500/mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/GATE_H0 )
    );
  selmux2 
    \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/SLICE_500_K0K1MUX ( 
    .D0(\mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/SLICE_500/mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/SLICE_500/mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/SLICE_500_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 
    \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_6/SLICE_500_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40314 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40315 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_o_TX_Serial_2_3_SLICE_501 ( input 
    C1, B1, A1, D0, C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/SLICE_501/mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/SLICE_501_K1_H1 
         , 
         \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/SLICE_501/mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/GATE_H0 
         ;

  lut40316 \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/SLICE_501_K1 
    ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/SLICE_501/mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/SLICE_501_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40317 \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/GATE ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/SLICE_501/mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/GATE_H0 )
    );
  selmux2 
    \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/SLICE_501_K0K1MUX ( 
    .D0(\mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/SLICE_501/mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/SLICE_501/mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_2_3/SLICE_501_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40316 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40317 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA50) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_DOUT_RNO_0_4__SLICE_502 ( input C1, B1, A1, 
    D0, C0, B0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/SLICE_502/mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/SLICE_502_K1_H1 
         , 
         \mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/SLICE_502/mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/GATE_H0 
         ;

  lut40318 \mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/SLICE_502_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/SLICE_502/mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/SLICE_502_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40319 \mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/GATE ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/SLICE_502/mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/SLICE_502_K0K1MUX ( 
    .D0(\mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/SLICE_502/mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/SLICE_502/mcuResourcesInst/UARTInst/DOUT_RNO_0[4]/SLICE_502_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40318 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40319 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_DOUT_RNO_0_2__SLICE_503 ( input D1, C1, B1, 
    D0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/SLICE_503/mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/SLICE_503_K1_H1 
         , 
         \mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/SLICE_503/mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/GATE_H0 
         ;

  lut40320 \mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/SLICE_503_K1 ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/SLICE_503/mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/SLICE_503_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40321 \mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/SLICE_503/mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/SLICE_503_K0K1MUX ( 
    .D0(\mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/SLICE_503/mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/SLICE_503/mcuResourcesInst/UARTInst/DOUT_RNO_0[2]/SLICE_503_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40320 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40321 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_DOUT_RNO_0_1__SLICE_504 ( input D1, C1, A1, 
    D0, C0, B0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/SLICE_504/mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/SLICE_504_K1_H1 
         , 
         \mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/SLICE_504/mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/GATE_H0 
         ;

  lut40322 \mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/SLICE_504_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/SLICE_504/mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/SLICE_504_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40323 \mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/GATE ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/SLICE_504/mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/SLICE_504_K0K1MUX ( 
    .D0(\mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/SLICE_504/mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/SLICE_504/mcuResourcesInst/UARTInst/DOUT_RNO_0[1]/SLICE_504_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40322 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40323 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_DOUT_RNO_0_0__SLICE_505 ( input D1, C1, A1, 
    D0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/SLICE_505/mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/SLICE_505_K1_H1 
         , 
         \mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/SLICE_505/mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/GATE_H0 
         ;

  lut40324 \mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/SLICE_505_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/SLICE_505/mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/SLICE_505_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40325 \mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/SLICE_505/mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/SLICE_505_K0K1MUX ( 
    .D0(\mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/SLICE_505/mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/SLICE_505/mcuResourcesInst/UARTInst/DOUT_RNO_0[0]/SLICE_505_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40324 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40325 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_RAMInst_mux_0_MUX21_SLICE_506 ( input D1, C1, A1, D0, 
    C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_0/MUX21/SLICE_506/mcuResourcesInst/RAMInst/mux_0/MUX21/SLICE_506_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_0/MUX21/SLICE_506/mcuResourcesInst/RAMInst/mux_0/MUX21/GATE_H0 
         ;

  lut40326 \mcuResourcesInst/RAMInst/mux_0/MUX21/SLICE_506_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/RAMInst/mux_0/MUX21/SLICE_506/mcuResourcesInst/RAMInst/mux_0/MUX21/SLICE_506_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40327 \mcuResourcesInst/RAMInst/mux_0/MUX21/GATE ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/RAMInst/mux_0/MUX21/SLICE_506/mcuResourcesInst/RAMInst/mux_0/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_0/MUX21/SLICE_506_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_0/MUX21/SLICE_506/mcuResourcesInst/RAMInst/mux_0/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_0/MUX21/SLICE_506/mcuResourcesInst/RAMInst/mux_0/MUX21/SLICE_506_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40326 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40327 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_RAMInst_mux_15_MUX21_SLICE_507 ( input C1, B1, A1, C0, 
    B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_15/MUX21/SLICE_507/mcuResourcesInst/RAMInst/mux_15/MUX21/SLICE_507_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_15/MUX21/SLICE_507/mcuResourcesInst/RAMInst/mux_15/MUX21/GATE_H0 
         ;

  lut40328 \mcuResourcesInst/RAMInst/mux_15/MUX21/SLICE_507_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\mcuResourcesInst/RAMInst/mux_15/MUX21/SLICE_507/mcuResourcesInst/RAMInst/mux_15/MUX21/SLICE_507_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40329 \mcuResourcesInst/RAMInst/mux_15/MUX21/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\mcuResourcesInst/RAMInst/mux_15/MUX21/SLICE_507/mcuResourcesInst/RAMInst/mux_15/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_15/MUX21/SLICE_507_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_15/MUX21/SLICE_507/mcuResourcesInst/RAMInst/mux_15/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_15/MUX21/SLICE_507/mcuResourcesInst/RAMInst/mux_15/MUX21/SLICE_507_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40328 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40329 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_RAMInst_mux_14_MUX21_SLICE_508 ( input D1, C1, A1, C0, 
    B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_14/MUX21/SLICE_508/mcuResourcesInst/RAMInst/mux_14/MUX21/SLICE_508_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_14/MUX21/SLICE_508/mcuResourcesInst/RAMInst/mux_14/MUX21/GATE_H0 
         ;

  lut40330 \mcuResourcesInst/RAMInst/mux_14/MUX21/SLICE_508_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/RAMInst/mux_14/MUX21/SLICE_508/mcuResourcesInst/RAMInst/mux_14/MUX21/SLICE_508_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40090 \mcuResourcesInst/RAMInst/mux_14/MUX21/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\mcuResourcesInst/RAMInst/mux_14/MUX21/SLICE_508/mcuResourcesInst/RAMInst/mux_14/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_14/MUX21/SLICE_508_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_14/MUX21/SLICE_508/mcuResourcesInst/RAMInst/mux_14/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_14/MUX21/SLICE_508/mcuResourcesInst/RAMInst/mux_14/MUX21/SLICE_508_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40330 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA50) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_RAMInst_mux_13_MUX21_SLICE_509 ( input D1, C1, A1, D0, 
    C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_13/MUX21/SLICE_509/mcuResourcesInst/RAMInst/mux_13/MUX21/SLICE_509_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_13/MUX21/SLICE_509/mcuResourcesInst/RAMInst/mux_13/MUX21/GATE_H0 
         ;

  lut40331 \mcuResourcesInst/RAMInst/mux_13/MUX21/SLICE_509_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/RAMInst/mux_13/MUX21/SLICE_509/mcuResourcesInst/RAMInst/mux_13/MUX21/SLICE_509_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40332 \mcuResourcesInst/RAMInst/mux_13/MUX21/GATE ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/RAMInst/mux_13/MUX21/SLICE_509/mcuResourcesInst/RAMInst/mux_13/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_13/MUX21/SLICE_509_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_13/MUX21/SLICE_509/mcuResourcesInst/RAMInst/mux_13/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_13/MUX21/SLICE_509/mcuResourcesInst/RAMInst/mux_13/MUX21/SLICE_509_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40331 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40332 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA50) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_RAMInst_mux_12_MUX21_SLICE_510 ( input D1, C1, A1, D0, 
    C0, B0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_12/MUX21/SLICE_510/mcuResourcesInst/RAMInst/mux_12/MUX21/SLICE_510_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_12/MUX21/SLICE_510/mcuResourcesInst/RAMInst/mux_12/MUX21/GATE_H0 
         ;

  lut40333 \mcuResourcesInst/RAMInst/mux_12/MUX21/SLICE_510_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/RAMInst/mux_12/MUX21/SLICE_510/mcuResourcesInst/RAMInst/mux_12/MUX21/SLICE_510_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40334 \mcuResourcesInst/RAMInst/mux_12/MUX21/GATE ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/RAMInst/mux_12/MUX21/SLICE_510/mcuResourcesInst/RAMInst/mux_12/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_12/MUX21/SLICE_510_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_12/MUX21/SLICE_510/mcuResourcesInst/RAMInst/mux_12/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_12/MUX21/SLICE_510/mcuResourcesInst/RAMInst/mux_12/MUX21/SLICE_510_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40333 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40334 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_RAMInst_mux_11_MUX21_SLICE_511 ( input D1, B1, A1, D0, 
    B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_11/MUX21/SLICE_511/mcuResourcesInst/RAMInst/mux_11/MUX21/SLICE_511_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_11/MUX21/SLICE_511/mcuResourcesInst/RAMInst/mux_11/MUX21/GATE_H0 
         ;

  lut40335 \mcuResourcesInst/RAMInst/mux_11/MUX21/SLICE_511_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), 
    .Z(\mcuResourcesInst/RAMInst/mux_11/MUX21/SLICE_511/mcuResourcesInst/RAMInst/mux_11/MUX21/SLICE_511_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40336 \mcuResourcesInst/RAMInst/mux_11/MUX21/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\mcuResourcesInst/RAMInst/mux_11/MUX21/SLICE_511/mcuResourcesInst/RAMInst/mux_11/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_11/MUX21/SLICE_511_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_11/MUX21/SLICE_511/mcuResourcesInst/RAMInst/mux_11/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_11/MUX21/SLICE_511/mcuResourcesInst/RAMInst/mux_11/MUX21/SLICE_511_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40335 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAACC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40336 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDD88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_RAMInst_mux_10_MUX21_SLICE_512 ( input D1, C1, B1, D0, 
    C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_10/MUX21/SLICE_512/mcuResourcesInst/RAMInst/mux_10/MUX21/SLICE_512_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_10/MUX21/SLICE_512/mcuResourcesInst/RAMInst/mux_10/MUX21/GATE_H0 
         ;

  lut40337 \mcuResourcesInst/RAMInst/mux_10/MUX21/SLICE_512_K1 ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/RAMInst/mux_10/MUX21/SLICE_512/mcuResourcesInst/RAMInst/mux_10/MUX21/SLICE_512_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40327 \mcuResourcesInst/RAMInst/mux_10/MUX21/GATE ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/RAMInst/mux_10/MUX21/SLICE_512/mcuResourcesInst/RAMInst/mux_10/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_10/MUX21/SLICE_512_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_10/MUX21/SLICE_512/mcuResourcesInst/RAMInst/mux_10/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_10/MUX21/SLICE_512/mcuResourcesInst/RAMInst/mux_10/MUX21/SLICE_512_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40337 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_RAMInst_mux_9_MUX21_SLICE_513 ( input D1, C1, A1, C0, 
    B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_9/MUX21/SLICE_513/mcuResourcesInst/RAMInst/mux_9/MUX21/SLICE_513_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_9/MUX21/SLICE_513/mcuResourcesInst/RAMInst/mux_9/MUX21/GATE_H0 
         ;

  lut40338 \mcuResourcesInst/RAMInst/mux_9/MUX21/SLICE_513_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/RAMInst/mux_9/MUX21/SLICE_513/mcuResourcesInst/RAMInst/mux_9/MUX21/SLICE_513_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40339 \mcuResourcesInst/RAMInst/mux_9/MUX21/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), 
    .Z(\mcuResourcesInst/RAMInst/mux_9/MUX21/SLICE_513/mcuResourcesInst/RAMInst/mux_9/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_9/MUX21/SLICE_513_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_9/MUX21/SLICE_513/mcuResourcesInst/RAMInst/mux_9/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_9/MUX21/SLICE_513/mcuResourcesInst/RAMInst/mux_9/MUX21/SLICE_513_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40338 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40339 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_RAMInst_mux_8_MUX21_SLICE_514 ( input C1, B1, A1, D0, 
    B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_8/MUX21/SLICE_514/mcuResourcesInst/RAMInst/mux_8/MUX21/SLICE_514_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_8/MUX21/SLICE_514/mcuResourcesInst/RAMInst/mux_8/MUX21/GATE_H0 
         ;

  lut40340 \mcuResourcesInst/RAMInst/mux_8/MUX21/SLICE_514_K1 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), 
    .Z(\mcuResourcesInst/RAMInst/mux_8/MUX21/SLICE_514/mcuResourcesInst/RAMInst/mux_8/MUX21/SLICE_514_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40341 \mcuResourcesInst/RAMInst/mux_8/MUX21/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\mcuResourcesInst/RAMInst/mux_8/MUX21/SLICE_514/mcuResourcesInst/RAMInst/mux_8/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_8/MUX21/SLICE_514_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_8/MUX21/SLICE_514/mcuResourcesInst/RAMInst/mux_8/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_8/MUX21/SLICE_514/mcuResourcesInst/RAMInst/mux_8/MUX21/SLICE_514_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40340 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40341 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_RAMInst_mux_7_MUX21_SLICE_515 ( input D1, C1, B1, D0, 
    C0, B0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_7/MUX21/SLICE_515/mcuResourcesInst/RAMInst/mux_7/MUX21/SLICE_515_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_7/MUX21/SLICE_515/mcuResourcesInst/RAMInst/mux_7/MUX21/GATE_H0 
         ;

  lut40337 \mcuResourcesInst/RAMInst/mux_7/MUX21/SLICE_515_K1 ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/RAMInst/mux_7/MUX21/SLICE_515/mcuResourcesInst/RAMInst/mux_7/MUX21/SLICE_515_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40342 \mcuResourcesInst/RAMInst/mux_7/MUX21/GATE ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/RAMInst/mux_7/MUX21/SLICE_515/mcuResourcesInst/RAMInst/mux_7/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_7/MUX21/SLICE_515_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_7/MUX21/SLICE_515/mcuResourcesInst/RAMInst/mux_7/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_7/MUX21/SLICE_515/mcuResourcesInst/RAMInst/mux_7/MUX21/SLICE_515_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40342 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_RAMInst_mux_6_MUX21_SLICE_516 ( input D1, C1, A1, D0, 
    B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_6/MUX21/SLICE_516/mcuResourcesInst/RAMInst/mux_6/MUX21/SLICE_516_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_6/MUX21/SLICE_516/mcuResourcesInst/RAMInst/mux_6/MUX21/GATE_H0 
         ;

  lut40331 \mcuResourcesInst/RAMInst/mux_6/MUX21/SLICE_516_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/RAMInst/mux_6/MUX21/SLICE_516/mcuResourcesInst/RAMInst/mux_6/MUX21/SLICE_516_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40343 \mcuResourcesInst/RAMInst/mux_6/MUX21/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\mcuResourcesInst/RAMInst/mux_6/MUX21/SLICE_516/mcuResourcesInst/RAMInst/mux_6/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_6/MUX21/SLICE_516_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_6/MUX21/SLICE_516/mcuResourcesInst/RAMInst/mux_6/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_6/MUX21/SLICE_516/mcuResourcesInst/RAMInst/mux_6/MUX21/SLICE_516_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40343 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_RAMInst_mux_5_MUX21_SLICE_517 ( input C1, B1, A1, D0, 
    C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_5/MUX21/SLICE_517/mcuResourcesInst/RAMInst/mux_5/MUX21/SLICE_517_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_5/MUX21/SLICE_517/mcuResourcesInst/RAMInst/mux_5/MUX21/GATE_H0 
         ;

  lut40344 \mcuResourcesInst/RAMInst/mux_5/MUX21/SLICE_517_K1 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), 
    .Z(\mcuResourcesInst/RAMInst/mux_5/MUX21/SLICE_517/mcuResourcesInst/RAMInst/mux_5/MUX21/SLICE_517_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40345 \mcuResourcesInst/RAMInst/mux_5/MUX21/GATE ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/RAMInst/mux_5/MUX21/SLICE_517/mcuResourcesInst/RAMInst/mux_5/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_5/MUX21/SLICE_517_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_5/MUX21/SLICE_517/mcuResourcesInst/RAMInst/mux_5/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_5/MUX21/SLICE_517/mcuResourcesInst/RAMInst/mux_5/MUX21/SLICE_517_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40344 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40345 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_RAMInst_mux_4_MUX21_SLICE_518 ( input D1, C1, B1, D0, 
    C0, B0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_4/MUX21/SLICE_518/mcuResourcesInst/RAMInst/mux_4/MUX21/SLICE_518_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_4/MUX21/SLICE_518/mcuResourcesInst/RAMInst/mux_4/MUX21/GATE_H0 
         ;

  lut40346 \mcuResourcesInst/RAMInst/mux_4/MUX21/SLICE_518_K1 ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/RAMInst/mux_4/MUX21/SLICE_518/mcuResourcesInst/RAMInst/mux_4/MUX21/SLICE_518_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40347 \mcuResourcesInst/RAMInst/mux_4/MUX21/GATE ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/RAMInst/mux_4/MUX21/SLICE_518/mcuResourcesInst/RAMInst/mux_4/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_4/MUX21/SLICE_518_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_4/MUX21/SLICE_518/mcuResourcesInst/RAMInst/mux_4/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_4/MUX21/SLICE_518/mcuResourcesInst/RAMInst/mux_4/MUX21/SLICE_518_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40346 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40347 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_RAMInst_mux_3_MUX21_SLICE_519 ( input D1, C1, A1, D0, 
    C0, B0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_3/MUX21/SLICE_519/mcuResourcesInst/RAMInst/mux_3/MUX21/SLICE_519_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_3/MUX21/SLICE_519/mcuResourcesInst/RAMInst/mux_3/MUX21/GATE_H0 
         ;

  lut40331 \mcuResourcesInst/RAMInst/mux_3/MUX21/SLICE_519_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/RAMInst/mux_3/MUX21/SLICE_519/mcuResourcesInst/RAMInst/mux_3/MUX21/SLICE_519_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40334 \mcuResourcesInst/RAMInst/mux_3/MUX21/GATE ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/RAMInst/mux_3/MUX21/SLICE_519/mcuResourcesInst/RAMInst/mux_3/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_3/MUX21/SLICE_519_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_3/MUX21/SLICE_519/mcuResourcesInst/RAMInst/mux_3/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_3/MUX21/SLICE_519/mcuResourcesInst/RAMInst/mux_3/MUX21/SLICE_519_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_RAMInst_mux_2_MUX21_SLICE_520 ( input C1, B1, A1, C0, 
    B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_2/MUX21/SLICE_520/mcuResourcesInst/RAMInst/mux_2/MUX21/SLICE_520_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_2/MUX21/SLICE_520/mcuResourcesInst/RAMInst/mux_2/MUX21/GATE_H0 
         ;

  lut40348 \mcuResourcesInst/RAMInst/mux_2/MUX21/SLICE_520_K1 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), 
    .Z(\mcuResourcesInst/RAMInst/mux_2/MUX21/SLICE_520/mcuResourcesInst/RAMInst/mux_2/MUX21/SLICE_520_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40329 \mcuResourcesInst/RAMInst/mux_2/MUX21/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), 
    .Z(\mcuResourcesInst/RAMInst/mux_2/MUX21/SLICE_520/mcuResourcesInst/RAMInst/mux_2/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_2/MUX21/SLICE_520_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_2/MUX21/SLICE_520/mcuResourcesInst/RAMInst/mux_2/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_2/MUX21/SLICE_520/mcuResourcesInst/RAMInst/mux_2/MUX21/SLICE_520_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40348 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_RAMInst_mux_1_MUX21_SLICE_521 ( input D1, C1, A1, D0, 
    C0, B0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/RAMInst/mux_1/MUX21/SLICE_521/mcuResourcesInst/RAMInst/mux_1/MUX21/SLICE_521_K1_H1 
         , 
         \mcuResourcesInst/RAMInst/mux_1/MUX21/SLICE_521/mcuResourcesInst/RAMInst/mux_1/MUX21/GATE_H0 
         ;

  lut40349 \mcuResourcesInst/RAMInst/mux_1/MUX21/SLICE_521_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/RAMInst/mux_1/MUX21/SLICE_521/mcuResourcesInst/RAMInst/mux_1/MUX21/SLICE_521_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40347 \mcuResourcesInst/RAMInst/mux_1/MUX21/GATE ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/RAMInst/mux_1/MUX21/SLICE_521/mcuResourcesInst/RAMInst/mux_1/MUX21/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/RAMInst/mux_1/MUX21/SLICE_521_K0K1MUX ( 
    .D0(\mcuResourcesInst/RAMInst/mux_1/MUX21/SLICE_521/mcuResourcesInst/RAMInst/mux_1/MUX21/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/RAMInst/mux_1/MUX21/SLICE_521/mcuResourcesInst/RAMInst/mux_1/MUX21/SLICE_521_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40349 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_CPU_DIN_1_11__SLICE_522 ( input D1, 
    C1, B1, D0, C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/SLICE_522/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/SLICE_522_K1_H1 
         , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/SLICE_522/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/GATE_H0 
         ;

  lut40350 \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/SLICE_522_K1 ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/SLICE_522/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/SLICE_522_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40351 \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/GATE ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/SLICE_522/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/SLICE_522_K0K1MUX 
    ( 
    .D0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/SLICE_522/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/SLICE_522/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[11]/SLICE_522_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40350 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C3F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40351 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h550F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_CPU_DIN_1_12__SLICE_523 ( input D1, 
    C1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/SLICE_523/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/SLICE_523_K1_H1 
         , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/SLICE_523/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/GATE_H0 
         ;

  lut40352 \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/SLICE_523_K1 ( 
    .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/SLICE_523/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/SLICE_523_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40353 \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/SLICE_523/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/SLICE_523_K0K1MUX 
    ( 
    .D0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/SLICE_523/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/SLICE_523/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[12]/SLICE_523_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40352 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h05AF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40353 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1B1B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_CPU_DIN_1_9__SLICE_524 ( input D1, C1, 
    B1, D0, C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/SLICE_524/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/SLICE_524_K1_H1 
         , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/SLICE_524/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/GATE_H0 
         ;

  lut40354 \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/SLICE_524_K1 ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/SLICE_524/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/SLICE_524_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40355 \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/GATE ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/SLICE_524/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/SLICE_524_K0K1MUX ( 
    .D0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/SLICE_524/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/SLICE_524/mcuResourcesInst/memoryMapperInst/CPU_DIN_1[9]/SLICE_524_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40354 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h303F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40355 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F55) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_CPU_DIN_3_2__SLICE_525 ( input D1, C1, 
    A1, D0, C0, B0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/SLICE_525/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/SLICE_525_K1_H1 
         , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/SLICE_525/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/GATE_H0 
         ;

  lut40345 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/SLICE_525_K1 ( 
    .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/SLICE_525/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/SLICE_525_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40108 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/GATE ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/SLICE_525/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/SLICE_525_K0K1MUX ( 
    .D0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/SLICE_525/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/SLICE_525/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[2]/SLICE_525_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_memoryMapperInst_CPU_DIN_3_7__SLICE_526 ( input C1, B1, 
    A1, D0, C0, B0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/SLICE_526/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/SLICE_526_K1_H1 
         , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/SLICE_526/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/GATE_H0 
         ;

  lut40356 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/SLICE_526_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/SLICE_526/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/SLICE_526_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40111 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/GATE ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/SLICE_526/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/SLICE_526_K0K1MUX ( 
    .D0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/SLICE_526/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/SLICE_526/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[7]/SLICE_526_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40356 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_CPU_DIN_3_1__SLICE_527 ( input D1, C1, 
    B1, D0, C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/SLICE_527/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/SLICE_527_K1_H1 
         , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/SLICE_527/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/GATE_H0 
         ;

  lut40342 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/SLICE_527_K1 ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/SLICE_527/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/SLICE_527_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40357 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/GATE ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/SLICE_527/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/SLICE_527_K0K1MUX ( 
    .D0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/SLICE_527/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/SLICE_527/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[1]/SLICE_527_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40357 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_CPU_DIN_3_0__SLICE_528 ( input C1, B1, 
    A1, D0, C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/SLICE_528/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/SLICE_528_K1_H1 
         , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/SLICE_528/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/GATE_H0 
         ;

  lut40339 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/SLICE_528_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/SLICE_528/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/SLICE_528_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40358 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/GATE ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/SLICE_528/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/SLICE_528_K0K1MUX ( 
    .D0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/SLICE_528/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/SLICE_528/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[0]/SLICE_528_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40358 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_CPU_DIN_3_15__SLICE_529 ( input D1, 
    C1, B1, D0, C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/SLICE_529/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/SLICE_529_K1_H1 
         , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/SLICE_529/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/GATE_H0 
         ;

  lut40359 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/SLICE_529_K1 ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/SLICE_529/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/SLICE_529_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40358 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/GATE ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/SLICE_529/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/SLICE_529_K0K1MUX 
    ( 
    .D0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/SLICE_529/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/SLICE_529/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[15]/SLICE_529_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40359 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_CPU_DIN_3_14__SLICE_530 ( input D1, 
    C1, B1, D0, C0, B0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/SLICE_530/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/SLICE_530_K1_H1 
         , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/SLICE_530/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/GATE_H0 
         ;

  lut40342 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/SLICE_530_K1 ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/SLICE_530/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/SLICE_530_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40360 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/GATE ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/SLICE_530/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/SLICE_530_K0K1MUX 
    ( 
    .D0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/SLICE_530/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/SLICE_530/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[14]/SLICE_530_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40360 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_CPU_DIN_3_13__SLICE_531 ( input D1, 
    C1, A1, D0, C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/SLICE_531/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/SLICE_531_K1_H1 
         , 
         \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/SLICE_531/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/GATE_H0 
         ;

  lut40361 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/SLICE_531_K1 ( 
    .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/SLICE_531/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/SLICE_531_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40358 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/GATE ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), 
    .Z(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/SLICE_531/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/GATE_H0 )
    );
  selmux2 \mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/SLICE_531_K0K1MUX 
    ( 
    .D0(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/SLICE_531/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/GATE_H0 )
    , 
    .D1(\mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/SLICE_531/mcuResourcesInst/memoryMapperInst/CPU_DIN_3[13]/SLICE_531_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40361 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_opxMultiplexerInst_REGB_ADDRX_0__SLICE_532 ( input D1, C1, A1, 
    D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/opxMultiplexerInst/REGB_ADDRX[0]/SLICE_532/coreInst/opxMultiplexerInst/REGB_ADDRX[0]/SLICE_532_K1_H1 
         , 
         \coreInst/opxMultiplexerInst/REGB_ADDRX[0]/SLICE_532/coreInst/opxMultiplexerInst/REGB_ADDRX[0]/GATE_H0 
         ;

  lut40362 \coreInst/opxMultiplexerInst/REGB_ADDRX[0]/SLICE_532_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\coreInst/opxMultiplexerInst/REGB_ADDRX[0]/SLICE_532/coreInst/opxMultiplexerInst/REGB_ADDRX[0]/SLICE_532_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40363 \coreInst/opxMultiplexerInst/REGB_ADDRX[0]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/opxMultiplexerInst/REGB_ADDRX[0]/SLICE_532/coreInst/opxMultiplexerInst/REGB_ADDRX[0]/GATE_H0 )
    );
  selmux2 \coreInst/opxMultiplexerInst/REGB_ADDRX[0]/SLICE_532_K0K1MUX ( 
    .D0(\coreInst/opxMultiplexerInst/REGB_ADDRX[0]/SLICE_532/coreInst/opxMultiplexerInst/REGB_ADDRX[0]/GATE_H0 )
    , 
    .D1(\coreInst/opxMultiplexerInst/REGB_ADDRX[0]/SLICE_532/coreInst/opxMultiplexerInst/REGB_ADDRX[0]/SLICE_532_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40362 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0500) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40363 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00FD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_opxMultiplexerInst_PC_OFFSETX_0__SLICE_533 ( input D1, C1, B1, 
    A1, D0, C0, A0, M0, output OFX0 );
  wire   
         \coreInst/opxMultiplexerInst/PC_OFFSETX[0]/SLICE_533/coreInst/opxMultiplexerInst/PC_OFFSETX[0]/SLICE_533_K1_H1 
         , GNDI, 
         \coreInst/opxMultiplexerInst/PC_OFFSETX[0]/SLICE_533/coreInst/opxMultiplexerInst/PC_OFFSETX[0]/GATE_H0 
         ;

  lut40364 \coreInst/opxMultiplexerInst/PC_OFFSETX[0]/SLICE_533_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/opxMultiplexerInst/PC_OFFSETX[0]/SLICE_533/coreInst/opxMultiplexerInst/PC_OFFSETX[0]/SLICE_533_K1_H1 )
    );
  lut40365 \coreInst/opxMultiplexerInst/PC_OFFSETX[0]/GATE ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), 
    .Z(\coreInst/opxMultiplexerInst/PC_OFFSETX[0]/SLICE_533/coreInst/opxMultiplexerInst/PC_OFFSETX[0]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/opxMultiplexerInst/PC_OFFSETX[0]/SLICE_533_K0K1MUX ( 
    .D0(\coreInst/opxMultiplexerInst/PC_OFFSETX[0]/SLICE_533/coreInst/opxMultiplexerInst/PC_OFFSETX[0]/GATE_H0 )
    , 
    .D1(\coreInst/opxMultiplexerInst/PC_OFFSETX[0]/SLICE_533/coreInst/opxMultiplexerInst/PC_OFFSETX[0]/SLICE_533_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40364 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40365 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0FFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_opxMultiplexerInst_PC_OFFSETX_1__SLICE_534 ( input D1, C1, B1, 
    A1, D0, C0, A0, M0, output OFX0 );
  wire   
         \coreInst/opxMultiplexerInst/PC_OFFSETX[1]/SLICE_534/coreInst/opxMultiplexerInst/PC_OFFSETX[1]/SLICE_534_K1_H1 
         , GNDI, 
         \coreInst/opxMultiplexerInst/PC_OFFSETX[1]/SLICE_534/coreInst/opxMultiplexerInst/PC_OFFSETX[1]/GATE_H0 
         ;

  lut40366 \coreInst/opxMultiplexerInst/PC_OFFSETX[1]/SLICE_534_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/opxMultiplexerInst/PC_OFFSETX[1]/SLICE_534/coreInst/opxMultiplexerInst/PC_OFFSETX[1]/SLICE_534_K1_H1 )
    );
  lut40367 \coreInst/opxMultiplexerInst/PC_OFFSETX[1]/GATE ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), 
    .Z(\coreInst/opxMultiplexerInst/PC_OFFSETX[1]/SLICE_534/coreInst/opxMultiplexerInst/PC_OFFSETX[1]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/opxMultiplexerInst/PC_OFFSETX[1]/SLICE_534_K0K1MUX ( 
    .D0(\coreInst/opxMultiplexerInst/PC_OFFSETX[1]/SLICE_534/coreInst/opxMultiplexerInst/PC_OFFSETX[1]/GATE_H0 )
    , 
    .D1(\coreInst/opxMultiplexerInst/PC_OFFSETX[1]/SLICE_534/coreInst/opxMultiplexerInst/PC_OFFSETX[1]/SLICE_534_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40366 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40367 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_opxMultiplexerInst_PC_m3_SLICE_535 ( input D1, C1, A1, D0, B0, 
    A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/opxMultiplexerInst/PC_m3/SLICE_535/coreInst/opxMultiplexerInst/PC_m3/SLICE_535_K1_H1 
         , 
         \coreInst/opxMultiplexerInst/PC_m3/SLICE_535/coreInst/opxMultiplexerInst/PC_m3/GATE_H0 
         ;

  lut40368 \coreInst/opxMultiplexerInst/PC_m3/SLICE_535_K1 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), 
    .Z(\coreInst/opxMultiplexerInst/PC_m3/SLICE_535/coreInst/opxMultiplexerInst/PC_m3/SLICE_535_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40369 \coreInst/opxMultiplexerInst/PC_m3/GATE ( .A(A0), .B(B0), .C(GNDI), 
    .D(D0), 
    .Z(\coreInst/opxMultiplexerInst/PC_m3/SLICE_535/coreInst/opxMultiplexerInst/PC_m3/GATE_H0 )
    );
  selmux2 \coreInst/opxMultiplexerInst/PC_m3/SLICE_535_K0K1MUX ( 
    .D0(\coreInst/opxMultiplexerInst/PC_m3/SLICE_535/coreInst/opxMultiplexerInst/PC_m3/GATE_H0 )
    , 
    .D1(\coreInst/opxMultiplexerInst/PC_m3/SLICE_535/coreInst/opxMultiplexerInst/PC_m3/SLICE_535_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40368 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40369 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2277) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_opxMultiplexerInst_BUS_SEQX_1__SLICE_536 ( input D1, C1, B1, 
    A1, D0, B0, M0, output OFX0 );
  wire   
         \coreInst/opxMultiplexerInst/BUS_SEQX[1]/SLICE_536/coreInst/opxMultiplexerInst/BUS_SEQX[1]/SLICE_536_K1_H1 
         , GNDI, 
         \coreInst/opxMultiplexerInst/BUS_SEQX[1]/SLICE_536/coreInst/opxMultiplexerInst/BUS_SEQX[1]/GATE_H0 
         ;

  lut40370 \coreInst/opxMultiplexerInst/BUS_SEQX[1]/SLICE_536_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/opxMultiplexerInst/BUS_SEQX[1]/SLICE_536/coreInst/opxMultiplexerInst/BUS_SEQX[1]/SLICE_536_K1_H1 )
    );
  lut40371 \coreInst/opxMultiplexerInst/BUS_SEQX[1]/GATE ( .A(GNDI), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/opxMultiplexerInst/BUS_SEQX[1]/SLICE_536/coreInst/opxMultiplexerInst/BUS_SEQX[1]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/opxMultiplexerInst/BUS_SEQX[1]/SLICE_536_K0K1MUX ( 
    .D0(\coreInst/opxMultiplexerInst/BUS_SEQX[1]/SLICE_536/coreInst/opxMultiplexerInst/BUS_SEQX[1]/GATE_H0 )
    , 
    .D1(\coreInst/opxMultiplexerInst/BUS_SEQX[1]/SLICE_536/coreInst/opxMultiplexerInst/BUS_SEQX[1]/SLICE_536_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40370 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0092) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40371 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_opxMultiplexerInst_BUS_SEQX_0__SLICE_537 ( input D1, C1, B1, 
    A1, D0, B0, M0, output OFX0 );
  wire   
         \coreInst/opxMultiplexerInst/BUS_SEQX[0]/SLICE_537/coreInst/opxMultiplexerInst/BUS_SEQX[0]/SLICE_537_K1_H1 
         , GNDI, 
         \coreInst/opxMultiplexerInst/BUS_SEQX[0]/SLICE_537/coreInst/opxMultiplexerInst/BUS_SEQX[0]/GATE_H0 
         ;

  lut40372 \coreInst/opxMultiplexerInst/BUS_SEQX[0]/SLICE_537_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/opxMultiplexerInst/BUS_SEQX[0]/SLICE_537/coreInst/opxMultiplexerInst/BUS_SEQX[0]/SLICE_537_K1_H1 )
    );
  lut40373 \coreInst/opxMultiplexerInst/BUS_SEQX[0]/GATE ( .A(GNDI), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/opxMultiplexerInst/BUS_SEQX[0]/SLICE_537/coreInst/opxMultiplexerInst/BUS_SEQX[0]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/opxMultiplexerInst/BUS_SEQX[0]/SLICE_537_K0K1MUX ( 
    .D0(\coreInst/opxMultiplexerInst/BUS_SEQX[0]/SLICE_537/coreInst/opxMultiplexerInst/BUS_SEQX[0]/GATE_H0 )
    , 
    .D1(\coreInst/opxMultiplexerInst/BUS_SEQX[0]/SLICE_537/coreInst/opxMultiplexerInst/BUS_SEQX[0]/SLICE_537_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40372 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40373 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_ARGA_m6_RNO_0_SLICE_538 ( input D1, B1, A1, 
    D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/programCounterInst/ARGA_m6_RNO_0/SLICE_538/coreInst/programCounterInst/ARGA_m6_RNO_0/SLICE_538_K1_H1 
         , 
         \coreInst/programCounterInst/ARGA_m6_RNO_0/SLICE_538/coreInst/programCounterInst/ARGA_m6_RNO_0/GATE_H0 
         ;

  lut40374 \coreInst/programCounterInst/ARGA_m6_RNO_0/SLICE_538_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), 
    .Z(\coreInst/programCounterInst/ARGA_m6_RNO_0/SLICE_538/coreInst/programCounterInst/ARGA_m6_RNO_0/SLICE_538_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40375 \coreInst/programCounterInst/ARGA_m6_RNO_0/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/programCounterInst/ARGA_m6_RNO_0/SLICE_538/coreInst/programCounterInst/ARGA_m6_RNO_0/GATE_H0 )
    );
  selmux2 \coreInst/programCounterInst/ARGA_m6_RNO_0/SLICE_538_K0K1MUX ( 
    .D0(\coreInst/programCounterInst/ARGA_m6_RNO_0/SLICE_538/coreInst/programCounterInst/ARGA_m6_RNO_0/GATE_H0 )
    , 
    .D1(\coreInst/programCounterInst/ARGA_m6_RNO_0/SLICE_538/coreInst/programCounterInst/ARGA_m6_RNO_0/SLICE_538_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40374 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBB88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40375 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_ADDR_BUF_i_15__SLICE_539 ( input D1, A1, C0, 
    B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/busControllerInst/ADDR_BUF_i[15]/SLICE_539/coreInst/busControllerInst/ADDR_BUF_i[15]/SLICE_539_K1_H1 
         , 
         \coreInst/busControllerInst/ADDR_BUF_i[15]/SLICE_539/coreInst/busControllerInst/ADDR_BUF_i[15]/GATE_H0 
         ;

  lut40376 \coreInst/busControllerInst/ADDR_BUF_i[15]/SLICE_539_K1 ( .A(A1), 
    .B(GNDI), .C(GNDI), .D(D1), 
    .Z(\coreInst/busControllerInst/ADDR_BUF_i[15]/SLICE_539/coreInst/busControllerInst/ADDR_BUF_i[15]/SLICE_539_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40377 \coreInst/busControllerInst/ADDR_BUF_i[15]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\coreInst/busControllerInst/ADDR_BUF_i[15]/SLICE_539/coreInst/busControllerInst/ADDR_BUF_i[15]/GATE_H0 )
    );
  selmux2 \coreInst/busControllerInst/ADDR_BUF_i[15]/SLICE_539_K0K1MUX ( 
    .D0(\coreInst/busControllerInst/ADDR_BUF_i[15]/SLICE_539/coreInst/busControllerInst/ADDR_BUF_i[15]/GATE_H0 )
    , 
    .D1(\coreInst/busControllerInst/ADDR_BUF_i[15]/SLICE_539/coreInst/busControllerInst/ADDR_BUF_i[15]/SLICE_539_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40376 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA55) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40377 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3A3A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_sequencer_ADDR_m10_i_m2_SLICE_540 ( input D1, 
    C1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/SLICE_540/coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/SLICE_540_K1_H1 
         , 
         \coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/SLICE_540/coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/GATE_H0 
         ;

  lut40314 \coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/SLICE_540_K1 ( 
    .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(\coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/SLICE_540/coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/SLICE_540_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40378 \coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), 
    .Z(\coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/SLICE_540/coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/GATE_H0 )
    );
  selmux2 
    \coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/SLICE_540_K0K1MUX ( 
    .D0(\coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/SLICE_540/coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/GATE_H0 )
    , 
    .D1(\coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/SLICE_540/coreInst/busControllerInst/sequencer/ADDR_m10_i_m2/SLICE_540_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40378 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5353) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_sequencer_ADDR_m10_i_m4_SLICE_541 ( input D1, 
    C1, B1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/SLICE_541/coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/SLICE_541_K1_H1 
         , 
         \coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/SLICE_541/coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/GATE_H0 
         ;

  lut40379 \coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/SLICE_541_K1 ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/SLICE_541/coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/SLICE_541_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40380 \coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/SLICE_541/coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/GATE_H0 )
    );
  selmux2 
    \coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/SLICE_541_K0K1MUX ( 
    .D0(\coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/SLICE_541/coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/GATE_H0 )
    , 
    .D1(\coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/SLICE_541/coreInst/busControllerInst/sequencer/ADDR_m10_i_m4/SLICE_541_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40379 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F33) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40380 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_muxA_ALUA_DATA_1__SLICE_542 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/muxA/ALUA_DATA[1]/SLICE_542/coreInst/fullALUInst/muxA/ALUA_DATA[1]/SLICE_542_K1_H1 
         , 
         \coreInst/fullALUInst/muxA/ALUA_DATA[1]/SLICE_542/coreInst/fullALUInst/muxA/ALUA_DATA[1]/GATE_H0 
         ;

  lut40381 \coreInst/fullALUInst/muxA/ALUA_DATA[1]/SLICE_542_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/muxA/ALUA_DATA[1]/SLICE_542/coreInst/fullALUInst/muxA/ALUA_DATA[1]/SLICE_542_K1_H1 )
    );
  lut40382 \coreInst/fullALUInst/muxA/ALUA_DATA[1]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/muxA/ALUA_DATA[1]/SLICE_542/coreInst/fullALUInst/muxA/ALUA_DATA[1]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/muxA/ALUA_DATA[1]/SLICE_542_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/muxA/ALUA_DATA[1]/SLICE_542/coreInst/fullALUInst/muxA/ALUA_DATA[1]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/muxA/ALUA_DATA[1]/SLICE_542/coreInst/fullALUInst/muxA/ALUA_DATA[1]/SLICE_542_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40381 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40382 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8BBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_muxA_ALUA_DATA_2__SLICE_543 ( input D1, C1, B1, A1, 
    C0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/muxA/ALUA_DATA[2]/SLICE_543/coreInst/fullALUInst/muxA/ALUA_DATA[2]/SLICE_543_K1_H1 
         , GNDI, 
         \coreInst/fullALUInst/muxA/ALUA_DATA[2]/SLICE_543/coreInst/fullALUInst/muxA/ALUA_DATA[2]/GATE_H0 
         ;

  lut40383 \coreInst/fullALUInst/muxA/ALUA_DATA[2]/SLICE_543_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/muxA/ALUA_DATA[2]/SLICE_543/coreInst/fullALUInst/muxA/ALUA_DATA[2]/SLICE_543_K1_H1 )
    );
  lut40384 \coreInst/fullALUInst/muxA/ALUA_DATA[2]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\coreInst/fullALUInst/muxA/ALUA_DATA[2]/SLICE_543/coreInst/fullALUInst/muxA/ALUA_DATA[2]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/fullALUInst/muxA/ALUA_DATA[2]/SLICE_543_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/muxA/ALUA_DATA[2]/SLICE_543/coreInst/fullALUInst/muxA/ALUA_DATA[2]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/muxA/ALUA_DATA[2]/SLICE_543/coreInst/fullALUInst/muxA/ALUA_DATA[2]/SLICE_543_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40383 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40384 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD1D1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_muxA_ALUA_DATA_3__SLICE_544 ( input D1, C1, B1, A1, 
    C0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/muxA/ALUA_DATA[3]/SLICE_544/coreInst/fullALUInst/muxA/ALUA_DATA[3]/SLICE_544_K1_H1 
         , GNDI, 
         \coreInst/fullALUInst/muxA/ALUA_DATA[3]/SLICE_544/coreInst/fullALUInst/muxA/ALUA_DATA[3]/GATE_H0 
         ;

  lut40385 \coreInst/fullALUInst/muxA/ALUA_DATA[3]/SLICE_544_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/muxA/ALUA_DATA[3]/SLICE_544/coreInst/fullALUInst/muxA/ALUA_DATA[3]/SLICE_544_K1_H1 )
    );
  lut40384 \coreInst/fullALUInst/muxA/ALUA_DATA[3]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\coreInst/fullALUInst/muxA/ALUA_DATA[3]/SLICE_544/coreInst/fullALUInst/muxA/ALUA_DATA[3]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/fullALUInst/muxA/ALUA_DATA[3]/SLICE_544_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/muxA/ALUA_DATA[3]/SLICE_544/coreInst/fullALUInst/muxA/ALUA_DATA[3]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/muxA/ALUA_DATA[3]/SLICE_544/coreInst/fullALUInst/muxA/ALUA_DATA[3]/SLICE_544_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40385 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE10) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_muxA_ALUA_DATA_4__SLICE_545 ( input D1, C1, B1, A1, 
    D0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/muxA/ALUA_DATA[4]/SLICE_545/coreInst/fullALUInst/muxA/ALUA_DATA[4]/SLICE_545_K1_H1 
         , GNDI, 
         \coreInst/fullALUInst/muxA/ALUA_DATA[4]/SLICE_545/coreInst/fullALUInst/muxA/ALUA_DATA[4]/GATE_H0 
         ;

  lut40386 \coreInst/fullALUInst/muxA/ALUA_DATA[4]/SLICE_545_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/muxA/ALUA_DATA[4]/SLICE_545/coreInst/fullALUInst/muxA/ALUA_DATA[4]/SLICE_545_K1_H1 )
    );
  lut40387 \coreInst/fullALUInst/muxA/ALUA_DATA[4]/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/muxA/ALUA_DATA[4]/SLICE_545/coreInst/fullALUInst/muxA/ALUA_DATA[4]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/fullALUInst/muxA/ALUA_DATA[4]/SLICE_545_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/muxA/ALUA_DATA[4]/SLICE_545/coreInst/fullALUInst/muxA/ALUA_DATA[4]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/muxA/ALUA_DATA[4]/SLICE_545/coreInst/fullALUInst/muxA/ALUA_DATA[4]/SLICE_545_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40386 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAB8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40387 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC55) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_PARITY_2_0_SLICE_546 ( input C1, B1, D0, 
    B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/PARITY_2_0/SLICE_546/coreInst/fullALUInst/aluInst/PARITY_2_0/SLICE_546_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/PARITY_2_0/SLICE_546/coreInst/fullALUInst/aluInst/PARITY_2_0/GATE_H0 
         ;

  lut40388 \coreInst/fullALUInst/aluInst/PARITY_2_0/SLICE_546_K1 ( .A(GNDI), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/PARITY_2_0/SLICE_546/coreInst/fullALUInst/aluInst/PARITY_2_0/SLICE_546_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40389 \coreInst/fullALUInst/aluInst/PARITY_2_0/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/PARITY_2_0/SLICE_546/coreInst/fullALUInst/aluInst/PARITY_2_0/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/PARITY_2_0/SLICE_546_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/PARITY_2_0/SLICE_546/coreInst/fullALUInst/aluInst/PARITY_2_0/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/PARITY_2_0/SLICE_546/coreInst/fullALUInst/aluInst/PARITY_2_0/SLICE_546_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40388 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40389 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF66) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_PARITY_2_12_SLICE_547 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/PARITY_2_12/SLICE_547/coreInst/fullALUInst/aluInst/PARITY_2_12/SLICE_547_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/PARITY_2_12/SLICE_547/coreInst/fullALUInst/aluInst/PARITY_2_12/GATE_H0 
         ;

  lut40390 \coreInst/fullALUInst/aluInst/PARITY_2_12/SLICE_547_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/PARITY_2_12/SLICE_547/coreInst/fullALUInst/aluInst/PARITY_2_12/SLICE_547_K1_H1 )
    );
  lut40391 \coreInst/fullALUInst/aluInst/PARITY_2_12/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/PARITY_2_12/SLICE_547/coreInst/fullALUInst/aluInst/PARITY_2_12/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/PARITY_2_12/SLICE_547_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/PARITY_2_12/SLICE_547/coreInst/fullALUInst/aluInst/PARITY_2_12/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/PARITY_2_12/SLICE_547/coreInst/fullALUInst/aluInst/PARITY_2_12/SLICE_547_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40390 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40391 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_un38_RESULT_105_0_SLICE_548 ( input D1, C1, 
    B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/un38_RESULT_105_0/SLICE_548/coreInst/fullALUInst/aluInst/un38_RESULT_105_0/SLICE_548_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_105_0/SLICE_548/coreInst/fullALUInst/aluInst/un38_RESULT_105_0/GATE_H0 
         ;

  lut40392 \coreInst/fullALUInst/aluInst/un38_RESULT_105_0/SLICE_548_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/un38_RESULT_105_0/SLICE_548/coreInst/fullALUInst/aluInst/un38_RESULT_105_0/SLICE_548_K1_H1 )
    );
  lut40393 \coreInst/fullALUInst/aluInst/un38_RESULT_105_0/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/un38_RESULT_105_0/SLICE_548/coreInst/fullALUInst/aluInst/un38_RESULT_105_0/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/un38_RESULT_105_0/SLICE_548_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/un38_RESULT_105_0/SLICE_548/coreInst/fullALUInst/aluInst/un38_RESULT_105_0/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/un38_RESULT_105_0/SLICE_548/coreInst/fullALUInst/aluInst/un38_RESULT_105_0/SLICE_548_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40392 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5410) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40393 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_un38_RESULT_103_0_SLICE_549 ( input D1, C1, 
    B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/un38_RESULT_103_0/SLICE_549/coreInst/fullALUInst/aluInst/un38_RESULT_103_0/SLICE_549_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_103_0/SLICE_549/coreInst/fullALUInst/aluInst/un38_RESULT_103_0/GATE_H0 
         ;

  lut40394 \coreInst/fullALUInst/aluInst/un38_RESULT_103_0/SLICE_549_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/un38_RESULT_103_0/SLICE_549/coreInst/fullALUInst/aluInst/un38_RESULT_103_0/SLICE_549_K1_H1 )
    );
  lut40395 \coreInst/fullALUInst/aluInst/un38_RESULT_103_0/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/un38_RESULT_103_0/SLICE_549/coreInst/fullALUInst/aluInst/un38_RESULT_103_0/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/un38_RESULT_103_0/SLICE_549_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/un38_RESULT_103_0/SLICE_549/coreInst/fullALUInst/aluInst/un38_RESULT_103_0/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/un38_RESULT_103_0/SLICE_549/coreInst/fullALUInst/aluInst/un38_RESULT_103_0/SLICE_549_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40394 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40395 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_un38_RESULT_100_0_SLICE_550 ( input D1, C1, 
    B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/un38_RESULT_100_0/SLICE_550/coreInst/fullALUInst/aluInst/un38_RESULT_100_0/SLICE_550_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_100_0/SLICE_550/coreInst/fullALUInst/aluInst/un38_RESULT_100_0/GATE_H0 
         ;

  lut40396 \coreInst/fullALUInst/aluInst/un38_RESULT_100_0/SLICE_550_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/un38_RESULT_100_0/SLICE_550/coreInst/fullALUInst/aluInst/un38_RESULT_100_0/SLICE_550_K1_H1 )
    );
  lut40397 \coreInst/fullALUInst/aluInst/un38_RESULT_100_0/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/un38_RESULT_100_0/SLICE_550/coreInst/fullALUInst/aluInst/un38_RESULT_100_0/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/un38_RESULT_100_0/SLICE_550_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/un38_RESULT_100_0/SLICE_550/coreInst/fullALUInst/aluInst/un38_RESULT_100_0/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/un38_RESULT_100_0/SLICE_550/coreInst/fullALUInst/aluInst/un38_RESULT_100_0/SLICE_550_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40396 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40397 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_13__SLICE_551 ( input C1, B1, A1, 
    C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT[13]/SLICE_551/coreInst/fullALUInst/aluInst/RESULT[13]/SLICE_551_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT[13]/SLICE_551/coreInst/fullALUInst/aluInst/RESULT[13]/GATE_H0 
         ;

  lut40398 \coreInst/fullALUInst/aluInst/RESULT[13]/SLICE_551_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT[13]/SLICE_551/coreInst/fullALUInst/aluInst/RESULT[13]/SLICE_551_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40399 \coreInst/fullALUInst/aluInst/RESULT[13]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT[13]/SLICE_551/coreInst/fullALUInst/aluInst/RESULT[13]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT[13]/SLICE_551_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT[13]/SLICE_551/coreInst/fullALUInst/aluInst/RESULT[13]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT[13]/SLICE_551/coreInst/fullALUInst/aluInst/RESULT[13]/SLICE_551_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40398 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40399 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_12_0_10__SLICE_552 ( input D1, C1, 
    B1, D0, C0, B0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_12_0[10]/SLICE_552/coreInst/fullALUInst/aluInst/RESULT_12_0[10]/SLICE_552_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_12_0[10]/SLICE_552/coreInst/fullALUInst/aluInst/RESULT_12_0[10]/GATE_H0 
         ;

  lut40400 \coreInst/fullALUInst/aluInst/RESULT_12_0[10]/SLICE_552_K1 ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_12_0[10]/SLICE_552/coreInst/fullALUInst/aluInst/RESULT_12_0[10]/SLICE_552_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40401 \coreInst/fullALUInst/aluInst/RESULT_12_0[10]/GATE ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_12_0[10]/SLICE_552/coreInst/fullALUInst/aluInst/RESULT_12_0[10]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_12_0[10]/SLICE_552_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_12_0[10]/SLICE_552/coreInst/fullALUInst/aluInst/RESULT_12_0[10]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_12_0[10]/SLICE_552/coreInst/fullALUInst/aluInst/RESULT_12_0[10]/SLICE_552_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40400 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40401 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_8__SLICE_553 ( input C1, B1, A1, D0, 
    B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT[8]/SLICE_553/coreInst/fullALUInst/aluInst/RESULT[8]/SLICE_553_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT[8]/SLICE_553/coreInst/fullALUInst/aluInst/RESULT[8]/GATE_H0 
         ;

  lut40402 \coreInst/fullALUInst/aluInst/RESULT[8]/SLICE_553_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT[8]/SLICE_553/coreInst/fullALUInst/aluInst/RESULT[8]/SLICE_553_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40403 \coreInst/fullALUInst/aluInst/RESULT[8]/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT[8]/SLICE_553/coreInst/fullALUInst/aluInst/RESULT[8]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT[8]/SLICE_553_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT[8]/SLICE_553/coreInst/fullALUInst/aluInst/RESULT[8]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT[8]/SLICE_553/coreInst/fullALUInst/aluInst/RESULT[8]/SLICE_553_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40402 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40403 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_12_1_RNO_6__SLICE_554 ( input D1, 
    C1, B1, A1, D0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/SLICE_554/coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/SLICE_554_K1_H1 
         , GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/SLICE_554/coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/GATE_H0 
         ;

  lut40404 \coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/SLICE_554_K1 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/SLICE_554/coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/SLICE_554_K1_H1 )
    );
  lut40405 \coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/GATE ( .A(A0), 
    .B(B0), .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/SLICE_554/coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/SLICE_554_K0K1MUX 
    ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/SLICE_554/coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/SLICE_554/coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[6]/SLICE_554_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40404 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2A7F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40405 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h11DD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_12_0_3__SLICE_555 ( input D1, B1, 
    A1, D0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_12_0[3]/SLICE_555/coreInst/fullALUInst/aluInst/RESULT_12_0[3]/SLICE_555_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_12_0[3]/SLICE_555/coreInst/fullALUInst/aluInst/RESULT_12_0[3]/GATE_H0 
         ;

  lut40406 \coreInst/fullALUInst/aluInst/RESULT_12_0[3]/SLICE_555_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_12_0[3]/SLICE_555/coreInst/fullALUInst/aluInst/RESULT_12_0[3]/SLICE_555_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40407 \coreInst/fullALUInst/aluInst/RESULT_12_0[3]/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_12_0[3]/SLICE_555/coreInst/fullALUInst/aluInst/RESULT_12_0[3]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_12_0[3]/SLICE_555_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_12_0[3]/SLICE_555/coreInst/fullALUInst/aluInst/RESULT_12_0[3]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_12_0[3]/SLICE_555/coreInst/fullALUInst/aluInst/RESULT_12_0[3]/SLICE_555_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40406 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBB88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40407 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_10_4__SLICE_556 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_10[4]/SLICE_556/coreInst/fullALUInst/aluInst/RESULT_10[4]/SLICE_556_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_10[4]/SLICE_556/coreInst/fullALUInst/aluInst/RESULT_10[4]/GATE_H0 
         ;

  lut40408 \coreInst/fullALUInst/aluInst/RESULT_10[4]/SLICE_556_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10[4]/SLICE_556/coreInst/fullALUInst/aluInst/RESULT_10[4]/SLICE_556_K1_H1 )
    );
  lut40409 \coreInst/fullALUInst/aluInst/RESULT_10[4]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10[4]/SLICE_556/coreInst/fullALUInst/aluInst/RESULT_10[4]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_10[4]/SLICE_556_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_10[4]/SLICE_556/coreInst/fullALUInst/aluInst/RESULT_10[4]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10[4]/SLICE_556/coreInst/fullALUInst/aluInst/RESULT_10[4]/SLICE_556_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_10[4]/SLICE_556_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40408 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40409 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAB8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_13_15__SLICE_557 ( input D1, C1, B1, 
    A1, D0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_13[15]/SLICE_557/coreInst/fullALUInst/aluInst/RESULT_13[15]/SLICE_557_K1_H1 
         , GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_13[15]/SLICE_557/coreInst/fullALUInst/aluInst/RESULT_13[15]/GATE_H0 
         ;

  lut40410 \coreInst/fullALUInst/aluInst/RESULT_13[15]/SLICE_557_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_13[15]/SLICE_557/coreInst/fullALUInst/aluInst/RESULT_13[15]/SLICE_557_K1_H1 )
    );
  lut40411 \coreInst/fullALUInst/aluInst/RESULT_13[15]/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_13[15]/SLICE_557/coreInst/fullALUInst/aluInst/RESULT_13[15]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_13[15]/SLICE_557_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_13[15]/SLICE_557/coreInst/fullALUInst/aluInst/RESULT_13[15]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_13[15]/SLICE_557/coreInst/fullALUInst/aluInst/RESULT_13[15]/SLICE_557_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40410 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h20EF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40411 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDD88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_10_d_10__SLICE_558 ( input D1, A1, 
    D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_10_d[10]/SLICE_558/coreInst/fullALUInst/aluInst/RESULT_10_d[10]/SLICE_558_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_10_d[10]/SLICE_558/coreInst/fullALUInst/aluInst/RESULT_10_d[10]/GATE_H0 
         ;

  lut40412 \coreInst/fullALUInst/aluInst/RESULT_10_d[10]/SLICE_558_K1 ( .A(A1), 
    .B(GNDI), .C(GNDI), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_d[10]/SLICE_558/coreInst/fullALUInst/aluInst/RESULT_10_d[10]/SLICE_558_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40413 \coreInst/fullALUInst/aluInst/RESULT_10_d[10]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_d[10]/SLICE_558/coreInst/fullALUInst/aluInst/RESULT_10_d[10]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_10_d[10]/SLICE_558_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_10_d[10]/SLICE_558/coreInst/fullALUInst/aluInst/RESULT_10_d[10]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10_d[10]/SLICE_558/coreInst/fullALUInst/aluInst/RESULT_10_d[10]/SLICE_558_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40412 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40413 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCCA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_10_2__SLICE_559 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_10[2]/SLICE_559/coreInst/fullALUInst/aluInst/RESULT_10[2]/SLICE_559_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_10[2]/SLICE_559/coreInst/fullALUInst/aluInst/RESULT_10[2]/GATE_H0 
         ;

  lut40414 \coreInst/fullALUInst/aluInst/RESULT_10[2]/SLICE_559_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10[2]/SLICE_559/coreInst/fullALUInst/aluInst/RESULT_10[2]/SLICE_559_K1_H1 )
    );
  lut40415 \coreInst/fullALUInst/aluInst/RESULT_10[2]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10[2]/SLICE_559/coreInst/fullALUInst/aluInst/RESULT_10[2]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_10[2]/SLICE_559_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_10[2]/SLICE_559/coreInst/fullALUInst/aluInst/RESULT_10[2]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10[2]/SLICE_559/coreInst/fullALUInst/aluInst/RESULT_10[2]/SLICE_559_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_10[2]/SLICE_559_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40414 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40415 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAB8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_12_0_15__SLICE_560 ( input D1, C1, 
    B1, D0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_12_0[15]/SLICE_560/coreInst/fullALUInst/aluInst/RESULT_12_0[15]/SLICE_560_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_12_0[15]/SLICE_560/coreInst/fullALUInst/aluInst/RESULT_12_0[15]/GATE_H0 
         ;

  lut40416 \coreInst/fullALUInst/aluInst/RESULT_12_0[15]/SLICE_560_K1 ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_12_0[15]/SLICE_560/coreInst/fullALUInst/aluInst/RESULT_12_0[15]/SLICE_560_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40417 \coreInst/fullALUInst/aluInst/RESULT_12_0[15]/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_12_0[15]/SLICE_560/coreInst/fullALUInst/aluInst/RESULT_12_0[15]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_12_0[15]/SLICE_560_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_12_0[15]/SLICE_560/coreInst/fullALUInst/aluInst/RESULT_12_0[15]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_12_0[15]/SLICE_560/coreInst/fullALUInst/aluInst/RESULT_12_0[15]/SLICE_560_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40416 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40417 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAACC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_10_1__SLICE_561 ( input D1, B1, A1, 
    D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_10[1]/SLICE_561/coreInst/fullALUInst/aluInst/RESULT_10[1]/SLICE_561_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_10[1]/SLICE_561/coreInst/fullALUInst/aluInst/RESULT_10[1]/GATE_H0 
         ;

  lut40418 \coreInst/fullALUInst/aluInst/RESULT_10[1]/SLICE_561_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10[1]/SLICE_561/coreInst/fullALUInst/aluInst/RESULT_10[1]/SLICE_561_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40419 \coreInst/fullALUInst/aluInst/RESULT_10[1]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10[1]/SLICE_561/coreInst/fullALUInst/aluInst/RESULT_10[1]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_10[1]/SLICE_561_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_10[1]/SLICE_561/coreInst/fullALUInst/aluInst/RESULT_10[1]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10[1]/SLICE_561/coreInst/fullALUInst/aluInst/RESULT_10[1]/SLICE_561_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_10[1]/SLICE_561_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40418 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40419 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_11_1__SLICE_562 ( input D1, C1, B1, 
    D0, C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_11[1]/SLICE_562/coreInst/fullALUInst/aluInst/RESULT_11[1]/SLICE_562_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_11[1]/SLICE_562/coreInst/fullALUInst/aluInst/RESULT_11[1]/GATE_H0 
         ;

  lut40420 \coreInst/fullALUInst/aluInst/RESULT_11[1]/SLICE_562_K1 ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[1]/SLICE_562/coreInst/fullALUInst/aluInst/RESULT_11[1]/SLICE_562_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40421 \coreInst/fullALUInst/aluInst/RESULT_11[1]/GATE ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[1]/SLICE_562/coreInst/fullALUInst/aluInst/RESULT_11[1]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_11[1]/SLICE_562_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_11[1]/SLICE_562/coreInst/fullALUInst/aluInst/RESULT_11[1]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_11[1]/SLICE_562/coreInst/fullALUInst/aluInst/RESULT_11[1]/SLICE_562_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40420 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40421 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_8_0_7__SLICE_563 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_8_0[7]/SLICE_563/coreInst/fullALUInst/aluInst/RESULT_8_0[7]/SLICE_563_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_8_0[7]/SLICE_563/coreInst/fullALUInst/aluInst/RESULT_8_0[7]/GATE_H0 
         ;

  lut40422 \coreInst/fullALUInst/aluInst/RESULT_8_0[7]/SLICE_563_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[7]/SLICE_563/coreInst/fullALUInst/aluInst/RESULT_8_0[7]/SLICE_563_K1_H1 )
    );
  lut40423 \coreInst/fullALUInst/aluInst/RESULT_8_0[7]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[7]/SLICE_563/coreInst/fullALUInst/aluInst/RESULT_8_0[7]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[7]/SLICE_563_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_8_0[7]/SLICE_563/coreInst/fullALUInst/aluInst/RESULT_8_0[7]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_8_0[7]/SLICE_563/coreInst/fullALUInst/aluInst/RESULT_8_0[7]/SLICE_563_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[7]/SLICE_563_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40422 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40423 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_11_7__SLICE_564 ( input D1, C1, B1, 
    A1, C0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_11[7]/SLICE_564/coreInst/fullALUInst/aluInst/RESULT_11[7]/SLICE_564_K1_H1 
         , GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_11[7]/SLICE_564/coreInst/fullALUInst/aluInst/RESULT_11[7]/GATE_H0 
         ;

  lut40424 \coreInst/fullALUInst/aluInst/RESULT_11[7]/SLICE_564_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[7]/SLICE_564/coreInst/fullALUInst/aluInst/RESULT_11[7]/SLICE_564_K1_H1 )
    );
  lut40425 \coreInst/fullALUInst/aluInst/RESULT_11[7]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[7]/SLICE_564/coreInst/fullALUInst/aluInst/RESULT_11[7]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_11[7]/SLICE_564_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_11[7]/SLICE_564/coreInst/fullALUInst/aluInst/RESULT_11[7]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_11[7]/SLICE_564/coreInst/fullALUInst/aluInst/RESULT_11[7]/SLICE_564_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40424 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDA8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40425 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_11_2__SLICE_565 ( input D1, C1, B1, 
    D0, C0, B0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_11[2]/SLICE_565/coreInst/fullALUInst/aluInst/RESULT_11[2]/SLICE_565_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_11[2]/SLICE_565/coreInst/fullALUInst/aluInst/RESULT_11[2]/GATE_H0 
         ;

  lut40420 \coreInst/fullALUInst/aluInst/RESULT_11[2]/SLICE_565_K1 ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[2]/SLICE_565/coreInst/fullALUInst/aluInst/RESULT_11[2]/SLICE_565_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40420 \coreInst/fullALUInst/aluInst/RESULT_11[2]/GATE ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[2]/SLICE_565/coreInst/fullALUInst/aluInst/RESULT_11[2]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_11[2]/SLICE_565_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_11[2]/SLICE_565/coreInst/fullALUInst/aluInst/RESULT_11[2]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_11[2]/SLICE_565/coreInst/fullALUInst/aluInst/RESULT_11[2]/SLICE_565_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_RESULT_11_4__SLICE_566 ( input C1, B1, A1, 
    C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_11[4]/SLICE_566/coreInst/fullALUInst/aluInst/RESULT_11[4]/SLICE_566_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_11[4]/SLICE_566/coreInst/fullALUInst/aluInst/RESULT_11[4]/GATE_H0 
         ;

  lut40426 \coreInst/fullALUInst/aluInst/RESULT_11[4]/SLICE_566_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[4]/SLICE_566/coreInst/fullALUInst/aluInst/RESULT_11[4]/SLICE_566_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40425 \coreInst/fullALUInst/aluInst/RESULT_11[4]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[4]/SLICE_566/coreInst/fullALUInst/aluInst/RESULT_11[4]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_11[4]/SLICE_566_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_11[4]/SLICE_566/coreInst/fullALUInst/aluInst/RESULT_11[4]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_11[4]/SLICE_566/coreInst/fullALUInst/aluInst/RESULT_11[4]/SLICE_566_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40426 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE2E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_11_0__SLICE_567 ( input D1, C1, B1, 
    A1, D0, C0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_11[0]/SLICE_567/coreInst/fullALUInst/aluInst/RESULT_11[0]/SLICE_567_K1_H1 
         , GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_11[0]/SLICE_567/coreInst/fullALUInst/aluInst/RESULT_11[0]/GATE_H0 
         ;

  lut40427 \coreInst/fullALUInst/aluInst/RESULT_11[0]/SLICE_567_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[0]/SLICE_567/coreInst/fullALUInst/aluInst/RESULT_11[0]/SLICE_567_K1_H1 )
    );
  lut40428 \coreInst/fullALUInst/aluInst/RESULT_11[0]/GATE ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[0]/SLICE_567/coreInst/fullALUInst/aluInst/RESULT_11[0]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_11[0]/SLICE_567_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_11[0]/SLICE_567/coreInst/fullALUInst/aluInst/RESULT_11[0]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_11[0]/SLICE_567/coreInst/fullALUInst/aluInst/RESULT_11[0]/SLICE_567_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40427 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBB1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40428 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA5AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_8_0_8__SLICE_568 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_8_0[8]/SLICE_568/coreInst/fullALUInst/aluInst/RESULT_8_0[8]/SLICE_568_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_8_0[8]/SLICE_568/coreInst/fullALUInst/aluInst/RESULT_8_0[8]/GATE_H0 
         ;

  lut40429 \coreInst/fullALUInst/aluInst/RESULT_8_0[8]/SLICE_568_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[8]/SLICE_568/coreInst/fullALUInst/aluInst/RESULT_8_0[8]/SLICE_568_K1_H1 )
    );
  lut40430 \coreInst/fullALUInst/aluInst/RESULT_8_0[8]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[8]/SLICE_568/coreInst/fullALUInst/aluInst/RESULT_8_0[8]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[8]/SLICE_568_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_8_0[8]/SLICE_568/coreInst/fullALUInst/aluInst/RESULT_8_0[8]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_8_0[8]/SLICE_568/coreInst/fullALUInst/aluInst/RESULT_8_0[8]/SLICE_568_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40429 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFCA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40430 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0AC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_9_8__SLICE_569 ( input C1, B1, A1, 
    D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_9[8]/SLICE_569/coreInst/fullALUInst/aluInst/RESULT_9[8]/SLICE_569_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_9[8]/SLICE_569/coreInst/fullALUInst/aluInst/RESULT_9[8]/GATE_H0 
         ;

  lut40431 \coreInst/fullALUInst/aluInst/RESULT_9[8]/SLICE_569_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[8]/SLICE_569/coreInst/fullALUInst/aluInst/RESULT_9[8]/SLICE_569_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40432 \coreInst/fullALUInst/aluInst/RESULT_9[8]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[8]/SLICE_569/coreInst/fullALUInst/aluInst/RESULT_9[8]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[8]/SLICE_569_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_9[8]/SLICE_569/coreInst/fullALUInst/aluInst/RESULT_9[8]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_9[8]/SLICE_569/coreInst/fullALUInst/aluInst/RESULT_9[8]/SLICE_569_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40431 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7C7C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40432 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4E44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_8_0_9__SLICE_570 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_8_0[9]/SLICE_570/coreInst/fullALUInst/aluInst/RESULT_8_0[9]/SLICE_570_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_8_0[9]/SLICE_570/coreInst/fullALUInst/aluInst/RESULT_8_0[9]/GATE_H0 
         ;

  lut40433 \coreInst/fullALUInst/aluInst/RESULT_8_0[9]/SLICE_570_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[9]/SLICE_570/coreInst/fullALUInst/aluInst/RESULT_8_0[9]/SLICE_570_K1_H1 )
    );
  lut40423 \coreInst/fullALUInst/aluInst/RESULT_8_0[9]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[9]/SLICE_570/coreInst/fullALUInst/aluInst/RESULT_8_0[9]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[9]/SLICE_570_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_8_0[9]/SLICE_570/coreInst/fullALUInst/aluInst/RESULT_8_0[9]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_8_0[9]/SLICE_570/coreInst/fullALUInst/aluInst/RESULT_8_0[9]/SLICE_570_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[9]/SLICE_570_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40433 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDD8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_9_9__SLICE_571 ( input D1, C1, B1, 
    D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_9[9]/SLICE_571/coreInst/fullALUInst/aluInst/RESULT_9[9]/SLICE_571_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_9[9]/SLICE_571/coreInst/fullALUInst/aluInst/RESULT_9[9]/GATE_H0 
         ;

  lut40434 \coreInst/fullALUInst/aluInst/RESULT_9[9]/SLICE_571_K1 ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[9]/SLICE_571/coreInst/fullALUInst/aluInst/RESULT_9[9]/SLICE_571_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40435 \coreInst/fullALUInst/aluInst/RESULT_9[9]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[9]/SLICE_571/coreInst/fullALUInst/aluInst/RESULT_9[9]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[9]/SLICE_571_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_9[9]/SLICE_571/coreInst/fullALUInst/aluInst/RESULT_9[9]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_9[9]/SLICE_571/coreInst/fullALUInst/aluInst/RESULT_9[9]/SLICE_571_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40434 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3CFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40435 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7340) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_8_0_10__SLICE_572 ( input D1, C1, 
    B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_8_0[10]/SLICE_572/coreInst/fullALUInst/aluInst/RESULT_8_0[10]/SLICE_572_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_8_0[10]/SLICE_572/coreInst/fullALUInst/aluInst/RESULT_8_0[10]/GATE_H0 
         ;

  lut40422 \coreInst/fullALUInst/aluInst/RESULT_8_0[10]/SLICE_572_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[10]/SLICE_572/coreInst/fullALUInst/aluInst/RESULT_8_0[10]/SLICE_572_K1_H1 )
    );
  lut40436 \coreInst/fullALUInst/aluInst/RESULT_8_0[10]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[10]/SLICE_572/coreInst/fullALUInst/aluInst/RESULT_8_0[10]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[10]/SLICE_572_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_8_0[10]/SLICE_572/coreInst/fullALUInst/aluInst/RESULT_8_0[10]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_8_0[10]/SLICE_572/coreInst/fullALUInst/aluInst/RESULT_8_0[10]/SLICE_572_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[10]/SLICE_572_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40436 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_9_10__SLICE_573 ( input C1, B1, A1, 
    D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_9[10]/SLICE_573/coreInst/fullALUInst/aluInst/RESULT_9[10]/SLICE_573_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_9[10]/SLICE_573/coreInst/fullALUInst/aluInst/RESULT_9[10]/GATE_H0 
         ;

  lut40437 \coreInst/fullALUInst/aluInst/RESULT_9[10]/SLICE_573_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[10]/SLICE_573/coreInst/fullALUInst/aluInst/RESULT_9[10]/SLICE_573_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40438 \coreInst/fullALUInst/aluInst/RESULT_9[10]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[10]/SLICE_573/coreInst/fullALUInst/aluInst/RESULT_9[10]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[10]/SLICE_573_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_9[10]/SLICE_573/coreInst/fullALUInst/aluInst/RESULT_9[10]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_9[10]/SLICE_573/coreInst/fullALUInst/aluInst/RESULT_9[10]/SLICE_573_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40437 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7A7A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40438 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7520) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_8_0_11__SLICE_574 ( input D1, C1, 
    B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_8_0[11]/SLICE_574/coreInst/fullALUInst/aluInst/RESULT_8_0[11]/SLICE_574_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_8_0[11]/SLICE_574/coreInst/fullALUInst/aluInst/RESULT_8_0[11]/GATE_H0 
         ;

  lut40439 \coreInst/fullALUInst/aluInst/RESULT_8_0[11]/SLICE_574_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[11]/SLICE_574/coreInst/fullALUInst/aluInst/RESULT_8_0[11]/SLICE_574_K1_H1 )
    );
  lut40423 \coreInst/fullALUInst/aluInst/RESULT_8_0[11]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[11]/SLICE_574/coreInst/fullALUInst/aluInst/RESULT_8_0[11]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[11]/SLICE_574_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_8_0[11]/SLICE_574/coreInst/fullALUInst/aluInst/RESULT_8_0[11]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_8_0[11]/SLICE_574/coreInst/fullALUInst/aluInst/RESULT_8_0[11]/SLICE_574_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[11]/SLICE_574_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40439 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE54) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_9_11__SLICE_575 ( input D1, C1, A1, 
    D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_9[11]/SLICE_575/coreInst/fullALUInst/aluInst/RESULT_9[11]/SLICE_575_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_9[11]/SLICE_575/coreInst/fullALUInst/aluInst/RESULT_9[11]/GATE_H0 
         ;

  lut40440 \coreInst/fullALUInst/aluInst/RESULT_9[11]/SLICE_575_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[11]/SLICE_575/coreInst/fullALUInst/aluInst/RESULT_9[11]/SLICE_575_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40441 \coreInst/fullALUInst/aluInst/RESULT_9[11]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[11]/SLICE_575/coreInst/fullALUInst/aluInst/RESULT_9[11]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[11]/SLICE_575_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_9[11]/SLICE_575/coreInst/fullALUInst/aluInst/RESULT_9[11]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_9[11]/SLICE_575/coreInst/fullALUInst/aluInst/RESULT_9[11]/SLICE_575_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40440 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5FF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40441 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h50D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_8_0_12__SLICE_576 ( input D1, C1, 
    B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_8_0[12]/SLICE_576/coreInst/fullALUInst/aluInst/RESULT_8_0[12]/SLICE_576_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_8_0[12]/SLICE_576/coreInst/fullALUInst/aluInst/RESULT_8_0[12]/GATE_H0 
         ;

  lut40442 \coreInst/fullALUInst/aluInst/RESULT_8_0[12]/SLICE_576_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[12]/SLICE_576/coreInst/fullALUInst/aluInst/RESULT_8_0[12]/SLICE_576_K1_H1 )
    );
  lut40443 \coreInst/fullALUInst/aluInst/RESULT_8_0[12]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[12]/SLICE_576/coreInst/fullALUInst/aluInst/RESULT_8_0[12]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[12]/SLICE_576_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_8_0[12]/SLICE_576/coreInst/fullALUInst/aluInst/RESULT_8_0[12]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_8_0[12]/SLICE_576/coreInst/fullALUInst/aluInst/RESULT_8_0[12]/SLICE_576_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[12]/SLICE_576_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40442 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0EE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40443 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_9_12__SLICE_577 ( input D1, C1, A1, 
    D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_9[12]/SLICE_577/coreInst/fullALUInst/aluInst/RESULT_9[12]/SLICE_577_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_9[12]/SLICE_577/coreInst/fullALUInst/aluInst/RESULT_9[12]/GATE_H0 
         ;

  lut40444 \coreInst/fullALUInst/aluInst/RESULT_9[12]/SLICE_577_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[12]/SLICE_577/coreInst/fullALUInst/aluInst/RESULT_9[12]/SLICE_577_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40445 \coreInst/fullALUInst/aluInst/RESULT_9[12]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[12]/SLICE_577/coreInst/fullALUInst/aluInst/RESULT_9[12]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[12]/SLICE_577_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_9[12]/SLICE_577/coreInst/fullALUInst/aluInst/RESULT_9[12]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_9[12]/SLICE_577/coreInst/fullALUInst/aluInst/RESULT_9[12]/SLICE_577_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40444 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5FAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40445 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2F20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_8_0_14__SLICE_578 ( input D1, C1, 
    B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_8_0[14]/SLICE_578/coreInst/fullALUInst/aluInst/RESULT_8_0[14]/SLICE_578_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_8_0[14]/SLICE_578/coreInst/fullALUInst/aluInst/RESULT_8_0[14]/GATE_H0 
         ;

  lut40446 \coreInst/fullALUInst/aluInst/RESULT_8_0[14]/SLICE_578_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[14]/SLICE_578/coreInst/fullALUInst/aluInst/RESULT_8_0[14]/SLICE_578_K1_H1 )
    );
  lut40447 \coreInst/fullALUInst/aluInst/RESULT_8_0[14]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[14]/SLICE_578/coreInst/fullALUInst/aluInst/RESULT_8_0[14]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[14]/SLICE_578_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_8_0[14]/SLICE_578/coreInst/fullALUInst/aluInst/RESULT_8_0[14]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_8_0[14]/SLICE_578/coreInst/fullALUInst/aluInst/RESULT_8_0[14]/SLICE_578_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[14]/SLICE_578_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40446 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDD8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40447 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8B88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_9_14__SLICE_579 ( input D1, C1, A1, 
    D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_9[14]/SLICE_579/coreInst/fullALUInst/aluInst/RESULT_9[14]/SLICE_579_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_9[14]/SLICE_579/coreInst/fullALUInst/aluInst/RESULT_9[14]/GATE_H0 
         ;

  lut40440 \coreInst/fullALUInst/aluInst/RESULT_9[14]/SLICE_579_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[14]/SLICE_579/coreInst/fullALUInst/aluInst/RESULT_9[14]/SLICE_579_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40432 \coreInst/fullALUInst/aluInst/RESULT_9[14]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[14]/SLICE_579/coreInst/fullALUInst/aluInst/RESULT_9[14]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[14]/SLICE_579_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_9[14]/SLICE_579/coreInst/fullALUInst/aluInst/RESULT_9[14]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_9[14]/SLICE_579/coreInst/fullALUInst/aluInst/RESULT_9[14]/SLICE_579_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_RESULT_8_0_1__SLICE_580 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_8_0[1]/SLICE_580/coreInst/fullALUInst/aluInst/RESULT_8_0[1]/SLICE_580_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_8_0[1]/SLICE_580/coreInst/fullALUInst/aluInst/RESULT_8_0[1]/GATE_H0 
         ;

  lut40422 \coreInst/fullALUInst/aluInst/RESULT_8_0[1]/SLICE_580_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[1]/SLICE_580/coreInst/fullALUInst/aluInst/RESULT_8_0[1]/SLICE_580_K1_H1 )
    );
  lut40436 \coreInst/fullALUInst/aluInst/RESULT_8_0[1]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[1]/SLICE_580/coreInst/fullALUInst/aluInst/RESULT_8_0[1]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[1]/SLICE_580_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_8_0[1]/SLICE_580/coreInst/fullALUInst/aluInst/RESULT_8_0[1]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_8_0[1]/SLICE_580/coreInst/fullALUInst/aluInst/RESULT_8_0[1]/SLICE_580_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[1]/SLICE_580_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_RESULT_8_0_5__SLICE_581 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_8_0[5]/SLICE_581/coreInst/fullALUInst/aluInst/RESULT_8_0[5]/SLICE_581_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_8_0[5]/SLICE_581/coreInst/fullALUInst/aluInst/RESULT_8_0[5]/GATE_H0 
         ;

  lut40448 \coreInst/fullALUInst/aluInst/RESULT_8_0[5]/SLICE_581_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[5]/SLICE_581/coreInst/fullALUInst/aluInst/RESULT_8_0[5]/SLICE_581_K1_H1 )
    );
  lut40449 \coreInst/fullALUInst/aluInst/RESULT_8_0[5]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[5]/SLICE_581/coreInst/fullALUInst/aluInst/RESULT_8_0[5]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[5]/SLICE_581_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_8_0[5]/SLICE_581/coreInst/fullALUInst/aluInst/RESULT_8_0[5]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_8_0[5]/SLICE_581/coreInst/fullALUInst/aluInst/RESULT_8_0[5]/SLICE_581_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[5]/SLICE_581_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40448 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE0E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40449 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF022) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_8_0_2__SLICE_582 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_8_0[2]/SLICE_582/coreInst/fullALUInst/aluInst/RESULT_8_0[2]/SLICE_582_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_8_0[2]/SLICE_582/coreInst/fullALUInst/aluInst/RESULT_8_0[2]/GATE_H0 
         ;

  lut40450 \coreInst/fullALUInst/aluInst/RESULT_8_0[2]/SLICE_582_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[2]/SLICE_582/coreInst/fullALUInst/aluInst/RESULT_8_0[2]/SLICE_582_K1_H1 )
    );
  lut40451 \coreInst/fullALUInst/aluInst/RESULT_8_0[2]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[2]/SLICE_582/coreInst/fullALUInst/aluInst/RESULT_8_0[2]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[2]/SLICE_582_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_8_0[2]/SLICE_582/coreInst/fullALUInst/aluInst/RESULT_8_0[2]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_8_0[2]/SLICE_582/coreInst/fullALUInst/aluInst/RESULT_8_0[2]/SLICE_582_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[2]/SLICE_582_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40450 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40451 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_8_0_6__SLICE_583 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_8_0[6]/SLICE_583/coreInst/fullALUInst/aluInst/RESULT_8_0[6]/SLICE_583_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_8_0[6]/SLICE_583/coreInst/fullALUInst/aluInst/RESULT_8_0[6]/GATE_H0 
         ;

  lut40452 \coreInst/fullALUInst/aluInst/RESULT_8_0[6]/SLICE_583_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[6]/SLICE_583/coreInst/fullALUInst/aluInst/RESULT_8_0[6]/SLICE_583_K1_H1 )
    );
  lut40436 \coreInst/fullALUInst/aluInst/RESULT_8_0[6]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[6]/SLICE_583/coreInst/fullALUInst/aluInst/RESULT_8_0[6]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[6]/SLICE_583_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_8_0[6]/SLICE_583/coreInst/fullALUInst/aluInst/RESULT_8_0[6]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_8_0[6]/SLICE_583/coreInst/fullALUInst/aluInst/RESULT_8_0[6]/SLICE_583_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[6]/SLICE_583_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40452 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBB8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_8_0_4__SLICE_584 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_8_0[4]/SLICE_584/coreInst/fullALUInst/aluInst/RESULT_8_0[4]/SLICE_584_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_8_0[4]/SLICE_584/coreInst/fullALUInst/aluInst/RESULT_8_0[4]/GATE_H0 
         ;

  lut40453 \coreInst/fullALUInst/aluInst/RESULT_8_0[4]/SLICE_584_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[4]/SLICE_584/coreInst/fullALUInst/aluInst/RESULT_8_0[4]/SLICE_584_K1_H1 )
    );
  lut40454 \coreInst/fullALUInst/aluInst/RESULT_8_0[4]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[4]/SLICE_584/coreInst/fullALUInst/aluInst/RESULT_8_0[4]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[4]/SLICE_584_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_8_0[4]/SLICE_584/coreInst/fullALUInst/aluInst/RESULT_8_0[4]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_8_0[4]/SLICE_584/coreInst/fullALUInst/aluInst/RESULT_8_0[4]/SLICE_584_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[4]/SLICE_584_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40453 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE32) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40454 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_8_0_3__SLICE_585 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_8_0[3]/SLICE_585/coreInst/fullALUInst/aluInst/RESULT_8_0[3]/SLICE_585_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_8_0[3]/SLICE_585/coreInst/fullALUInst/aluInst/RESULT_8_0[3]/GATE_H0 
         ;

  lut40422 \coreInst/fullALUInst/aluInst/RESULT_8_0[3]/SLICE_585_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[3]/SLICE_585/coreInst/fullALUInst/aluInst/RESULT_8_0[3]/SLICE_585_K1_H1 )
    );
  lut40436 \coreInst/fullALUInst/aluInst/RESULT_8_0[3]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[3]/SLICE_585/coreInst/fullALUInst/aluInst/RESULT_8_0[3]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[3]/SLICE_585_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_8_0[3]/SLICE_585/coreInst/fullALUInst/aluInst/RESULT_8_0[3]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_8_0[3]/SLICE_585/coreInst/fullALUInst/aluInst/RESULT_8_0[3]/SLICE_585_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[3]/SLICE_585_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_RESULT_11_8__SLICE_586 ( input D1, C1, B1, 
    A1, D0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_11[8]/SLICE_586/coreInst/fullALUInst/aluInst/RESULT_11[8]/SLICE_586_K1_H1 
         , GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_11[8]/SLICE_586/coreInst/fullALUInst/aluInst/RESULT_11[8]/GATE_H0 
         ;

  lut40455 \coreInst/fullALUInst/aluInst/RESULT_11[8]/SLICE_586_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[8]/SLICE_586/coreInst/fullALUInst/aluInst/RESULT_11[8]/SLICE_586_K1_H1 )
    );
  lut40456 \coreInst/fullALUInst/aluInst/RESULT_11[8]/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[8]/SLICE_586/coreInst/fullALUInst/aluInst/RESULT_11[8]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_11[8]/SLICE_586_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_11[8]/SLICE_586/coreInst/fullALUInst/aluInst/RESULT_11[8]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_11[8]/SLICE_586/coreInst/fullALUInst/aluInst/RESULT_11[8]/SLICE_586_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40455 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFACC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40456 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_11_9__SLICE_587 ( input D1, C1, B1, 
    A1, D0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_11[9]/SLICE_587/coreInst/fullALUInst/aluInst/RESULT_11[9]/SLICE_587_K1_H1 
         , GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_11[9]/SLICE_587/coreInst/fullALUInst/aluInst/RESULT_11[9]/GATE_H0 
         ;

  lut40457 \coreInst/fullALUInst/aluInst/RESULT_11[9]/SLICE_587_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[9]/SLICE_587/coreInst/fullALUInst/aluInst/RESULT_11[9]/SLICE_587_K1_H1 )
    );
  lut40458 \coreInst/fullALUInst/aluInst/RESULT_11[9]/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[9]/SLICE_587/coreInst/fullALUInst/aluInst/RESULT_11[9]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_11[9]/SLICE_587_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_11[9]/SLICE_587/coreInst/fullALUInst/aluInst/RESULT_11[9]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_11[9]/SLICE_587/coreInst/fullALUInst/aluInst/RESULT_11[9]/SLICE_587_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40457 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEE4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40458 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_11_11__SLICE_588 ( input D1, C1, B1, 
    A1, C0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_11[11]/SLICE_588/coreInst/fullALUInst/aluInst/RESULT_11[11]/SLICE_588_K1_H1 
         , GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_11[11]/SLICE_588/coreInst/fullALUInst/aluInst/RESULT_11[11]/GATE_H0 
         ;

  lut40459 \coreInst/fullALUInst/aluInst/RESULT_11[11]/SLICE_588_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[11]/SLICE_588/coreInst/fullALUInst/aluInst/RESULT_11[11]/SLICE_588_K1_H1 )
    );
  lut40460 \coreInst/fullALUInst/aluInst/RESULT_11[11]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[11]/SLICE_588/coreInst/fullALUInst/aluInst/RESULT_11[11]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_11[11]/SLICE_588_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_11[11]/SLICE_588/coreInst/fullALUInst/aluInst/RESULT_11[11]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_11[11]/SLICE_588/coreInst/fullALUInst/aluInst/RESULT_11[11]/SLICE_588_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40459 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCB8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40460 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_11_12__SLICE_589 ( input D1, C1, B1, 
    A1, C0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_11[12]/SLICE_589/coreInst/fullALUInst/aluInst/RESULT_11[12]/SLICE_589_K1_H1 
         , GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_11[12]/SLICE_589/coreInst/fullALUInst/aluInst/RESULT_11[12]/GATE_H0 
         ;

  lut40461 \coreInst/fullALUInst/aluInst/RESULT_11[12]/SLICE_589_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[12]/SLICE_589/coreInst/fullALUInst/aluInst/RESULT_11[12]/SLICE_589_K1_H1 )
    );
  lut40426 \coreInst/fullALUInst/aluInst/RESULT_11[12]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[12]/SLICE_589/coreInst/fullALUInst/aluInst/RESULT_11[12]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_11[12]/SLICE_589_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_11[12]/SLICE_589/coreInst/fullALUInst/aluInst/RESULT_11[12]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_11[12]/SLICE_589/coreInst/fullALUInst/aluInst/RESULT_11[12]/SLICE_589_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40461 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBC8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_11_13__SLICE_590 ( input D1, C1, B1, 
    A1, D0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_11[13]/SLICE_590/coreInst/fullALUInst/aluInst/RESULT_11[13]/SLICE_590_K1_H1 
         , GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_11[13]/SLICE_590/coreInst/fullALUInst/aluInst/RESULT_11[13]/GATE_H0 
         ;

  lut40462 \coreInst/fullALUInst/aluInst/RESULT_11[13]/SLICE_590_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[13]/SLICE_590/coreInst/fullALUInst/aluInst/RESULT_11[13]/SLICE_590_K1_H1 )
    );
  lut40456 \coreInst/fullALUInst/aluInst/RESULT_11[13]/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[13]/SLICE_590/coreInst/fullALUInst/aluInst/RESULT_11[13]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_11[13]/SLICE_590_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_11[13]/SLICE_590/coreInst/fullALUInst/aluInst/RESULT_11[13]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_11[13]/SLICE_590/coreInst/fullALUInst/aluInst/RESULT_11[13]/SLICE_590_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40462 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCB8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_11_14__SLICE_591 ( input D1, C1, B1, 
    A1, D0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_11[14]/SLICE_591/coreInst/fullALUInst/aluInst/RESULT_11[14]/SLICE_591_K1_H1 
         , GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_11[14]/SLICE_591/coreInst/fullALUInst/aluInst/RESULT_11[14]/GATE_H0 
         ;

  lut40463 \coreInst/fullALUInst/aluInst/RESULT_11[14]/SLICE_591_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[14]/SLICE_591/coreInst/fullALUInst/aluInst/RESULT_11[14]/SLICE_591_K1_H1 )
    );
  lut40456 \coreInst/fullALUInst/aluInst/RESULT_11[14]/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[14]/SLICE_591/coreInst/fullALUInst/aluInst/RESULT_11[14]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_11[14]/SLICE_591_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_11[14]/SLICE_591/coreInst/fullALUInst/aluInst/RESULT_11[14]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_11[14]/SLICE_591/coreInst/fullALUInst/aluInst/RESULT_11[14]/SLICE_591_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40463 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_8_0_0__SLICE_592 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_8_0[0]/SLICE_592/coreInst/fullALUInst/aluInst/RESULT_8_0[0]/SLICE_592_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_8_0[0]/SLICE_592/coreInst/fullALUInst/aluInst/RESULT_8_0[0]/GATE_H0 
         ;

  lut40422 \coreInst/fullALUInst/aluInst/RESULT_8_0[0]/SLICE_592_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[0]/SLICE_592/coreInst/fullALUInst/aluInst/RESULT_8_0[0]/SLICE_592_K1_H1 )
    );
  lut40436 \coreInst/fullALUInst/aluInst/RESULT_8_0[0]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_8_0[0]/SLICE_592/coreInst/fullALUInst/aluInst/RESULT_8_0[0]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[0]/SLICE_592_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_8_0[0]/SLICE_592/coreInst/fullALUInst/aluInst/RESULT_8_0[0]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_8_0[0]/SLICE_592/coreInst/fullALUInst/aluInst/RESULT_8_0[0]/SLICE_592_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_8_0[0]/SLICE_592_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_RESULT_9_1__SLICE_593 ( input C1, B1, A1, 
    D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_9[1]/SLICE_593/coreInst/fullALUInst/aluInst/RESULT_9[1]/SLICE_593_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_9[1]/SLICE_593/coreInst/fullALUInst/aluInst/RESULT_9[1]/GATE_H0 
         ;

  lut40431 \coreInst/fullALUInst/aluInst/RESULT_9[1]/SLICE_593_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[1]/SLICE_593/coreInst/fullALUInst/aluInst/RESULT_9[1]/SLICE_593_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40432 \coreInst/fullALUInst/aluInst/RESULT_9[1]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[1]/SLICE_593/coreInst/fullALUInst/aluInst/RESULT_9[1]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[1]/SLICE_593_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_9[1]/SLICE_593/coreInst/fullALUInst/aluInst/RESULT_9[1]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_9[1]/SLICE_593/coreInst/fullALUInst/aluInst/RESULT_9[1]/SLICE_593_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[1]/SLICE_593_FXMUX ( .D0(FXA), 
    .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_RESULT_9_5__SLICE_594 ( input D1, C1, A1, 
    D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_9[5]/SLICE_594/coreInst/fullALUInst/aluInst/RESULT_9[5]/SLICE_594_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_9[5]/SLICE_594/coreInst/fullALUInst/aluInst/RESULT_9[5]/GATE_H0 
         ;

  lut40464 \coreInst/fullALUInst/aluInst/RESULT_9[5]/SLICE_594_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[5]/SLICE_594/coreInst/fullALUInst/aluInst/RESULT_9[5]/SLICE_594_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40465 \coreInst/fullALUInst/aluInst/RESULT_9[5]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[5]/SLICE_594/coreInst/fullALUInst/aluInst/RESULT_9[5]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[5]/SLICE_594_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_9[5]/SLICE_594/coreInst/fullALUInst/aluInst/RESULT_9[5]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_9[5]/SLICE_594/coreInst/fullALUInst/aluInst/RESULT_9[5]/SLICE_594_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40464 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5FAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40465 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_9_7__SLICE_595 ( input D1, B1, A1, 
    D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_9[7]/SLICE_595/coreInst/fullALUInst/aluInst/RESULT_9[7]/SLICE_595_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_9[7]/SLICE_595/coreInst/fullALUInst/aluInst/RESULT_9[7]/GATE_H0 
         ;

  lut40466 \coreInst/fullALUInst/aluInst/RESULT_9[7]/SLICE_595_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[7]/SLICE_595/coreInst/fullALUInst/aluInst/RESULT_9[7]/SLICE_595_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40467 \coreInst/fullALUInst/aluInst/RESULT_9[7]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[7]/SLICE_595/coreInst/fullALUInst/aluInst/RESULT_9[7]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[7]/SLICE_595_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_9[7]/SLICE_595/coreInst/fullALUInst/aluInst/RESULT_9[7]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_9[7]/SLICE_595/coreInst/fullALUInst/aluInst/RESULT_9[7]/SLICE_595_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40466 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h77AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40467 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3B08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_9_2__SLICE_596 ( input D1, B1, A1, 
    D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_9[2]/SLICE_596/coreInst/fullALUInst/aluInst/RESULT_9[2]/SLICE_596_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_9[2]/SLICE_596/coreInst/fullALUInst/aluInst/RESULT_9[2]/GATE_H0 
         ;

  lut40468 \coreInst/fullALUInst/aluInst/RESULT_9[2]/SLICE_596_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[2]/SLICE_596/coreInst/fullALUInst/aluInst/RESULT_9[2]/SLICE_596_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40469 \coreInst/fullALUInst/aluInst/RESULT_9[2]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[2]/SLICE_596/coreInst/fullALUInst/aluInst/RESULT_9[2]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[2]/SLICE_596_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_9[2]/SLICE_596/coreInst/fullALUInst/aluInst/RESULT_9[2]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_9[2]/SLICE_596/coreInst/fullALUInst/aluInst/RESULT_9[2]/SLICE_596_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[2]/SLICE_596_FXMUX ( .D0(FXA), 
    .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40468 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h77CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40469 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0ACC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_9_6__SLICE_597 ( input D1, B1, A1, 
    D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_9[6]/SLICE_597/coreInst/fullALUInst/aluInst/RESULT_9[6]/SLICE_597_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_9[6]/SLICE_597/coreInst/fullALUInst/aluInst/RESULT_9[6]/GATE_H0 
         ;

  lut40470 \coreInst/fullALUInst/aluInst/RESULT_9[6]/SLICE_597_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[6]/SLICE_597/coreInst/fullALUInst/aluInst/RESULT_9[6]/SLICE_597_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40471 \coreInst/fullALUInst/aluInst/RESULT_9[6]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[6]/SLICE_597/coreInst/fullALUInst/aluInst/RESULT_9[6]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[6]/SLICE_597_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_9[6]/SLICE_597/coreInst/fullALUInst/aluInst/RESULT_9[6]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_9[6]/SLICE_597/coreInst/fullALUInst/aluInst/RESULT_9[6]/SLICE_597_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40470 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h77CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40471 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0CAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_9_4__SLICE_598 ( input D1, C1, A1, 
    D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_9[4]/SLICE_598/coreInst/fullALUInst/aluInst/RESULT_9[4]/SLICE_598_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_9[4]/SLICE_598/coreInst/fullALUInst/aluInst/RESULT_9[4]/GATE_H0 
         ;

  lut40472 \coreInst/fullALUInst/aluInst/RESULT_9[4]/SLICE_598_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[4]/SLICE_598/coreInst/fullALUInst/aluInst/RESULT_9[4]/SLICE_598_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40438 \coreInst/fullALUInst/aluInst/RESULT_9[4]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[4]/SLICE_598/coreInst/fullALUInst/aluInst/RESULT_9[4]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[4]/SLICE_598_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_9[4]/SLICE_598/coreInst/fullALUInst/aluInst/RESULT_9[4]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_9[4]/SLICE_598/coreInst/fullALUInst/aluInst/RESULT_9[4]/SLICE_598_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[4]/SLICE_598_FXMUX ( .D0(FXA), 
    .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40472 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5FF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_9_3__SLICE_599 ( input D1, C1, B1, 
    D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_9[3]/SLICE_599/coreInst/fullALUInst/aluInst/RESULT_9[3]/SLICE_599_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_9[3]/SLICE_599/coreInst/fullALUInst/aluInst/RESULT_9[3]/GATE_H0 
         ;

  lut40434 \coreInst/fullALUInst/aluInst/RESULT_9[3]/SLICE_599_K1 ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[3]/SLICE_599/coreInst/fullALUInst/aluInst/RESULT_9[3]/SLICE_599_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40467 \coreInst/fullALUInst/aluInst/RESULT_9[3]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[3]/SLICE_599/coreInst/fullALUInst/aluInst/RESULT_9[3]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[3]/SLICE_599_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_9[3]/SLICE_599/coreInst/fullALUInst/aluInst/RESULT_9[3]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_9[3]/SLICE_599/coreInst/fullALUInst/aluInst/RESULT_9[3]/SLICE_599_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_RESULT_9_0__SLICE_600 ( input D1, C1, B1, 
    D0, C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_9[0]/SLICE_600/coreInst/fullALUInst/aluInst/RESULT_9[0]/SLICE_600_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_9[0]/SLICE_600/coreInst/fullALUInst/aluInst/RESULT_9[0]/GATE_H0 
         ;

  lut40473 \coreInst/fullALUInst/aluInst/RESULT_9[0]/SLICE_600_K1 ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[0]/SLICE_600/coreInst/fullALUInst/aluInst/RESULT_9[0]/SLICE_600_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40474 \coreInst/fullALUInst/aluInst/RESULT_9[0]/GATE ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_9[0]/SLICE_600/coreInst/fullALUInst/aluInst/RESULT_9[0]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_9[0]/SLICE_600_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_9[0]/SLICE_600/coreInst/fullALUInst/aluInst/RESULT_9[0]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_9[0]/SLICE_600/coreInst/fullALUInst/aluInst/RESULT_9[0]/SLICE_600_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40473 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3FF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40474 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_4_13__SLICE_601 ( input D1, C1, B1, 
    A1, D0, B0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_4[13]/SLICE_601/coreInst/fullALUInst/aluInst/RESULT_4[13]/SLICE_601_K1_H1 
         , GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_4[13]/SLICE_601/coreInst/fullALUInst/aluInst/RESULT_4[13]/GATE_H0 
         ;

  lut40475 \coreInst/fullALUInst/aluInst/RESULT_4[13]/SLICE_601_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_4[13]/SLICE_601/coreInst/fullALUInst/aluInst/RESULT_4[13]/SLICE_601_K1_H1 )
    );
  lut40476 \coreInst/fullALUInst/aluInst/RESULT_4[13]/GATE ( .A(GNDI), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_4[13]/SLICE_601/coreInst/fullALUInst/aluInst/RESULT_4[13]/GATE_H0 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_4[13]/SLICE_601_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_4[13]/SLICE_601/coreInst/fullALUInst/aluInst/RESULT_4[13]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_4[13]/SLICE_601/coreInst/fullALUInst/aluInst/RESULT_4[13]/SLICE_601_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40475 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40476 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_1_13__SLICE_602 ( input D1, B1, A1, 
    D0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_1[13]/SLICE_602/coreInst/fullALUInst/aluInst/RESULT_1[13]/SLICE_602_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_1[13]/SLICE_602/coreInst/fullALUInst/aluInst/RESULT_1[13]/GATE_H0 
         ;

  lut40477 \coreInst/fullALUInst/aluInst/RESULT_1[13]/SLICE_602_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_1[13]/SLICE_602/coreInst/fullALUInst/aluInst/RESULT_1[13]/SLICE_602_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40412 \coreInst/fullALUInst/aluInst/RESULT_1[13]/GATE ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_1[13]/SLICE_602/coreInst/fullALUInst/aluInst/RESULT_1[13]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_1[13]/SLICE_602_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_1[13]/SLICE_602/coreInst/fullALUInst/aluInst/RESULT_1[13]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_1[13]/SLICE_602/coreInst/fullALUInst/aluInst/RESULT_1[13]/SLICE_602_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40477 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_2_13__SLICE_603 ( input D1, C1, A1, 
    B0, A0, M1, M0, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_2[13]/SLICE_603/coreInst/fullALUInst/aluInst/RESULT_2[13]/SLICE_603_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_2[13]/SLICE_603/coreInst/fullALUInst/aluInst/RESULT_2[13]/GATE_H0 
         ;

  lut40478 \coreInst/fullALUInst/aluInst/RESULT_2[13]/SLICE_603_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_2[13]/SLICE_603/coreInst/fullALUInst/aluInst/RESULT_2[13]/SLICE_603_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40479 \coreInst/fullALUInst/aluInst/RESULT_2[13]/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_2[13]/SLICE_603/coreInst/fullALUInst/aluInst/RESULT_2[13]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_2[13]/SLICE_603_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_2[13]/SLICE_603/coreInst/fullALUInst/aluInst/RESULT_2[13]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_2[13]/SLICE_603/coreInst/fullALUInst/aluInst/RESULT_2[13]/SLICE_603_K1_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_2[13]/SLICE_603_FXMUX ( 
    .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40478 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40479 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_un38_RESULT_72_SLICE_604 ( input D1, B1, 
    A1, D0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/un38_RESULT_72/SLICE_604/coreInst/fullALUInst/aluInst/un38_RESULT_72/SLICE_604_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_72/SLICE_604/coreInst/fullALUInst/aluInst/un38_RESULT_72/GATE_H0 
         ;

  lut40321 \coreInst/fullALUInst/aluInst/un38_RESULT_72/SLICE_604_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/un38_RESULT_72/SLICE_604/coreInst/fullALUInst/aluInst/un38_RESULT_72/SLICE_604_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40321 \coreInst/fullALUInst/aluInst/un38_RESULT_72/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/un38_RESULT_72/SLICE_604/coreInst/fullALUInst/aluInst/un38_RESULT_72/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/un38_RESULT_72/SLICE_604_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/un38_RESULT_72/SLICE_604/coreInst/fullALUInst/aluInst/un38_RESULT_72/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/un38_RESULT_72/SLICE_604/coreInst/fullALUInst/aluInst/un38_RESULT_72/SLICE_604_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_un38_RESULT_51_SLICE_605 ( input C1, B1, 
    A1, D0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/un38_RESULT_51/SLICE_605/coreInst/fullALUInst/aluInst/un38_RESULT_51/SLICE_605_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_51/SLICE_605/coreInst/fullALUInst/aluInst/un38_RESULT_51/GATE_H0 
         ;

  lut40480 \coreInst/fullALUInst/aluInst/un38_RESULT_51/SLICE_605_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/un38_RESULT_51/SLICE_605/coreInst/fullALUInst/aluInst/un38_RESULT_51/SLICE_605_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40325 \coreInst/fullALUInst/aluInst/un38_RESULT_51/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/un38_RESULT_51/SLICE_605/coreInst/fullALUInst/aluInst/un38_RESULT_51/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/un38_RESULT_51/SLICE_605_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/un38_RESULT_51/SLICE_605/coreInst/fullALUInst/aluInst/un38_RESULT_51/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/un38_RESULT_51/SLICE_605/coreInst/fullALUInst/aluInst/un38_RESULT_51/SLICE_605_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40480 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_11_42_SLICE_606 ( input C1, B1, A1, 
    D0, C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_11_42/SLICE_606/coreInst/fullALUInst/aluInst/RESULT_11_42/SLICE_606_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_11_42/SLICE_606/coreInst/fullALUInst/aluInst/RESULT_11_42/GATE_H0 
         ;

  lut40480 \coreInst/fullALUInst/aluInst/RESULT_11_42/SLICE_606_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11_42/SLICE_606/coreInst/fullALUInst/aluInst/RESULT_11_42/SLICE_606_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40474 \coreInst/fullALUInst/aluInst/RESULT_11_42/GATE ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11_42/SLICE_606/coreInst/fullALUInst/aluInst/RESULT_11_42/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_11_42/SLICE_606_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_11_42/SLICE_606/coreInst/fullALUInst/aluInst/RESULT_11_42/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_11_42/SLICE_606/coreInst/fullALUInst/aluInst/RESULT_11_42/SLICE_606_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_RESULT_10_44_SLICE_607 ( input D1, C1, A1, 
    C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_10_44/SLICE_607/coreInst/fullALUInst/aluInst/RESULT_10_44/SLICE_607_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_10_44/SLICE_607/coreInst/fullALUInst/aluInst/RESULT_10_44/GATE_H0 
         ;

  lut40481 \coreInst/fullALUInst/aluInst/RESULT_10_44/SLICE_607_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_44/SLICE_607/coreInst/fullALUInst/aluInst/RESULT_10_44/SLICE_607_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40482 \coreInst/fullALUInst/aluInst/RESULT_10_44/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_44/SLICE_607/coreInst/fullALUInst/aluInst/RESULT_10_44/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_10_44/SLICE_607_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_10_44/SLICE_607/coreInst/fullALUInst/aluInst/RESULT_10_44/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10_44/SLICE_607/coreInst/fullALUInst/aluInst/RESULT_10_44/SLICE_607_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40481 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40482 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_10_41_SLICE_608 ( input D1, C1, B1, 
    D0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_10_41/SLICE_608/coreInst/fullALUInst/aluInst/RESULT_10_41/SLICE_608_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_10_41/SLICE_608/coreInst/fullALUInst/aluInst/RESULT_10_41/GATE_H0 
         ;

  lut40483 \coreInst/fullALUInst/aluInst/RESULT_10_41/SLICE_608_K1 ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_41/SLICE_608/coreInst/fullALUInst/aluInst/RESULT_10_41/SLICE_608_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40374 \coreInst/fullALUInst/aluInst/RESULT_10_41/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_41/SLICE_608/coreInst/fullALUInst/aluInst/RESULT_10_41/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_10_41/SLICE_608_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_10_41/SLICE_608/coreInst/fullALUInst/aluInst/RESULT_10_41/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10_41/SLICE_608/coreInst/fullALUInst/aluInst/RESULT_10_41/SLICE_608_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40483 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_un38_RESULT_45_SLICE_609 ( input C1, B1, 
    A1, D0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/un38_RESULT_45/SLICE_609/coreInst/fullALUInst/aluInst/un38_RESULT_45/SLICE_609_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/un38_RESULT_45/SLICE_609/coreInst/fullALUInst/aluInst/un38_RESULT_45/GATE_H0 
         ;

  lut40480 \coreInst/fullALUInst/aluInst/un38_RESULT_45/SLICE_609_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/un38_RESULT_45/SLICE_609/coreInst/fullALUInst/aluInst/un38_RESULT_45/SLICE_609_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40484 \coreInst/fullALUInst/aluInst/un38_RESULT_45/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/un38_RESULT_45/SLICE_609/coreInst/fullALUInst/aluInst/un38_RESULT_45/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/un38_RESULT_45/SLICE_609_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/un38_RESULT_45/SLICE_609/coreInst/fullALUInst/aluInst/un38_RESULT_45/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/un38_RESULT_45/SLICE_609/coreInst/fullALUInst/aluInst/un38_RESULT_45/SLICE_609_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40484 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_10_37_SLICE_610 ( input D1, B1, A1, 
    D0, C0, B0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_10_37/SLICE_610/coreInst/fullALUInst/aluInst/RESULT_10_37/SLICE_610_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_10_37/SLICE_610/coreInst/fullALUInst/aluInst/RESULT_10_37/GATE_H0 
         ;

  lut40315 \coreInst/fullALUInst/aluInst/RESULT_10_37/SLICE_610_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_37/SLICE_610/coreInst/fullALUInst/aluInst/RESULT_10_37/SLICE_610_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40483 \coreInst/fullALUInst/aluInst/RESULT_10_37/GATE ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_37/SLICE_610/coreInst/fullALUInst/aluInst/RESULT_10_37/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_10_37/SLICE_610_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_10_37/SLICE_610/coreInst/fullALUInst/aluInst/RESULT_10_37/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10_37/SLICE_610/coreInst/fullALUInst/aluInst/RESULT_10_37/SLICE_610_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_un53_RESULT_49_SLICE_611 ( input D1, C1, 
    A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/un53_RESULT_49/SLICE_611/coreInst/fullALUInst/aluInst/un53_RESULT_49/SLICE_611_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/un53_RESULT_49/SLICE_611/coreInst/fullALUInst/aluInst/un53_RESULT_49/GATE_H0 
         ;

  lut40330 \coreInst/fullALUInst/aluInst/un53_RESULT_49/SLICE_611_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_49/SLICE_611/coreInst/fullALUInst/aluInst/un53_RESULT_49/SLICE_611_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40485 \coreInst/fullALUInst/aluInst/un53_RESULT_49/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_49/SLICE_611/coreInst/fullALUInst/aluInst/un53_RESULT_49/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/un53_RESULT_49/SLICE_611_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/un53_RESULT_49/SLICE_611/coreInst/fullALUInst/aluInst/un53_RESULT_49/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/un53_RESULT_49/SLICE_611/coreInst/fullALUInst/aluInst/un53_RESULT_49/SLICE_611_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40485 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_un53_RESULT_43_SLICE_612 ( input C1, B1, 
    A1, D0, C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/un53_RESULT_43/SLICE_612/coreInst/fullALUInst/aluInst/un53_RESULT_43/SLICE_612_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/un53_RESULT_43/SLICE_612/coreInst/fullALUInst/aluInst/un53_RESULT_43/GATE_H0 
         ;

  lut40348 \coreInst/fullALUInst/aluInst/un53_RESULT_43/SLICE_612_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_43/SLICE_612/coreInst/fullALUInst/aluInst/un53_RESULT_43/SLICE_612_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40358 \coreInst/fullALUInst/aluInst/un53_RESULT_43/GATE ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_43/SLICE_612/coreInst/fullALUInst/aluInst/un53_RESULT_43/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/un53_RESULT_43/SLICE_612_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/un53_RESULT_43/SLICE_612/coreInst/fullALUInst/aluInst/un53_RESULT_43/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/un53_RESULT_43/SLICE_612/coreInst/fullALUInst/aluInst/un53_RESULT_43/SLICE_612_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_RESULT_10_21_SLICE_613 ( input D1, B1, A1, 
    D0, C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_10_21/SLICE_613/coreInst/fullALUInst/aluInst/RESULT_10_21/SLICE_613_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_10_21/SLICE_613/coreInst/fullALUInst/aluInst/RESULT_10_21/GATE_H0 
         ;

  lut40407 \coreInst/fullALUInst/aluInst/RESULT_10_21/SLICE_613_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_21/SLICE_613/coreInst/fullALUInst/aluInst/RESULT_10_21/SLICE_613_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40317 \coreInst/fullALUInst/aluInst/RESULT_10_21/GATE ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_21/SLICE_613/coreInst/fullALUInst/aluInst/RESULT_10_21/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_10_21/SLICE_613_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_10_21/SLICE_613/coreInst/fullALUInst/aluInst/RESULT_10_21/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10_21/SLICE_613/coreInst/fullALUInst/aluInst/RESULT_10_21/SLICE_613_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_RESULT_10_19_SLICE_614 ( input D1, C1, A1, 
    C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_10_19/SLICE_614/coreInst/fullALUInst/aluInst/RESULT_10_19/SLICE_614_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_10_19/SLICE_614/coreInst/fullALUInst/aluInst/RESULT_10_19/GATE_H0 
         ;

  lut40474 \coreInst/fullALUInst/aluInst/RESULT_10_19/SLICE_614_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_19/SLICE_614/coreInst/fullALUInst/aluInst/RESULT_10_19/SLICE_614_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40316 \coreInst/fullALUInst/aluInst/RESULT_10_19/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_19/SLICE_614/coreInst/fullALUInst/aluInst/RESULT_10_19/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_10_19/SLICE_614_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_10_19/SLICE_614/coreInst/fullALUInst/aluInst/RESULT_10_19/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10_19/SLICE_614/coreInst/fullALUInst/aluInst/RESULT_10_19/SLICE_614_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_RESULT_10_30_SLICE_615 ( input C1, B1, A1, 
    C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_10_30/SLICE_615/coreInst/fullALUInst/aluInst/RESULT_10_30/SLICE_615_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_10_30/SLICE_615/coreInst/fullALUInst/aluInst/RESULT_10_30/GATE_H0 
         ;

  lut40486 \coreInst/fullALUInst/aluInst/RESULT_10_30/SLICE_615_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_30/SLICE_615/coreInst/fullALUInst/aluInst/RESULT_10_30/SLICE_615_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40399 \coreInst/fullALUInst/aluInst/RESULT_10_30/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_30/SLICE_615/coreInst/fullALUInst/aluInst/RESULT_10_30/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_10_30/SLICE_615_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_10_30/SLICE_615/coreInst/fullALUInst/aluInst/RESULT_10_30/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10_30/SLICE_615/coreInst/fullALUInst/aluInst/RESULT_10_30/SLICE_615_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40486 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE2E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_10_18_SLICE_616 ( input D1, C1, B1, 
    D0, C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/RESULT_10_18/SLICE_616/coreInst/fullALUInst/aluInst/RESULT_10_18/SLICE_616_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_10_18/SLICE_616/coreInst/fullALUInst/aluInst/RESULT_10_18/GATE_H0 
         ;

  lut40401 \coreInst/fullALUInst/aluInst/RESULT_10_18/SLICE_616_K1 ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_18/SLICE_616/coreInst/fullALUInst/aluInst/RESULT_10_18/SLICE_616_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40487 \coreInst/fullALUInst/aluInst/RESULT_10_18/GATE ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_10_18/SLICE_616/coreInst/fullALUInst/aluInst/RESULT_10_18/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_10_18/SLICE_616_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_10_18/SLICE_616/coreInst/fullALUInst/aluInst/RESULT_10_18/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_10_18/SLICE_616/coreInst/fullALUInst/aluInst/RESULT_10_18/SLICE_616_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40487 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_un53_RESULT_25_SLICE_617 ( input D1, B1, 
    A1, D0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/un53_RESULT_25/SLICE_617/coreInst/fullALUInst/aluInst/un53_RESULT_25/SLICE_617_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/un53_RESULT_25/SLICE_617/coreInst/fullALUInst/aluInst/un53_RESULT_25/GATE_H0 
         ;

  lut40488 \coreInst/fullALUInst/aluInst/un53_RESULT_25/SLICE_617_K1 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_25/SLICE_617/coreInst/fullALUInst/aluInst/un53_RESULT_25/SLICE_617_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40488 \coreInst/fullALUInst/aluInst/un53_RESULT_25/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_25/SLICE_617/coreInst/fullALUInst/aluInst/un53_RESULT_25/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/un53_RESULT_25/SLICE_617_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/un53_RESULT_25/SLICE_617/coreInst/fullALUInst/aluInst/un53_RESULT_25/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/un53_RESULT_25/SLICE_617/coreInst/fullALUInst/aluInst/un53_RESULT_25/SLICE_617_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40488 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAACC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_un53_RESULT_23_SLICE_618 ( input D1, C1, 
    A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/un53_RESULT_23/SLICE_618/coreInst/fullALUInst/aluInst/un53_RESULT_23/SLICE_618_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/un53_RESULT_23/SLICE_618/coreInst/fullALUInst/aluInst/un53_RESULT_23/GATE_H0 
         ;

  lut40368 \coreInst/fullALUInst/aluInst/un53_RESULT_23/SLICE_618_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_23/SLICE_618/coreInst/fullALUInst/aluInst/un53_RESULT_23/SLICE_618_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40489 \coreInst/fullALUInst/aluInst/un53_RESULT_23/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_23/SLICE_618/coreInst/fullALUInst/aluInst/un53_RESULT_23/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/un53_RESULT_23/SLICE_618_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/un53_RESULT_23/SLICE_618/coreInst/fullALUInst/aluInst/un53_RESULT_23/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/un53_RESULT_23/SLICE_618/coreInst/fullALUInst/aluInst/un53_RESULT_23/SLICE_618_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40489 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_un53_RESULT_33_SLICE_619 ( input D1, C1, 
    A1, D0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/un53_RESULT_33/SLICE_619/coreInst/fullALUInst/aluInst/un53_RESULT_33/SLICE_619_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/un53_RESULT_33/SLICE_619/coreInst/fullALUInst/aluInst/un53_RESULT_33/GATE_H0 
         ;

  lut40324 \coreInst/fullALUInst/aluInst/un53_RESULT_33/SLICE_619_K1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_33/SLICE_619/coreInst/fullALUInst/aluInst/un53_RESULT_33/SLICE_619_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40488 \coreInst/fullALUInst/aluInst/un53_RESULT_33/GATE ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_33/SLICE_619/coreInst/fullALUInst/aluInst/un53_RESULT_33/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/un53_RESULT_33/SLICE_619_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/un53_RESULT_33/SLICE_619/coreInst/fullALUInst/aluInst/un53_RESULT_33/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/un53_RESULT_33/SLICE_619/coreInst/fullALUInst/aluInst/un53_RESULT_33/SLICE_619_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_un53_RESULT_29_SLICE_620 ( input C1, B1, 
    A1, D0, C0, B0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/un53_RESULT_29/SLICE_620/coreInst/fullALUInst/aluInst/un53_RESULT_29/SLICE_620_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/un53_RESULT_29/SLICE_620/coreInst/fullALUInst/aluInst/un53_RESULT_29/GATE_H0 
         ;

  lut40402 \coreInst/fullALUInst/aluInst/un53_RESULT_29/SLICE_620_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_29/SLICE_620/coreInst/fullALUInst/aluInst/un53_RESULT_29/SLICE_620_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40490 \coreInst/fullALUInst/aluInst/un53_RESULT_29/GATE ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_29/SLICE_620/coreInst/fullALUInst/aluInst/un53_RESULT_29/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/un53_RESULT_29/SLICE_620_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/un53_RESULT_29/SLICE_620/coreInst/fullALUInst/aluInst/un53_RESULT_29/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/un53_RESULT_29/SLICE_620/coreInst/fullALUInst/aluInst/un53_RESULT_29/SLICE_620_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40490 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_un53_RESULT_27_SLICE_621 ( input C1, B1, 
    A1, D0, C0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/un53_RESULT_27/SLICE_621/coreInst/fullALUInst/aluInst/un53_RESULT_27/SLICE_621_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/un53_RESULT_27/SLICE_621/coreInst/fullALUInst/aluInst/un53_RESULT_27/GATE_H0 
         ;

  lut40489 \coreInst/fullALUInst/aluInst/un53_RESULT_27/SLICE_621_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_27/SLICE_621/coreInst/fullALUInst/aluInst/un53_RESULT_27/SLICE_621_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40491 \coreInst/fullALUInst/aluInst/un53_RESULT_27/GATE ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_27/SLICE_621/coreInst/fullALUInst/aluInst/un53_RESULT_27/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/un53_RESULT_27/SLICE_621_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/un53_RESULT_27/SLICE_621/coreInst/fullALUInst/aluInst/un53_RESULT_27/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/un53_RESULT_27/SLICE_621/coreInst/fullALUInst/aluInst/un53_RESULT_27/SLICE_621_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40491 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA50) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_un53_RESULT_31_SLICE_622 ( input D1, C1, 
    B1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \coreInst/fullALUInst/aluInst/un53_RESULT_31/SLICE_622/coreInst/fullALUInst/aluInst/un53_RESULT_31/SLICE_622_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/un53_RESULT_31/SLICE_622/coreInst/fullALUInst/aluInst/un53_RESULT_31/GATE_H0 
         ;

  lut40319 \coreInst/fullALUInst/aluInst/un53_RESULT_31/SLICE_622_K1 ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_31/SLICE_622/coreInst/fullALUInst/aluInst/un53_RESULT_31/SLICE_622_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40492 \coreInst/fullALUInst/aluInst/un53_RESULT_31/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), 
    .Z(\coreInst/fullALUInst/aluInst/un53_RESULT_31/SLICE_622/coreInst/fullALUInst/aluInst/un53_RESULT_31/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/un53_RESULT_31/SLICE_622_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/un53_RESULT_31/SLICE_622/coreInst/fullALUInst/aluInst/un53_RESULT_31/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/un53_RESULT_31/SLICE_622/coreInst/fullALUInst/aluInst/un53_RESULT_31/SLICE_622_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40492 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_RESULT_11_5__SLICE_623 ( input D1, C1, B1, 
    A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   
         \coreInst/fullALUInst/aluInst/RESULT_11[5]/SLICE_623/coreInst/fullALUInst/aluInst/RESULT_11[5]/SLICE_623_K1_H1 
         , 
         \coreInst/fullALUInst/aluInst/RESULT_11[5]/SLICE_623/coreInst/fullALUInst/aluInst/RESULT_11[5]/GATE_H0 
         ;

  lut40493 \coreInst/fullALUInst/aluInst/RESULT_11[5]/SLICE_623_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[5]/SLICE_623/coreInst/fullALUInst/aluInst/RESULT_11[5]/SLICE_623_K1_H1 )
    );
  lut40494 \coreInst/fullALUInst/aluInst/RESULT_11[5]/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\coreInst/fullALUInst/aluInst/RESULT_11[5]/SLICE_623/coreInst/fullALUInst/aluInst/RESULT_11[5]/GATE_H0 )
    );
  selmux2 \coreInst/fullALUInst/aluInst/RESULT_11[5]/SLICE_623_K0K1MUX ( 
    .D0(\coreInst/fullALUInst/aluInst/RESULT_11[5]/SLICE_623/coreInst/fullALUInst/aluInst/RESULT_11[5]/GATE_H0 )
    , 
    .D1(\coreInst/fullALUInst/aluInst/RESULT_11[5]/SLICE_623/coreInst/fullALUInst/aluInst/RESULT_11[5]/SLICE_623_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40493 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40494 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB380) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerSequencerInst_SLICE_624 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40495 \coreInst/registerSequencerInst/REGA_WEN_3_i_2 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40496 \coreInst/registerSequencerInst/REGA_WEN_3_i_3 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40495 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCDCF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40496 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_625 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40497 \coreInst/registerFileInst/DINA_3_i_o2[7] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40498 \coreInst/opxMultiplexerInst/REGA_DINX[0] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40497 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40498 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4440) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_SLICE_626 ( input D1, C1, B1, A1, D0, C0, B0, output 
    F0, F1 );
  wire   GNDI;

  lut40499 \mcuResourcesInst/memoryMapperInst/CPU_DIN_4_RNO[1] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40500 \mcuResourcesInst/interruptMaskRegisterInst/DOUT_1_1[1] ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40499 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1B5F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40500 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_627 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, output F0, F1 );

  lut40501 \mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_8_1_0_.m11_0_a2_0 
    ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40502 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_0_sqmuxa_0 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40501 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40502 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCCE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_SLICE_628 ( input D1, C1, B1, A1, D0, 
    C0, B0, output F0, F1 );
  wire   GNDI;

  lut40503 \mcuResourcesInst/memoryMapperInst/un1_RESET ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40504 \mcuResourcesInst/memoryMapperInst/BE1_f0 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40503 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40504 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h030F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_SLICE_629 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, output F0, F1 );

  lut40505 \mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_4_RNIV20E4 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40506 \mcuResourcesInst/memoryMapperInst/GPIO_MAP_2_1_RNIQG6Q1 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40505 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8FCF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40506 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerSequencerInst_SLICE_630 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40507 \coreInst/registerSequencerInst/REGB_EN_3_i_o2_1 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40508 \coreInst/registerSequencerInst/REGB_EN_3_i_o2_1_RNO ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40507 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40508 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC383) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_631 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40509 \coreInst/opxMultiplexerInst/ALUB_SRCX_0_2[1] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40510 \coreInst/opxMultiplexerInst/ALUB_SRCX_0[1] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/instructionLatchInst/INSTRUCTION[2] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0010 \coreInst/instructionLatchInst/INSTRUCTION[1] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40509 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2AAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40510 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_632 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40511 \coreInst/fullALUInst/muxB/ALUB_DATA_6_RNO[1] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40512 \coreInst/opxMultiplexerInst/ARGBX_i_o2[1] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40511 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF022) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40512 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_633 ( input D1, C1, B1, A1, D0, C0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40513 \coreInst/programCounterInst/ARGA_i_0_2[0] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40514 \coreInst/programCounterInst/ARGA_i_0_2_1[0] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40513 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40514 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h05AF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_634 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40515 \coreInst/programCounterInst/ARGA_i_0_3_N_5L8 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40516 \coreInst/programCounterInst/ARGA_i_0_3[0] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40515 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A4E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40516 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF575) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_sequencer_SLICE_635 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, output F0, F1 );

  lut40517 \coreInst/busControllerInst/sequencer/WRN0_BUF_3_0_o2_0 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40518 \coreInst/busControllerInst/sequencer/WRN0_BUF_3_0_a2 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40517 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC884) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40518 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA2A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_sequencer_SLICE_636 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, output F0, F1 );

  lut40519 \coreInst/busControllerInst/sequencer/ADDR_BUSX_R_3_0_iv_i_1[1] ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40520 \coreInst/busControllerInst/sequencer/ADDR_BUSX_R_3_0_iv_i_2[1] ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40519 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40520 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_637 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40521 \coreInst/busControllerInst/ADDR_BUF_i_3_mb_mb_sn[14] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40522 \coreInst/busControllerInst/ADDR_BUF_i_3_mb_mb_sn_RNI01PC3[14] ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40521 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40522 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAB01) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_638 ( input D1, C1, B1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40523 \coreInst/busControllerInst/ADDR_BUF_i_o2_1[0] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40524 \coreInst/busControllerInst/ADDR_BUF_i_o2_1_RNIDI4N[0] ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40523 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h10F9) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40524 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00F3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_639 ( input D1, C1, B1, A1, D0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40525 \coreInst/busControllerInst/ADDR_BUF_i_1[1] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40526 \coreInst/busControllerInst/ADDR_BUF_i_o2[10] ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40525 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40526 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_640 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40527 \coreInst/busControllerInst/ADDR_BUF_i_3_mb[10] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40528 \coreInst/busControllerInst/ADDR_BUF_i_3_sn[10] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40527 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3F2E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40528 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_641 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40529 \coreInst/busControllerInst/ADDR_BUF_i_3_mb[9] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40530 \coreInst/busControllerInst/ADDR_BUF_i_3_sn[9] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40529 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5F4E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40530 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_642 ( input C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40531 \coreInst/registerFileInst/ADDRB_0_a2_0[1] ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40532 \coreInst/registerFileInst/ADDRB_0_1[1] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40531 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40532 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_643 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40533 \coreInst/fullALUInst/muxA/ALUA_DATA_1_RNIUPO11[0] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40129 \coreInst/registerFileInst/ADDRB_0_a2_2[2] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40533 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4F00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_muxB_SLICE_644 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40534 \coreInst/fullALUInst/muxB/ALUB_DATA_0[8] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40535 \coreInst/fullALUInst/muxB/ALUB_DATA_0_RNIBJ2J1[8] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40534 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0FAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40535 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_muxB_SLICE_645 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40536 \coreInst/fullALUInst/muxB/ALUB_DATA_0_0[10] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40537 \coreInst/fullALUInst/muxB/ALUB_DATA_0_0_RNI3D5L1[10] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40536 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0FAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40537 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_muxB_SLICE_646 ( input D1, C1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40538 \coreInst/fullALUInst/muxB/ALUB_DATA_1[12] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40539 \coreInst/fullALUInst/muxB/ALUB_DATA_3[12] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40538 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40539 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h22F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_muxB_SLICE_647 ( input D1, C1, B1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40540 \coreInst/fullALUInst/muxB/ALUB_DATA_1[13] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40541 \coreInst/fullALUInst/muxB/ALUB_DATA_3[13] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40540 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40541 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h44F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_muxB_SLICE_648 ( input C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40296 \coreInst/fullALUInst/muxB/ALUB_DATA_1[14] ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40542 \coreInst/fullALUInst/muxB/ALUB_DATA_3[14] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40542 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3B08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_muxB_SLICE_649 ( input D1, C1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40543 \coreInst/fullALUInst/muxB/ALUB_DATA_1[11] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40541 \coreInst/fullALUInst/muxB/ALUB_DATA_3[11] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40543 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_muxB_SLICE_650 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40544 \coreInst/fullALUInst/muxB/ALUB_DATA[9] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40545 \coreInst/fullALUInst/muxB/ALUB_DATA_0[9] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40544 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h80A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40545 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0FCA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_651 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40546 \coreInst/fullALUInst/aluInst/un3_tmp_10_0_0_0 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40547 \coreInst/fullALUInst/muxB/ALUB_DATA_6[1] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40546 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4070) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40547 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB1A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_652 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40548 \coreInst/fullALUInst/aluInst/un3_tmp_13_0_0 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40549 \coreInst/fullALUInst/muxB/ALUB_DATA_6[3] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40548 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40549 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDC10) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_muxB_SLICE_653 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40550 \coreInst/fullALUInst/muxB/ALUB_DATA_3_N_4L6 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40551 \coreInst/fullALUInst/muxB/ALUB_DATA_3[1] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40550 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4575) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40551 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8DCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_654 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40552 \coreInst/fullALUInst/aluInst/un3_tmp_6_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40144 \coreInst/fullALUInst/aluInst/RESULT_6_0_RNO[6] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40552 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_655 ( input D1, C1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40553 \coreInst/fullALUInst/aluInst/RESULT_10[0] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40554 \coreInst/fullALUInst/aluInst/RESULT_10_RNO[0] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40553 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40554 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_656 ( input D1, C1, B1, A1, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40555 \coreInst/fullALUInst/aluInst/RESULT_5[15] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40556 \coreInst/fullALUInst/aluInst/RESULT_5_RNO[15] ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40555 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h74B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40556 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_657 ( input D1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40557 \coreInst/fullALUInst/aluInst/RESULT_12_1_RNO[5] ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40558 \coreInst/fullALUInst/aluInst/RESULT_12_1[5] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40557 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88BB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40558 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8D0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_658 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40559 \coreInst/fullALUInst/aluInst/RESULT_6_0[5] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40560 \coreInst/fullALUInst/aluInst/RESULT_12_1_RNO_0[5] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40559 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40560 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h770F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_659 ( input C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40561 \coreInst/fullALUInst/aluInst/RESULT_11_45 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40562 \coreInst/fullALUInst/aluInst/RESULT_8_0_am_RNO[12] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40561 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40562 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hABA8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_660 ( input D1, C1, B1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40563 \coreInst/fullALUInst/aluInst/RESULT_11_47 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40564 \coreInst/fullALUInst/aluInst/RESULT_8_0_am_RNO[14] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40563 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40564 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE10) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_661 ( input D1, C1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40565 \coreInst/fullALUInst/aluInst/RESULT_11_44 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40566 \coreInst/fullALUInst/aluInst/RESULT_8_0_am_RNO[11] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40565 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40566 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_662 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40567 \coreInst/fullALUInst/aluInst/un3_tmp_5_0_1 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40568 \coreInst/fullALUInst/aluInst/tmp_3_3[10] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40567 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40568 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_663 ( input C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40569 \coreInst/fullALUInst/aluInst/un53_RESULT_44 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40570 \coreInst/fullALUInst/aluInst/un53_RESULT_61 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40569 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40570 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h22F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_664 ( input C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40571 \coreInst/fullALUInst/aluInst/RESULT_10_29 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40572 \coreInst/fullALUInst/aluInst/RESULT_10_46 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40571 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40572 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4E44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_665 ( input D1, C1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40573 \coreInst/fullALUInst/aluInst/un38_RESULT_25 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40574 \coreInst/fullALUInst/aluInst/un38_RESULT_43 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40573 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA50) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40574 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h50CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_666 ( input D1, C1, B1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40575 \coreInst/fullALUInst/aluInst/un53_RESULT_24 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40576 \coreInst/fullALUInst/aluInst/un53_RESULT_41 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40575 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40576 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0ACC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_667 ( input D1, C1, B1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40236 \coreInst/fullALUInst/aluInst/un38_RESULT_4 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40577 \coreInst/fullALUInst/aluInst/un38_RESULT_22 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40577 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h30B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_668 ( input D1, C1, B1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40578 \coreInst/fullALUInst/aluInst/un53_RESULT_4 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40579 \coreInst/fullALUInst/aluInst/un53_RESULT_21 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40578 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40579 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h30AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_669 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40580 \coreInst/fullALUInst/aluInst/PARITY_2_1 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40581 \coreInst/fullALUInst/aluInst/PARITY_2_6 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/opReg/DOUT[3] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/opReg/DOUT[2] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40580 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEDC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40581 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDF8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_670 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, LSR, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40582 \coreInst/fullALUInst/aluInst/PARITY_2_3 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40583 \coreInst/fullALUInst/aluInst/PARITY_2_9 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/requestGen/dhReqReg/Q_R[0] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40582 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEBA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40583 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEF4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_671 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40584 \coreInst/fullALUInst/aluInst/PARITY_2_4_RNO ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40585 \coreInst/fullALUInst/aluInst/PARITY_2_4 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/opReg/DOUT[1] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/opReg/DOUT[0] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40584 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE2E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40585 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBF8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_672 ( input D1, C1, B1, D0, C0, B0, A0, M1, M0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut40586 \coreInst/fullALUInst/aluInst/PARITY_2_7_RNO ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40582 \coreInst/fullALUInst/aluInst/PARITY_2_7 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/requestGen/dhReqReg/Q_PHI0[0] ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0018 \coreInst/debugger/requestGen/dhReqReg/Q[0] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40586 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_673 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40587 \coreInst/fullALUInst/aluInst/un38_RESULT_101_0 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40588 \coreInst/fullALUInst/aluInst/un38_RESULT_101_0_1 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40587 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0091) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40588 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2637) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_674 ( input D1, C1, B1, A1, D0, C0, 
    B0, output F0, F1 );
  wire   GNDI;

  lut40589 \coreInst/fullALUInst/aluInst/RESULT_3[8] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40590 \coreInst/fullALUInst/aluInst/RESULT_3_sx[8] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40589 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0B0E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40590 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3F00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_675 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40591 \coreInst/busControllerInst/ADDR_BUF_i[1] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40592 \mcuResourcesInst/interruptMaskRegisterInst/MASK_REG_0_sqmuxa ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40591 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40592 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_SLICE_676 ( input D1, C1, A1, D0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40538 \mcuResourcesInst/memoryMapperInst/CPU_DIN_2_d[2] ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40593 \mcuResourcesInst/interruptMaskRegisterInst/DOUT_1_1[2] ( .A(A0), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40593 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBB88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_677 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40594 \coreInst/busControllerInst/ADDR_BUF_i[2] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40595 \mcuResourcesInst/interruptMaskRegisterInst/DOUT_m2_0_a2_1 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40594 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40595 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_678 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, output F0, F1 );

  lut40596 \mcuResourcesInst/UARTInst/uartTxInst/un1_r_TX_Data_0_sqmuxa_1 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40597 \mcuResourcesInst/UARTInst/uartTxInst/un1_r_TX_Data_0_sqmuxa_1_RNO 
    ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40596 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40597 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_679 ( input D1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40598 \coreInst/debugger/RESET ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40599 \mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_RNI3I2L[0] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40598 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF55) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40599 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_680 ( input D1, A1, D0, C0, 
    B0, A0, output F0, F1 );
  wire   GNDI;

  lut40600 \mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_ns_0_a2_1_3[0] ( 
    .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40601 \mcuResourcesInst/UARTInst/uartTxInst/r_SM_Main_ns_0_a2_1_1[0] ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40600 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40601 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_681 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40602 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte_1_sqmuxa_0_a2 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40603 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte_RNO[3] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte[0] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40602 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40603 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_682 ( input C1, A1, D0, C0, 
    B0, A0, output F0, F1 );
  wire   GNDI;

  lut40304 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_SM_Main_5_0_a2_0 ( 
    .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40604 
    \mcuResourcesInst/UARTInst/uartRXInst/un1_r_Clock_Count_cry_0_0_RNO ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40604 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00EF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_683 ( input D1, C1, D0, C0, 
    B0, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40281 \mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_8_1_0_.m11_0_a2_1 
    ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40605 \mcuResourcesInst/UARTInst/uartRXInst/r_SM_Main_8_1_0_.m7_0_a2 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte[5] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40605 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_SLICE_684 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40606 \mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40607 \mcuResourcesInst/UARTInst/DOUT_20 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40606 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40607 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_SLICE_685 ( input C1, A1, D0, C0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40608 \mcuResourcesInst/memoryMapperInst/WRITE ( .A(A1), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40609 \mcuResourcesInst/UARTInst/START_TX_1_sqmuxa_1_i ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40608 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5F5F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40609 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_SLICE_686 ( input D1, C1, B1, D0, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40610 \mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_RNIFEBT ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40611 \mcuResourcesInst/UARTInst/TXI_R_1_sqmuxa_i ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40610 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40611 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_SLICE_687 ( input B1, A1, D0, C0, B0, A0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40612 \mcuResourcesInst/UARTInst/START_TX_1_sqmuxa_0_a2_0 ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40613 \mcuResourcesInst/UARTInst/TX_COMPLETE_R_1_sqmuxa_i ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/TX_CLK_DIV[10] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/TX_CLK_DIV[0] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40612 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40613 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_SLICE_688 ( input D1, C1, B1, D0, C0, B0, output F0, 
    F1 );
  wire   GNDI;

  lut40614 \mcuResourcesInst/RAMInst/mux_7_RNI57DI ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40615 \mcuResourcesInst/UARTInst/DOUT_RNIL8MT[8] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40614 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40615 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F33) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_689 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40616 \coreInst/busControllerInst/ADDR_BUF_i_3_mb_mb[13] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40617 \mcuResourcesInst/memoryMapperInst/CPU_DIN_sn_m3_N_3L3 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40616 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDFDC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40617 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_690 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40618 \coreInst/programCounterInst/ARGA_i_0_3_N_4L6 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40174 \mcuResourcesInst/memoryMapperInst/GPIO_m3_0_a2_x_0 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40618 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00EF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_691 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40619 \coreInst/busControllerInst/ADDR_BUF_i_3[7] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40620 \mcuResourcesInst/memoryMapperInst/CPU_DIN_bm_RNO_0[4] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40619 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDCFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40620 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_SLICE_692 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, output F0, F1 );

  lut40621 \mcuResourcesInst/memoryMapperInst/INT_MAP_4_i_o2_RNINTMH2 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40622 \mcuResourcesInst/memoryMapperInst/INT_MAP_4_i_o2_RNIUO0L3 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40621 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40622 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_SLICE_693 ( input D1, C1, B1, A1, D0, 
    C0, B0, output F0, F1 );
  wire   GNDI;

  lut40623 \mcuResourcesInst/memoryMapperInst/un5_RAM_MAPlto15_RNIJ8NN3 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40624 \mcuResourcesInst/memoryMapperInst/CPU_DIN_d[0] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40623 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0045) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40624 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCFC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_SLICE_694 ( input D1, C1, B1, A1, D0, 
    C0, A0, output F0, F1 );
  wire   GNDI;

  lut40625 \mcuResourcesInst/memoryMapperInst/INT_MAP ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40626 \mcuResourcesInst/memoryMapperInst/CPU_DIN_s[2] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40625 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40626 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_695 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40627 \coreInst/registerFileInst/DINA_3_i_a2[1] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40628 \mcuResourcesInst/memoryMapperInst/CPU_DIN_4[1] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40627 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40628 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0ACC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_SLICE_696 ( input C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );
  wire   GNDI;

  lut40629 \mcuResourcesInst/memoryMapperInst/INT_MAP_11 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40630 \mcuResourcesInst/memoryMapperInst/RD_INT_0_sqmuxa ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40629 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40630 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_697 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40631 \coreInst/busControllerInst/ADDR_BUF_i_3_mb_mb_mb_mb_mb[14] ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40632 \mcuResourcesInst/memoryMapperInst/CPU_DIN_RNO_2[7] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40631 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h32FE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40632 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_SLICE_698 ( input D1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );
  wire   GNDI;

  lut40633 \mcuResourcesInst/memoryMapperInst/RAM_MAP ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40603 \mcuResourcesInst/memoryMapperInst/WR_RAM ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40633 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2288) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_SLICE_699 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, output F0, F1 );

  lut40634 \mcuResourcesInst/memoryMapperInst/INT_MAP_11_1 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40635 \mcuResourcesInst/memoryMapperInst/CPU_DIN_bm_RNO[3] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40634 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40635 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_SLICE_700 ( input C1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40240 \mcuResourcesInst/memoryMapperInst/un5_ROM_MAPlto15_1 ( .A(A1), 
    .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40636 \mcuResourcesInst/memoryMapperInst/CPU_DIN_0[4] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40636 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_701 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40637 \coreInst/busControllerInst/ADDR_BUF_i_3[12] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40638 \mcuResourcesInst/memoryMapperInst/CPU_DIN_RNO_3[7] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40637 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDFCE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40638 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_702 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40639 \coreInst/programCounterInst/ARGA_m2 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40640 \mcuResourcesInst/memoryMapperInst/CPU_DIN_0[2] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40639 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3535) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40640 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_703 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40641 \coreInst/programCounterInst/ARGA_0_iv_i_a1_2[1] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40642 \mcuResourcesInst/memoryMapperInst/un5_ROM_MAPlto15 ( .A(A0), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40641 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0053) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40642 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_704 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40643 \coreInst/programCounterInst/ARGA_m5_0_a2 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40644 \mcuResourcesInst/memoryMapperInst/un5_RAM_MAPlto15 ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40643 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40644 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_705 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40645 \coreInst/busControllerInst/ADDR_BUF_i[3] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40646 \mcuResourcesInst/memoryMapperInst/INT_MAP_1 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40645 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40646 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_706 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40594 \coreInst/busControllerInst/ADDR_BUF_i[5] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40647 \mcuResourcesInst/memoryMapperInst/GPIO_MAP_2_1_RNI2P011 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40647 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_707 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40645 \coreInst/busControllerInst/ADDR_BUF_i[4] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40630 \mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_4 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_708 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40648 \coreInst/busControllerInst/ADDR_BUF_i_3[8] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40634 \mcuResourcesInst/memoryMapperInst/GPIO_MAP_8 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40648 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFAE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_709 ( input D1, C1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40649 \coreInst/busControllerInst/ADDR_BUF_i[6] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40097 \mcuResourcesInst/memoryMapperInst/INT_MAP_2_i ( .A(GNDI), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40649 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_710 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40650 \coreInst/programCounterInst/ARGA_m6_RNO_1 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40651 \mcuResourcesInst/memoryMapperInst/INT_MAP_4_i_o2 ( .A(GNDI), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40650 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40651 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_711 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40652 \coreInst/programCounterInst/ARGA_m1_e ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40653 \mcuResourcesInst/memoryMapperInst/GPIO_MAP_2_1 ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40652 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40653 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_712 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40654 \coreInst/fullALUInst/aluInst/RESULT_3[15] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40655 \mcuResourcesInst/memoryMapperInst/CPU_DIN_bm_RNO_0[3] ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40654 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8BB8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40655 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3F0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_713 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40656 \coreInst/busControllerInst/ADDR_BUF_i_3[11] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40657 \mcuResourcesInst/memoryMapperInst/INT_MAP_sx ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40656 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40657 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_714 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40658 \coreInst/fullALUInst/aluInst/RESULT_13_RNI7R413[13] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40656 \mcuResourcesInst/memoryMapperInst/INT_MAP_11_1_sx ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40658 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3A00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_715 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40659 \coreInst/busControllerInst/ADDR_BUF_i_a2_8_RNILBQO1[10] ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40648 \mcuResourcesInst/memoryMapperInst/GPIO_MAP_8_0_sx ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40659 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerSequencerInst_SLICE_716 ( input D1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40660 \coreInst/registerSequencerInst/REGA_WEN_3_i_a2_1_0 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40661 \coreInst/registerSequencerInst/REGA_WEN_3_i_a2_1 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40660 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0044) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40661 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerSequencerInst_SLICE_717 ( input D1, C1, B1, A1, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40662 \coreInst/registerSequencerInst/REGA_WEN_3_i_o2_0_RNO ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40663 \coreInst/registerSequencerInst/REGA_WEN_3_i_o2_0 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40662 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0322) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40663 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4E4E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_718 ( input D1, C1, B1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40664 \coreInst/fullALUInst/ccRegs/CC_RUN_REG_RNIT0MR4[3] ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40665 \coreInst/registerSequencerInst/REGA_WEN_3_i_a2_0 ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40664 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0FCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40665 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_719 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40666 \coreInst/opxMultiplexerInst/ALUB_SRCX_i_o2_0[2] ( .A(A1), .B(GNDI), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40667 \coreInst/registerSequencerInst/REGB_EN_3_i_a2_1 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40666 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5F5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40667 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_720 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40668 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[8] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40669 \coreInst/registerSequencerInst/REGB_EN_3_i_o2 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40668 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h05CD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40669 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_721 ( input D1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40670 \coreInst/fullALUInst/muxA/ALUA_DATA_1[5] ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40671 \coreInst/opxMultiplexerInst/ALUA_SRCX_i[2] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/instructionLatchInst/GROUPX_fast[1] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0010 \coreInst/instructionLatchInst/GROUPX_fast[0] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40670 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDD11) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40671 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF13) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_722 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40672 \coreInst/fullALUInst/muxB/ALUB_DATA_5_xx_mm[2] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40673 \coreInst/opxMultiplexerInst/ALUB_m10_i ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40672 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0E02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40673 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAAE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_723 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40674 \coreInst/fullALUInst/muxA/ALUA_DATA[5] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40675 \coreInst/opxMultiplexerInst/ALUA_SRCX_i[0] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/instructionLatchInst/GROUPX_0_rep1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0010 \coreInst/instructionLatchInst/GROUPX[1] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40674 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5D08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40675 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFCD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_724 ( input D1, C1, A1, D0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40676 \coreInst/fullALUInst/muxA/ALUA_DATA_1[0] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40677 \coreInst/opxMultiplexerInst/ALUA_SRCX_i_1[0] ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/instructionLatchInst/INSTRUCTION[11] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0010 \coreInst/instructionLatchInst/INSTRUCTION[0] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40676 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40677 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_725 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40678 \coreInst/busControllerInst/ADDR_BUF_i_RNO[15] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40679 \coreInst/opxMultiplexerInst/ALU_OPX_i[2] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40678 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40679 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_726 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40680 \coreInst/fullALUInst/aluInst/un21_RESULT.N_255_i ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40681 \coreInst/opxMultiplexerInst/ALUB_SRCX_i_o2_0_RNI1DTU[2] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40680 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0FFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40681 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_727 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40682 \coreInst/fullALUInst/aluInst/CARRY_RNO ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40683 \coreInst/opxMultiplexerInst/ALU_OPX_0_a2[3] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40682 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0982) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40683 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_728 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40684 \coreInst/fullALUInst/aluInst/arithmetic_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40685 \coreInst/opxMultiplexerInst/ALU_OPX_0_a2[1] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40684 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h41A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40685 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_729 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40686 \coreInst/fullALUInst/muxB/ALUB_DATA_5_xx_mm_sx[2] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40687 \coreInst/opxMultiplexerInst/ALUB_SRCX_a3_1[1] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0011 \coreInst/instructionPhaseDecoderInst/RESET_R ( .D0(GNDI), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/instructionPhaseDecoderInst/PHASE_R[9] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40686 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40687 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_730 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40309 \coreInst/instructionLatchInst/GROUPX_fast_RNIRC9L[1] ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40688 \coreInst/opxMultiplexerInst/ALUB_m10_i_1 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40688 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_731 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40689 \coreInst/registerFileInst/DINA_3_i_0[0] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40690 \coreInst/opxMultiplexerInst/REGA_ADDRX_2_sqmuxa_i_i_o2 ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40689 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h111F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40690 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_732 ( input D1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40691 \coreInst/fullALUInst/ccRegs/CC_INT0_REG_RNIM1R71[3] ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40692 \coreInst/opxMultiplexerInst/CC_REGX_0_i_a2_0[1] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40691 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5533) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40692 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_733 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40693 \coreInst/fullALUInst/aluInst/RESULT_13_bm_1[15] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40694 \coreInst/opxMultiplexerInst/ALU_OPX_iv_0[0] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40693 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h407F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40694 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_734 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40695 \coreInst/fullALUInst/ccRegs/CC_RUN_REG8 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40696 \coreInst/opxMultiplexerInst/CCL_LD_i_a2 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40695 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40696 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_735 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40697 \coreInst/fullALUInst/muxB/ALUB_DATA_3[2] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40698 \coreInst/opxMultiplexerInst/ARGBX_i_m2[2] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40697 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40698 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_736 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40699 \coreInst/fullALUInst/muxB/ALUB_DATA_3[3] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40700 \coreInst/opxMultiplexerInst/ARGBX_i_m2[3] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40699 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40700 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_737 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40701 \coreInst/fullALUInst/muxB/ALUB_DATA_3_N_3L4 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40702 \coreInst/opxMultiplexerInst/ALUB_SRCX_ss0_i_0_i_0_o2 ( .A(GNDI), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40701 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40702 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF33) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_738 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40703 \coreInst/registerFileInst/DINA_3_0_a2_4[15] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40704 \coreInst/opxMultiplexerInst/REGA_DINX_m1_0_a2_1[0] ( .A(GNDI), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40703 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF15) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40704 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_739 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40705 \coreInst/fullALUInst/aluInst/RESULT_9_am_RNO[0] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40600 \coreInst/opxMultiplexerInst/ARGBX_0_a2[0] ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40705 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_740 ( input D1, C1, B1, A1, D0, A0, M0, CE, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, M0_dly, CLK_dly, CE_dly;

  lut40706 \coreInst/opxMultiplexerInst/ALUB_SRCX_0_x_sx[1] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40600 \coreInst/opxMultiplexerInst/ALUB_SRCX_0_3_1[1] ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/instructionLatchInst/INSTRUCTION[9] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40706 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_741 ( input D1, C1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40707 \coreInst/opxMultiplexerInst/ALUB_SRCX_0_x_0[1] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40708 \coreInst/opxMultiplexerInst/ALUB_SRCX_0_3[1] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/instructionLatchInst/INSTRUCTION[8] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0010 \coreInst/instructionLatchInst/INSTRUCTION[7] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40707 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF050) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40708 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD7FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_742 ( input D1, C1, B1, A1, C0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40709 \coreInst/busControllerInst/sequencer/ADDR_BUSX_R_3_0_iv_i_1[0] ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40710 \coreInst/jumpGroupDecoderInst/ADDR_BUSX_1_i_o2[0] ( .A(A0), 
    .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/instructionLatchInst/GROUPX[0] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0010 \coreInst/instructionLatchInst/DEBUG_OPX_fast[3] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40709 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBF5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40710 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFAF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_743 ( input D1, C1, B1, A1, C0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40711 \coreInst/fullALUInst/ccRegs/CC_INT0_REG_0_sqmuxa ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40100 \coreInst/interruptStateMachineInst/STATE_ns_i_0_0_a2[2] ( .A(A0), 
    .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/instructionLatchInst/DEBUG_OPX_fast[2] ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0010 \coreInst/instructionLatchInst/DEBUG_OPX_fast[1] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40711 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_744 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40712 \coreInst/programCounterInst/ARGA_0_iv_i_0_2[1] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40713 \coreInst/programCounterInst/ARGA_0_iv_i_0_2_RNO[1] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40712 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40713 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_745 ( input D1, C1, A1, D0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40714 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_a2[3] ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40715 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_a2_RNO[3] ( .A(A0), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40714 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40715 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE33) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_746 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40716 \coreInst/programCounterInst/PC_A_NEXT_6_0_0_N_3L3 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40717 \coreInst/programCounterInst/PC_A_NEXT_6_0_0_a2_2[15] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[13] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[12] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40716 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h153F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40717 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_747 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40718 \coreInst/programCounterInst/ARGA_m6_RNO ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40719 \coreInst/programCounterInst/ARGA_m6 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40718 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAEA2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40719 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5F1B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_748 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40720 \coreInst/programCounterInst/ARGA_0_iv_i_a0_0[1] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40599 \coreInst/programCounterInst/ARGA_0_iv_i_a0[1] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40720 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h444C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_749 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40721 \coreInst/fullALUInst/muxB/ALUB_DATA_6[11] ( .A(GNDI), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40722 \coreInst/programCounterInst/ARGB_3_0[11] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40721 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40722 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_750 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40721 \coreInst/fullALUInst/muxB/ALUB_DATA_6[12] ( .A(GNDI), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40723 \coreInst/programCounterInst/ARGB_3_0[12] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40723 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_751 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40304 \coreInst/fullALUInst/muxB/ALUB_DATA_6[13] ( .A(A1), .B(GNDI), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40724 \coreInst/programCounterInst/ARGB_3_0[13] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40724 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_752 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40219 \coreInst/fullALUInst/muxB/ALUB_DATA_6[14] ( .A(GNDI), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40723 \coreInst/programCounterInst/ARGB_3_0[14] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_753 ( input D1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40303 \coreInst/fullALUInst/muxB/ALUB_DATA_6[15] ( .A(GNDI), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40725 \coreInst/programCounterInst/ARGB_3_0[15] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40725 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_754 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40726 \coreInst/programCounterInst/ARGB_3_0_a2_1[8] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40722 \coreInst/programCounterInst/ARGB_3_0[3] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40726 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0023) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_755 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40694 \coreInst/programCounterInst/ARGB_3_0_o2[8] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40727 \coreInst/programCounterInst/ARGB_3_0[9] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40727 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_756 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40721 \coreInst/fullALUInst/muxB/ALUB_DATA_6[4] ( .A(GNDI), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40724 \coreInst/programCounterInst/ARGB_3_0[4] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_757 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40728 \coreInst/fullALUInst/muxB/ALUB_DATA_6[5] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40724 \coreInst/programCounterInst/ARGB_3_0[5] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40728 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_758 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40729 \coreInst/fullALUInst/muxB/ALUB_DATA_6[6] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40723 \coreInst/programCounterInst/ARGB_3_0[6] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40729 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_759 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40730 \coreInst/fullALUInst/muxB/ALUB_DATA_6[7] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40731 \coreInst/programCounterInst/ARGB_3_0[7] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40730 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40731 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_760 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40732 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_a2_3[3] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40733 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[0] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[3] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[2] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40732 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40733 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_761 ( input B1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40130 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_a2_2[3] ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40734 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_a2[2] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40734 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_762 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40538 \coreInst/fullALUInst/aluInst/RESULT[0] ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40735 \coreInst/busControllerInst/sequencer/WRN0_BUF_3_0_o2_1 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40735 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_763 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40736 \coreInst/fullALUInst/muxB/ALUB_DATA_3[4] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40590 \coreInst/busControllerInst/ADDR_BUF_i_a2_9_RNID3UR1[10] ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40736 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_764 ( input D1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40737 \coreInst/busControllerInst/ADDR_BUF_i_3_mb_mb_1[13] ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40738 \coreInst/busControllerInst/ADDR_BUF_i_2_RNIA60K3[13] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40737 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40738 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h008B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_765 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40575 \coreInst/fullALUInst/aluInst/RESULT[14] ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40739 \coreInst/busControllerInst/DOUT_BUF_i[14] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40739 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCCF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_766 ( input D1, C1, B1, A1, D0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40740 \coreInst/busControllerInst/DOUT_BUF_i_0[13] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40741 \coreInst/busControllerInst/DOUT_BUF_i[13] ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40740 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h44F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40741 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_767 ( input D1, C1, B1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40575 \coreInst/fullALUInst/aluInst/RESULT[12] ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40742 \coreInst/busControllerInst/DOUT_BUF_i[12] ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40742 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAABB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_768 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40743 \coreInst/busControllerInst/DOUT_BUF_0_o2[7] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40740 \coreInst/busControllerInst/DOUT_BUF_i_0[9] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40743 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDFDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_769 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40624 \coreInst/fullALUInst/aluInst/RESULT[6] ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40744 \coreInst/busControllerInst/ADDR_BUF_i_a2_0_RNIARBD1[6] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40744 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1011) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_770 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40745 \coreInst/fullALUInst/aluInst/RESULT_13_RNI3M313[12] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40746 \coreInst/busControllerInst/ADDR_BUF_i_2_RNI76VU4[12] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40745 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40746 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2023) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_771 ( input D1, C1, B1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40747 \coreInst/busControllerInst/ADDR_BUF_i_a2_8[10] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40748 \coreInst/busControllerInst/ADDR_BUF_i_1_RNIMC803[4] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40747 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40748 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1011) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_772 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40749 \coreInst/fullALUInst/aluInst/RESULT_3[7] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40246 \coreInst/busControllerInst/ADDR_BUF_i_2_RNIVE7DD[7] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40749 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_773 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40750 \coreInst/busControllerInst/ADDR_BUF_i_2[8] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40751 \coreInst/busControllerInst/ADDR_BUF_i_2_RNIQEV76[8] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40750 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFBA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40751 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4051) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_774 ( input D1, C1, B1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40752 \coreInst/busControllerInst/ADDR_BUF_i_o2_3[0] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40753 \coreInst/busControllerInst/ADDR_BUF_i_o2[0] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40752 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0434) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40753 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_775 ( input D1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40754 \coreInst/fullALUInst/aluInst/RESULT[3] ( .A(A1), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40755 \coreInst/busControllerInst/ADDR_BUF_i_a2_0_RNI1IBD1[3] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40754 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40755 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0051) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_776 ( input D1, C1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40756 \coreInst/busControllerInst/ADDR_BUF_i_1[2] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40757 \coreInst/busControllerInst/ADDR_BUF_i_a2_0_RNIUEBD1[2] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40756 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40757 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_777 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40758 \coreInst/busControllerInst/ADDR_BUF_i_a2_0[1] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40759 \coreInst/busControllerInst/ADDR_BUF_i_a2_0_RNIRBBD1[1] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40758 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40759 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0045) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_778 ( input D1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40760 \coreInst/fullALUInst/aluInst/RESULT_13_RNIDME52[15] ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40761 \coreInst/busControllerInst/ADDR_BUF_i_2_RNIQHDJ2[15] ( .A(A0), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40760 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7744) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40761 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_779 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40762 \coreInst/fullALUInst/aluInst/RESULT_sn_m8 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40763 \coreInst/busControllerInst/ADDR_BUF_i_a2_8_RNIH4E34[10] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40762 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0702) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40763 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h20A8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_780 ( input D1, C1, B1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40764 \coreInst/busControllerInst/ADDR_BUF_i_a2_9[10] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40765 \coreInst/busControllerInst/ADDR_BUF_i_2[13] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40764 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40765 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFDC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_781 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40766 \coreInst/busControllerInst/ADDR_BUF_i_2_0[11] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40767 \coreInst/busControllerInst/ADDR_BUF_i_2[11] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40766 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h02A2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40767 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFAE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_782 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40768 \coreInst/busControllerInst/ADDR_BUF_i_2_0[12] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40594 \coreInst/busControllerInst/ADDR_BUF_i_2[12] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40768 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h028A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_783 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40769 \coreInst/busControllerInst/ADDR_BUF_i_2_0[14] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40591 \coreInst/busControllerInst/ADDR_BUF_i_2[14] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40769 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h440C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_784 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40770 \coreInst/busControllerInst/ADDR_BUF_i_2_0[15] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40771 \coreInst/busControllerInst/ADDR_BUF_i_2[15] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40770 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2070) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40771 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_785 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40772 \coreInst/busControllerInst/ADDR_BUF_i_2_0[9] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40773 \coreInst/busControllerInst/ADDR_BUF_i_2[9] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40772 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40773 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_786 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40774 \coreInst/busControllerInst/ADDR_BUF_i_2_0[10] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40775 \coreInst/busControllerInst/ADDR_BUF_i_2[10] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40774 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h028A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40775 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_787 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40776 \coreInst/fullALUInst/muxB/ALUB_DATA_5_xx_mm[3] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40777 \coreInst/busControllerInst/ADDR_BUF_i_a2_0[3] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40776 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00AC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40777 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h028A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_788 ( input D1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40778 \coreInst/fullALUInst/muxB/ALUB_DATA_0[10] ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40779 \coreInst/busControllerInst/ADDR_BUF_i_a2_0[9] ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40778 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40779 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7700) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_789 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40780 \coreInst/busControllerInst/ADDR_BUF_i_2_0[7] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40781 \coreInst/busControllerInst/ADDR_BUF_i_2[7] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40780 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h202A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40781 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFCE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_790 ( input D1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40782 \coreInst/fullALUInst/muxB/ALUB_DATA_3[7] ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40783 \coreInst/busControllerInst/ADDR_BUF_i_a2_0[7] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40782 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAACC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40783 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3F00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_791 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40784 \coreInst/fullALUInst/muxB/ALUB_DATA_3[5] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40785 \coreInst/busControllerInst/ADDR_BUF_i_a2_0[5] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40784 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40785 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0CCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_792 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40786 \coreInst/fullALUInst/muxB/ALUB_DATA_3[6] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40787 \coreInst/busControllerInst/ADDR_BUF_i_a2_0[6] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40786 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40787 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3F00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_793 ( input D1, C1, B1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40788 \coreInst/busControllerInst/ADDR_BUF_i_0[4] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40789 \coreInst/busControllerInst/ADDR_BUF_i_1[4] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40788 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h04C4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40789 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0FC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_794 ( input D1, C1, B1, A1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40790 \coreInst/busControllerInst/ADDR_BUF_i_0[3] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40791 \coreInst/busControllerInst/ADDR_BUF_i_1[3] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40790 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40791 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_795 ( input D1, C1, B1, A1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40780 \coreInst/busControllerInst/ADDR_BUF_i_0[5] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40792 \coreInst/busControllerInst/ADDR_BUF_i_1[5] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40792 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0FA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_796 ( input D1, C1, B1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40780 \coreInst/busControllerInst/ADDR_BUF_i_0[6] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40793 \coreInst/busControllerInst/ADDR_BUF_i_1[6] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40793 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_797 ( input D1, B1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40794 \coreInst/busControllerInst/ADDR_BUF_i_a2_11[10] ( .A(GNDI), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40795 \coreInst/busControllerInst/ADDR_BUF_i_2_0[13] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40794 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0033) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40795 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h10B0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_798 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40796 \coreInst/fullALUInst/aluInst/RESULT_12_0_s[14] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40797 \coreInst/busControllerInst/ADDR_BUF_i_a2_8_RNICGKN1[10] ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40796 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40797 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_799 ( input D1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40798 \coreInst/fullALUInst/aluInst/RESULT109_1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40799 \coreInst/busControllerInst/ADDR_BUF_i_a2_8_RNIBQMO[10] ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40798 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40799 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_regs_SLICE_800 ( input D1, C1, B1, A1, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40800 \coreInst/registerFileInst/regs/registers_0_0_1_RNO_1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40801 \coreInst/registerFileInst/regs/registers_0_0_1_RNO_9 ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40800 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0203) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40801 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_regs_SLICE_801 ( input D1, C1, B1, A1, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40802 \coreInst/registerFileInst/regs/registers_0_0_1_RNO ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40803 \coreInst/registerFileInst/regs/registers_0_0_1_RNO_8 ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40802 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1011) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40803 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_802 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40804 \coreInst/registerFileInst/DINA_3_i_0[1] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40805 \coreInst/registerFileInst/regs/registers_0_0_1_RNO_0 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40804 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h111F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40805 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0301) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_803 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40806 \coreInst/registerFileInst/DINA_3_i_0[3] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40805 \coreInst/registerFileInst/regs/registers_0_0_1_RNO_2 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40806 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h111F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_804 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40807 \coreInst/registerFileInst/DINA_3_i_0[4] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40808 \coreInst/registerFileInst/regs/registers_0_0_1_RNO_3 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40807 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0537) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40808 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_805 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40809 \coreInst/registerFileInst/DINA_3_i_0[5] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40810 \coreInst/registerFileInst/regs/registers_0_0_1_RNO_4 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40809 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0357) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40810 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0405) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_806 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40811 \coreInst/registerFileInst/DINA_3_i_0[6] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40812 \coreInst/registerFileInst/regs/registers_0_0_1_RNO_5 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40811 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0537) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40812 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0023) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_807 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40813 \coreInst/instructionLatchInst/GROUPX_0_rep1_RNITPBA ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40814 \coreInst/registerFileInst/regs/registers_0_0_1_RNISQGB1 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40813 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA50) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40814 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBA8A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_regs_SLICE_808 ( input D1, C1, B1, A1, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40815 \coreInst/registerFileInst/regs/registers_0_0_1_RNO_6 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40816 \coreInst/registerFileInst/regs/registers_0_0_1_RNO_7 ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40815 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5155) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40816 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_809 ( input D1, C1, B1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40817 \coreInst/registerFileInst/ADDRB_i_o2[0] ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40818 \coreInst/registerFileInst/ADDRB_i_o2_RNI9IH01[0] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40817 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF3F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40818 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF40) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_810 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut40819 \coreInst/registerFileInst/ADDRB_i_o2_RNI3EEU[0] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40820 \coreInst/registerFileInst/ADDRB_i_o2_RNIAULK1[0] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40819 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F01) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40820 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEF23) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_811 ( input D1, C1, B1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40821 \coreInst/registerFileInst/DINA_3_0_0[15] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40822 \coreInst/registerFileInst/DINA_3_0[15] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40821 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7530) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40822 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_812 ( input D1, C1, B1, A1, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40823 \coreInst/registerFileInst/DINA_3_0_0[14] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40824 \coreInst/registerFileInst/DINA_3_0[14] ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40823 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h50DC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40824 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_813 ( input D1, C1, B1, A1, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40825 \coreInst/registerFileInst/DINA_3_0_0[10] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40826 \coreInst/registerFileInst/DINA_3_0[10] ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40825 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3B0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40826 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF8F8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_814 ( input D1, C1, B1, A1, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40827 \coreInst/registerFileInst/DINA_3_0_0[9] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40828 \coreInst/registerFileInst/DINA_3_0[9] ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40827 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0CAE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40828 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_815 ( input D1, C1, B1, A1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40829 \coreInst/registerFileInst/DINA_3_0_0[8] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40830 \coreInst/registerFileInst/DINA_3_0[8] ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40829 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h22F2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40830 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_816 ( input D1, C1, B1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40831 \coreInst/registerFileInst/DINA_3_0_0[13] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40832 \coreInst/registerFileInst/DINA_3_0[13] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40831 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h30BA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40832 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_817 ( input D1, C1, B1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40833 \coreInst/registerFileInst/DINA_3_0_0[12] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40832 \coreInst/registerFileInst/DINA_3_0[12] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40833 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0ACE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_818 ( input D1, C1, B1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40834 \coreInst/registerFileInst/DINA_3_0_0[11] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40835 \coreInst/registerFileInst/DINA_3_0[11] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40834 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2F22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40835 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_819 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40836 \coreInst/fullALUInst/aluInst/RESULT[7] ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40837 \coreInst/registerFileInst/DINA_3_i_0[7] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40836 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40837 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0357) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_ccRegs_SLICE_820 ( input D1, C1, A1, D0, C0, B0, 
    M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40838 \coreInst/fullALUInst/ccRegs/CC_INT0_REG_RNIITQ71[1] ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40839 \coreInst/fullALUInst/ccRegs/CC_RUN_REG_RNINQLR4[1] ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/fullALUInst/ccRegs/CC_INT0_REG[3] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/fullALUInst/ccRegs/CC_INT0_REG[2] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40838 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F55) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40839 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h30FC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_ccRegs_SLICE_821 ( input D1, C1, A1, D0, C0, B0, 
    M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40840 \coreInst/fullALUInst/ccRegs/CC_INT0_REG_RNIGRQ71[0] ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40841 \coreInst/fullALUInst/ccRegs/CC_RUN_REG_RNIKNLR4[0] ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/fullALUInst/ccRegs/CC_INT0_REG[1] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/fullALUInst/ccRegs/CC_INT0_REG[0] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40840 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h550F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40841 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h33F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_ccRegs_SLICE_822 ( input C1, B1, A1, D0, C0, B0, 
    M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40842 \coreInst/fullALUInst/ccRegs/CC_INT0_REG_RNIKVQ71[2] ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40664 \coreInst/fullALUInst/ccRegs/CC_RUN_REG_RNIQTLR4[2] ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/fullALUInst/ccRegs/CC_INT1_REG[1] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/fullALUInst/ccRegs/CC_INT1_REG[0] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40842 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4747) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_823 ( input D1, C1, B1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40843 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_7_cry_2_0_RNO ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40844 \coreInst/fullALUInst/muxB/ALUB_DATA_3[15] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40843 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40844 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h30B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_824 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40845 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_1_0_RNO_0 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40846 \coreInst/fullALUInst/muxB/ALUB_DATA_5_xx_mm[1] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40845 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAC00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40846 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_825 ( input C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40847 \coreInst/fullALUInst/aluInst/un21_RESULT.N_226_i ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40848 \coreInst/fullALUInst/muxB/ALUB_m8 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40847 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6565) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40848 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_826 ( input D1, C1, B1, D0, C0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40235 \coreInst/fullALUInst/aluInst/un53_RESULT_9 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40849 \coreInst/fullALUInst/muxB/ALUB_DATA[0] ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40849 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF05A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_827 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40850 \coreInst/fullALUInst/aluInst/RESULT_10_73_RNO ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40851 \coreInst/fullALUInst/muxB/ALUB_DATA_6_sn[2] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40850 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40851 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_828 ( input D1, C1, B1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40852 \coreInst/fullALUInst/aluInst/un3_tmp_2_0_1 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40586 \coreInst/fullALUInst/muxB/ALUB_DATA_6_mb[2] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40852 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_829 ( input C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40853 \coreInst/fullALUInst/aluInst/un53_RESULT_17 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40854 \coreInst/fullALUInst/muxA/ALUA_DATA[15] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40853 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE2E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40854 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4501) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_830 ( input D1, C1, B1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40855 \coreInst/fullALUInst/aluInst/RESULT_10_14 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40856 \coreInst/fullALUInst/muxA/ALUA_DATA[14] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40855 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40856 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_831 ( input D1, C1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40784 \coreInst/fullALUInst/aluInst/un53_RESULT_15 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40857 \coreInst/fullALUInst/muxA/ALUA_DATA[13] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40857 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4405) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_832 ( input D1, C1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40553 \coreInst/fullALUInst/aluInst/RESULT_10_13 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40858 \coreInst/fullALUInst/muxA/ALUA_DATA[12] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40858 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00B1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_833 ( input D1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40859 \coreInst/fullALUInst/aluInst/un53_RESULT_13 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40860 \coreInst/fullALUInst/muxA/ALUA_DATA[11] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40859 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40860 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h008B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_834 ( input D1, C1, A1, D0, C0, B0, A0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40861 \coreInst/fullALUInst/aluInst/RESULT_10_11 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40862 \coreInst/fullALUInst/muxA/ALUA_DATA[10] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/fullALUInst/ccRegs/CC_INT1_REG[3] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \coreInst/fullALUInst/ccRegs/CC_INT1_REG[2] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40861 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40862 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h008D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_835 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40863 \coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI8T841[9] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40857 \coreInst/fullALUInst/muxA/ALUA_DATA[9] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40863 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2A7F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_836 ( input D1, C1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40864 \coreInst/fullALUInst/aluInst/un53_RESULT_11 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40860 \coreInst/fullALUInst/muxA/ALUA_DATA[8] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40864 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_837 ( input C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40305 \coreInst/fullALUInst/aluInst/RESULT_10_7 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40865 \coreInst/fullALUInst/muxA/ALUA_DATA[7] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40865 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5011) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_SLICE_838 ( input D1, C1, A1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40553 \coreInst/fullALUInst/aluInst/RESULT_10_6 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40862 \coreInst/fullALUInst/muxA/ALUA_DATA[6] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_839 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut40866 \coreInst/fullALUInst/aluInst/RESULT_10_49 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40867 \coreInst/fullALUInst/aluInst/RESULT_10_17 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/modeReg/Q_PHI0[0] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/modeReg/Q_1_rep1 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40866 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40867 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3090) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_840 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40868 \coreInst/fullALUInst/aluInst/un38_RESULT_92_0 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40869 \coreInst/fullALUInst/aluInst/un7_sex_166_1 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40868 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40869 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0347) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_841 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40870 \coreInst/fullALUInst/aluInst/RESULT_10_33 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40871 \coreInst/fullALUInst/aluInst/RESULT_10_75_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40870 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5410) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40871 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h10D0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_842 ( input D1, C1, B1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40764 \coreInst/fullALUInst/aluInst/RESULT_10_84 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40872 \coreInst/fullALUInst/aluInst/RESULT_10_51 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40872 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_843 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40873 \coreInst/fullALUInst/aluInst/OVER_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40874 \coreInst/fullALUInst/aluInst/RESULT_10_33_RNI5OLO8 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40873 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40874 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_844 ( input D1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40875 \coreInst/fullALUInst/aluInst/un38_RESULT_56 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40876 \coreInst/fullALUInst/aluInst/un38_RESULT_56_RNI4KOH8 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40875 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0044) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40876 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h040C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_845 ( input C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40571 \coreInst/fullALUInst/aluInst/RESULT_10_35 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40877 \coreInst/fullALUInst/aluInst/RESULT_10_35_RNI6K6J8 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40877 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_846 ( input D1, C1, B1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40563 \coreInst/fullALUInst/aluInst/RESULT_10[7] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40878 \coreInst/fullALUInst/aluInst/RESULT_10_35_RNI7NDJ8 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40878 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAB8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_847 ( input D1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40879 \coreInst/fullALUInst/aluInst/RESULT_10_52 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40880 \coreInst/fullALUInst/aluInst/RESULT_12_0_bm_RNO[3] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40879 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40880 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h44F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_848 ( input D1, C1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40307 \coreInst/fullALUInst/aluInst/RESULT[9] ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40881 \coreInst/fullALUInst/aluInst/ZERO_8 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40881 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_849 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40882 \coreInst/fullALUInst/aluInst/ZERO_2 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40883 \coreInst/fullALUInst/aluInst/ZERO_5 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40882 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40883 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_850 ( input D1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40884 \coreInst/fullALUInst/aluInst/RESULT[11] ( .A(A1), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40885 \coreInst/fullALUInst/aluInst/ZERO_12 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40884 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDD88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40885 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_851 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40886 \coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNICLN91[14] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40887 \coreInst/fullALUInst/aluInst/RESULT_13_RNIB0613[14] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40886 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h27AF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40887 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_852 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40888 \coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI39K91[11] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40889 \coreInst/fullALUInst/aluInst/RESULT_13_RNIVG213[11] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40888 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h770F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40889 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h50C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_853 ( input D1, C1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40890 \coreInst/fullALUInst/aluInst/RESULT_11_RNI936H[10] ( .A(A1), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40891 \coreInst/fullALUInst/aluInst/RESULT_13_RNI4AK82[10] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40890 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A5F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40891 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h44C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_854 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40892 \coreInst/fullALUInst/aluInst/RESULT109_2 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40893 \coreInst/fullALUInst/aluInst/RESULT_12_1[6] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40892 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40893 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8D0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_855 ( input D1, C1, B1, A1, D0, C0, 
    B0, output F0, F1 );
  wire   GNDI;

  lut40894 \coreInst/fullALUInst/aluInst/RESULT_3[14] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40895 \coreInst/fullALUInst/aluInst/RESULT_12_0[14] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40894 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40895 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_856 ( input C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40896 \coreInst/fullALUInst/aluInst/RESULT_11_RNI7TP49[7] ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40897 \coreInst/fullALUInst/aluInst/RESULT_13_RNIO6M8B[7] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40896 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2727) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40897 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h22A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_857 ( input D1, C1, B1, A1, D0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40898 \coreInst/fullALUInst/aluInst/RESULT_3[12] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40899 \coreInst/fullALUInst/aluInst/RESULT_12_0[12] ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40898 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD850) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40899 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDD88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_858 ( input D1, C1, B1, A1, D0, C0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40900 \coreInst/fullALUInst/aluInst/RESULT_3[11] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40301 \coreInst/fullALUInst/aluInst/RESULT_12_0[11] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40900 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB830) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_859 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40901 \coreInst/fullALUInst/aluInst/un3_tmp_13_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40902 \coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI9HM91[13] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40901 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40902 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h707F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_860 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40903 \coreInst/fullALUInst/aluInst/un3_tmp_12_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40904 \coreInst/fullALUInst/aluInst/RESULT_12_0_d_RNI6DL91[12] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40903 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40904 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2A7F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_861 ( input D1, C1, B1, D0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40624 \coreInst/fullALUInst/aluInst/RESULT_6_0[14] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40905 \coreInst/fullALUInst/aluInst/RESULT_12_0_d[14] ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40905 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBB88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_862 ( input D1, C1, B1, A1, D0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40906 \coreInst/fullALUInst/aluInst/RESULT_3[9] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40899 \coreInst/fullALUInst/aluInst/RESULT_12_0[9] ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40906 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_863 ( input D1, C1, B1, A1, D0, C0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40907 \coreInst/fullALUInst/aluInst/RESULT_6_0[13] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40538 \coreInst/fullALUInst/aluInst/RESULT_12_0_d[13] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40907 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE10) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_864 ( input D1, C1, B1, A1, D0, C0, 
    B0, output F0, F1 );
  wire   GNDI;

  lut40908 \coreInst/fullALUInst/aluInst/RESULT_6_0[12] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40909 \coreInst/fullALUInst/aluInst/RESULT_12_0_d[12] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40908 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40909 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_865 ( input D1, C1, B1, A1, D0, C0, 
    B0, output F0, F1 );
  wire   GNDI;

  lut40910 \coreInst/fullALUInst/aluInst/RESULT_6_0[11] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40624 \coreInst/fullALUInst/aluInst/RESULT_12_0_d[11] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40910 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_866 ( input D1, C1, B1, A1, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40911 \coreInst/fullALUInst/aluInst/RESULT_sn_m7 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40296 \coreInst/fullALUInst/aluInst/RESULT_13[13] ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40911 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_867 ( input D1, C1, B1, A1, D0, C0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40912 \coreInst/fullALUInst/aluInst/RESULT_6_0[9] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40105 \coreInst/fullALUInst/aluInst/RESULT_12_0_d[9] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40912 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_868 ( input D1, B1, A1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40913 \coreInst/fullALUInst/aluInst/RESULT_11_65 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40914 \coreInst/fullALUInst/aluInst/RESULT_11_RNITVPP[15] ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40913 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAACC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40914 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A5F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_869 ( input D1, C1, B1, A1, D0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40915 \coreInst/fullALUInst/aluInst/RESULT_6_0[8] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40916 \coreInst/fullALUInst/aluInst/RESULT_11_RNIO3A01[8] ( .A(A0), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40915 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40916 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2277) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_870 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40917 \coreInst/fullALUInst/aluInst/tmp_3[3] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40908 \coreInst/fullALUInst/aluInst/RESULT_6_0[6] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40917 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_871 ( input D1, C1, B1, A1, D0, C0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40918 \coreInst/fullALUInst/aluInst/RESULT_5[13] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40861 \coreInst/fullALUInst/aluInst/RESULT_9[13] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40918 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6AEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_872 ( input D1, C1, B1, A1, D0, C0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40919 \coreInst/fullALUInst/aluInst/RESULT_0[10] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40920 \coreInst/fullALUInst/aluInst/RESULT_11[10] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40919 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40920 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA50) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_873 ( input D1, C1, B1, A1, D0, C0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40921 \coreInst/fullALUInst/aluInst/RESULT_0[15] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40920 \coreInst/fullALUInst/aluInst/RESULT_11[15] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40921 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAC0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_874 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, LSR, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, LSR_NOTIN, M0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40922 \coreInst/fullALUInst/aluInst/un38_RESULT_107 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40923 \coreInst/fullALUInst/aluInst/CARRY_m0 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrL/Q_PHI0[6] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40922 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40923 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBE82) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_875 ( input D1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40924 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_11_18_d ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40925 \coreInst/fullALUInst/aluInst/RESULT_1[15] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40924 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40925 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h30B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_876 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40926 \coreInst/fullALUInst/aluInst/RESULT_sn_m5 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40927 \coreInst/fullALUInst/aluInst/RESULT_7_0[3] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40926 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40927 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_877 ( input C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40928 \coreInst/fullALUInst/aluInst/un53_RESULT_75 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40929 \coreInst/fullALUInst/aluInst/RESULT_7_0[6] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40928 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40929 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEE2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_878 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40930 \coreInst/fullALUInst/aluInst/un3_tmp_14_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40931 \coreInst/fullALUInst/aluInst/tmp_3[14] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40930 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40931 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_879 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40932 \coreInst/fullALUInst/aluInst/un53_RESULT_79 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40933 \coreInst/fullALUInst/aluInst/RESULT_7_0[10] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40932 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40933 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEE4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_880 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40934 \coreInst/fullALUInst/aluInst/un53_RESULT_84 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40927 \coreInst/fullALUInst/aluInst/RESULT_7_0[15] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40934 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_881 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40935 \coreInst/fullALUInst/aluInst/un3_tmp_3_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40936 \coreInst/fullALUInst/aluInst/RESULT_3[3] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40935 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40936 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB380) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_882 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40937 
    \coreInst/fullALUInst/aluInst/un47_RESULT.un47_RESULT_cry_15_0_RNIMFSF2 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40938 \coreInst/fullALUInst/aluInst/RESULT_12[4] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40937 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40938 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF40) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_883 ( input D1, B1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40285 \coreInst/fullALUInst/aluInst/un53_RESULT_38 ( .A(GNDI), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40939 \coreInst/fullALUInst/aluInst/RESULT_12[2] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40939 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_884 ( input D1, C1, B1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40940 \coreInst/fullALUInst/aluInst/un53_RESULT_37 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40939 \coreInst/fullALUInst/aluInst/RESULT_12[1] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40940 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_885 ( input C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40941 \coreInst/fullALUInst/aluInst/RESULT_11_43 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40942 \coreInst/fullALUInst/aluInst/RESULT_8_0_am_RNO[10] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40941 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40942 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_886 ( input D1, C1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40920 \coreInst/fullALUInst/aluInst/RESULT_10_42 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40564 \coreInst/fullALUInst/aluInst/RESULT_8_0_am_RNO[7] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_887 ( input D1, C1, B1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40586 \coreInst/fullALUInst/aluInst/RESULT_10_43 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40564 \coreInst/fullALUInst/aluInst/RESULT_8_0_am_RNO[8] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_888 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40930 \coreInst/fullALUInst/aluInst/un3_tmp_8_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40943 \coreInst/fullALUInst/aluInst/tmp_3_10[13] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40943 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_889 ( input D1, C1, A1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40861 \coreInst/fullALUInst/aluInst/RESULT_11_54 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40538 \coreInst/fullALUInst/aluInst/RESULT_11_70 ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_890 ( input C1, B1, A1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40305 \coreInst/fullALUInst/aluInst/RESULT_11_55 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40538 \coreInst/fullALUInst/aluInst/RESULT_11_71 ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_891 ( input D1, C1, B1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40944 \coreInst/fullALUInst/aluInst/RESULT_11_53 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40538 \coreInst/fullALUInst/aluInst/RESULT_11_69 ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40944 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_892 ( input D1, C1, A1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40676 \coreInst/fullALUInst/aluInst/RESULT_11_52 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40538 \coreInst/fullALUInst/aluInst/RESULT_11_68 ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_893 ( input D1, C1, B1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40895 \coreInst/fullALUInst/aluInst/RESULT_11_51 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40575 \coreInst/fullALUInst/aluInst/RESULT_11_67 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_894 ( input D1, C1, A1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40861 \coreInst/fullALUInst/aluInst/RESULT_11_50 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40538 \coreInst/fullALUInst/aluInst/RESULT_11_66 ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_895 ( input D1, C1, B1, A1, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40945 \coreInst/fullALUInst/aluInst/un3_tmp_10_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40946 \coreInst/fullALUInst/aluInst/tmp_3_0[10] ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40945 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40946 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1F1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_896 ( input D1, C1, B1, A1, D0, C0, 
    output F0, F1 );
  wire   GNDI;

  lut40947 \coreInst/fullALUInst/aluInst/un3_tmp_9_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40133 \coreInst/fullALUInst/aluInst/tmp_3_5[10] ( .A(GNDI), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40947 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_897 ( input D1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40899 \coreInst/fullALUInst/aluInst/RESULT_10_40 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40948 \coreInst/fullALUInst/aluInst/RESULT_10_74 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40948 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_898 ( input C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40941 \coreInst/fullALUInst/aluInst/RESULT_10_39 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40949 \coreInst/fullALUInst/aluInst/RESULT_10_73 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40949 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3022) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_899 ( input D1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40237 \coreInst/fullALUInst/aluInst/RESULT_10_38 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40950 \coreInst/fullALUInst/aluInst/RESULT_10_72 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40950 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00AC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_900 ( input C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40951 \coreInst/fullALUInst/aluInst/RESULT_10_45 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40952 \coreInst/fullALUInst/aluInst/RESULT_10_71 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40951 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40952 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2230) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_901 ( input D1, C1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40252 \coreInst/fullALUInst/aluInst/RESULT_10_36 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40953 \coreInst/fullALUInst/aluInst/RESULT_10_70 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40953 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_902 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40954 \coreInst/fullALUInst/aluInst/OVER_2_6 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40955 \coreInst/fullALUInst/aluInst/tmp_3[1] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40954 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40955 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2220) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_903 ( input D1, C1, B1, A1, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40956 \coreInst/fullALUInst/aluInst/un3_tmp_15_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40240 \coreInst/fullALUInst/aluInst/un3_sex[15] ( .A(A0), .B(GNDI), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40956 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_904 ( input D1, C1, B1, A1, D0, C0, 
    B0, output F0, F1 );
  wire   GNDI;

  lut40957 \coreInst/fullALUInst/aluInst/OVER_2 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40610 \coreInst/fullALUInst/aluInst/un38_RESULT_96 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40957 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_905 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40958 \coreInst/fullALUInst/aluInst/un38_RESULT_41 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40959 \coreInst/fullALUInst/aluInst/un38_RESULT_102_0 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40958 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5410) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40959 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3120) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_906 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40960 \coreInst/fullALUInst/aluInst/un38_RESULT_38 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40961 \coreInst/fullALUInst/aluInst/un38_RESULT_99_0 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40960 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40961 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3210) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_907 ( input D1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40962 \coreInst/fullALUInst/aluInst/un38_RESULT_53 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40963 \coreInst/fullALUInst/aluInst/un38_RESULT_106_0 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40962 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40963 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_908 ( input D1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40964 \coreInst/fullALUInst/aluInst/un53_RESULT_45 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40965 \coreInst/fullALUInst/aluInst/un53_RESULT_78 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40964 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40965 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_909 ( input D1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40905 \coreInst/fullALUInst/aluInst/un53_RESULT_50 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40934 \coreInst/fullALUInst/aluInst/un53_RESULT_83 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_910 ( input D1, C1, B1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40909 \coreInst/fullALUInst/aluInst/un53_RESULT_48 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40932 \coreInst/fullALUInst/aluInst/un53_RESULT_81 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_911 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40966 \coreInst/fullALUInst/aluInst/un53_RESULT_39 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40967 \coreInst/fullALUInst/aluInst/un53_RESULT_80 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40966 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2320) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40967 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_912 ( input D1, C1, B1, A1, D0, C0, 
    B0, output F0, F1 );
  wire   GNDI;

  lut40872 \coreInst/fullALUInst/aluInst/un3_tmp_4_0_1 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40968 \coreInst/fullALUInst/aluInst/un3_tmp_4_0 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40968 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_913 ( input D1, C1, B1, A1, D0, C0, 
    B0, output F0, F1 );
  wire   GNDI;

  lut40885 \coreInst/fullALUInst/aluInst/un3_tmp_0_14 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40969 \coreInst/fullALUInst/aluInst/un3_tmp_2_0 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40969 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_914 ( input D1, C1, B1, A1, D0, C0, 
    B0, output F0, F1 );
  wire   GNDI;

  lut40970 \coreInst/fullALUInst/aluInst/un3_tmp_1_0_1 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40139 \coreInst/fullALUInst/aluInst/un3_tmp_1_0 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40970 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_915 ( input D1, C1, B1, A1, D0, C0, 
    B0, output F0, F1 );
  wire   GNDI;

  lut40971 \coreInst/fullALUInst/aluInst/un3_tmp_0_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40139 \coreInst/fullALUInst/aluInst/un3_tmp_0 ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40971 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_916 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40972 \coreInst/fullALUInst/aluInst/un3_tmp_11_0_0 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40935 \coreInst/fullALUInst/aluInst/un3_tmp_11_0 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40972 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h220A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_917 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40973 \coreInst/fullALUInst/aluInst/un3_tmp_7_0_0 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40930 \coreInst/fullALUInst/aluInst/un3_tmp_7_0 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40973 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_918 ( input D1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40974 \coreInst/fullALUInst/aluInst/un38_RESULT_20 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40975 \coreInst/fullALUInst/aluInst/un38_RESULT_95_0 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40974 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0022) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40975 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_919 ( input D1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40859 \coreInst/fullALUInst/aluInst/un38_RESULT_26 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40976 \coreInst/fullALUInst/aluInst/un38_RESULT_97_0 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40976 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_920 ( input C1, B1, A1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40561 \coreInst/fullALUInst/aluInst/un38_RESULT_27 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40565 \coreInst/fullALUInst/aluInst/un38_RESULT_49 ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_921 ( input D1, C1, B1, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40563 \coreInst/fullALUInst/aluInst/un38_RESULT_24 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40561 \coreInst/fullALUInst/aluInst/un38_RESULT_46 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_922 ( input D1, C1, B1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40977 \coreInst/fullALUInst/aluInst/un53_RESULT_19 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40978 \coreInst/fullALUInst/aluInst/un53_RESULT_69 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40977 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40978 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_923 ( input D1, C1, B1, D0, C0, B0, A0, M1, M0, CE, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40979 \coreInst/fullALUInst/aluInst/OVER_0_4 ( .A(GNDI), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40931 \coreInst/fullALUInst/aluInst/OVER_0_7 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrL/Q_R[3] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrL/Q_R[2] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40979 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_924 ( input D1, B1, A1, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40980 \coreInst/fullALUInst/aluInst/un53_RESULT_30 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40569 \coreInst/fullALUInst/aluInst/un53_RESULT_51 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40980 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_925 ( input D1, C1, B1, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40624 \coreInst/fullALUInst/aluInst/un53_RESULT_26 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40981 \coreInst/fullALUInst/aluInst/un53_RESULT_47 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40981 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE2E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_926 ( input D1, C1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40982 \coreInst/fullALUInst/aluInst/OVER_0_0 ( .A(A1), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40983 \coreInst/fullALUInst/aluInst/OVER_0_6 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrL/Q_R[1] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrL/Q_R[0] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40982 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40983 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_927 ( input C1, B1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40853 \coreInst/fullALUInst/aluInst/un38_RESULT_14 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40234 \coreInst/fullALUInst/aluInst/un38_RESULT_34 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_928 ( input C1, B1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40561 \coreInst/fullALUInst/aluInst/un38_RESULT_15 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40578 \coreInst/fullALUInst/aluInst/un38_RESULT_35 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_929 ( input C1, B1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40984 \coreInst/fullALUInst/aluInst/un38_RESULT_16 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40586 \coreInst/fullALUInst/aluInst/un38_RESULT_36 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40984 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_930 ( input C1, B1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40984 \coreInst/fullALUInst/aluInst/un38_RESULT_12 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40578 \coreInst/fullALUInst/aluInst/un38_RESULT_32 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_931 ( input D1, C1, A1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40565 \coreInst/fullALUInst/aluInst/un38_RESULT_11 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40230 \coreInst/fullALUInst/aluInst/un38_RESULT_31 ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_932 ( input D1, C1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40230 \coreInst/fullALUInst/aluInst/un38_RESULT_10 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40563 \coreInst/fullALUInst/aluInst/un38_RESULT_30 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_933 ( input D1, B1, A1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40859 \coreInst/fullALUInst/aluInst/un38_RESULT_9 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40784 \coreInst/fullALUInst/aluInst/un38_RESULT_29 ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_934 ( input D1, C1, B1, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40236 \coreInst/fullALUInst/aluInst/un38_RESULT_8 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40853 \coreInst/fullALUInst/aluInst/un38_RESULT_28 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_935 ( input C1, B1, A1, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40571 \coreInst/fullALUInst/aluInst/RESULT_10_10 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40985 \coreInst/fullALUInst/aluInst/RESULT_10_27 ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40985 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_936 ( input D1, C1, B1, D0, B0, A0, M0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, LSR_NOTIN, M0_dly, CLK_dly, LSR_dly;

  lut40895 \coreInst/fullALUInst/aluInst/RESULT_10_8 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40986 \coreInst/fullALUInst/aluInst/RESULT_10_25 ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/modeReg/Q_fast[1] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40986 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_937 ( input D1, C1, B1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40944 \coreInst/fullALUInst/aluInst/RESULT_10_9 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40553 \coreInst/fullALUInst/aluInst/RESULT_10_26 ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_938 ( input D1, B1, A1, D0, C0, B0, M1, M0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut40987 \coreInst/fullALUInst/aluInst/RESULT_10_5 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40500 \coreInst/fullALUInst/aluInst/RESULT_10_22 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/modeReg/Q_PHI0[2] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/modeReg/Q_PHI0[1] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40987 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAACC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_939 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40988 \coreInst/fullALUInst/aluInst/PARITY_2_5 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40989 \coreInst/fullALUInst/aluInst/PARITY_2_13 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/modeReg/Q_R[1] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/modeReg/Q_R[0] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40988 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEF2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40989 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_940 ( input D1, C1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40990 
    \coreInst/fullALUInst/aluInst/un47_RESULT.un47_RESULT_cry_15_0_RNI17SK ( 
    .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40991 
    \coreInst/fullALUInst/aluInst/un47_RESULT.un47_RESULT_cry_13_0_RNIS1I91 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40990 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0005) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40991 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_941 ( input D1, C1, B1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40168 \coreInst/instructionPhaseDecoderInst/STOPPED_2_0_0_0_o2 ( .A(GNDI), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40992 \coreInst/instructionPhaseDecoderInst/STOPPED_2_0_0_0_a2_RNIVFUU ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/instructionLatchInst/DEBUG_OPX[3] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0010 \coreInst/instructionLatchInst/DEBUG_OPX[2] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40992 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_942 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, 
    LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40836 \coreInst/debugger/DEBUG_DOUT[7] ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40993 \coreInst/debugger/decoder/S3 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrL/Q_PHI0[5] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrL/Q_PHI0[4] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40993 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_943 ( input C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40994 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_o2[2] ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40995 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[2] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40994 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1717) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40995 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3075) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_944 ( input C1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40996 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_a2_3[8] ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40997 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[4] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40996 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40997 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h05CD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_945 ( input D1, B1, A1, D0, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40998 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_a2_5[2] ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40999 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[2] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40998 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40999 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h22F2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_946 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut41000 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[7] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41001 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[6] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte[4] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41000 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41001 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_947 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40597 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[0] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41002 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[5] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte[3] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41002 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_948 ( input D1, C1, B1, A1, 
    D0, C0, B0, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut41003 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[1] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40851 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[4] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte[2] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41003 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_SLICE_949 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40093 \mcuResourcesInst/UARTInst/TX_CLK_DIV_1_sqmuxa ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41004 \mcuResourcesInst/UARTInst/RX_CLK_DIV_1_sqmuxa ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/RX_CLK_DIV[7] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/RX_CLK_DIV[2] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41004 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerSequencerInst_SLICE_950 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40266 \coreInst/registerSequencerInst/REGA_WEN_3_i_a2_0_2 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41005 \coreInst/registerSequencerInst/REGA_WEN_3_i_a2_4_0 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41005 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_951 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut41006 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_4 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41007 \coreInst/programCounterInst/PC_A_NEXT_6_0_0_RNO[15] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[11] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[10] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41006 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0150) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41007 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0154) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_952 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut41008 \coreInst/registerFileInst/regs/registers_0_0_1_RNI48C21 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41008 \coreInst/busControllerInst/DOUT_BUF_i_0[8] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41008 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h05CD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_953 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41009 \coreInst/fullALUInst/aluInst/RESULT_11_31 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut41010 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_13_0_RNO ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41009 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41010 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9A30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_954 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41011 \coreInst/fullALUInst/aluInst/un3_tmp_0_1 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut41012 \coreInst/fullALUInst/aluInst/un3_tmp_3_0_1 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41011 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h010D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41012 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_955 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41013 \coreInst/fullALUInst/aluInst/un3_tmp_12_0_1 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41014 \coreInst/fullALUInst/aluInst/un3_tmp_0_2 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41013 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC840) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41014 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0123) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_956 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41015 \coreInst/fullALUInst/aluInst/un3_tmp_8_0_2 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40845 \coreInst/fullALUInst/aluInst/un3_tmp_14_0_1 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41015 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0053) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_957 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41016 \coreInst/fullALUInst/aluInst/un3_tmp_6_0_0 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41017 \coreInst/fullALUInst/aluInst/un3_tmp_10_0_0 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41016 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1015) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41017 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4540) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_SLICE_958 ( input D1, B1, A1, D0, C0, B0, A0, 
    M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut41018 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_SM_Main_9_i_o2 ( .A(A1), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40992 \mcuResourcesInst/UARTInst/uartRXInst/r_Bit_Index_5_RNO[2] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/TX_CLK_DIV[12] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0010 \mcuResourcesInst/UARTInst/TX_CLK_DIV[11] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41018 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_SLICE_959 ( input D1, C1, B1, A1, D0, 
    C0, B0, output F0, F1 );
  wire   GNDI;

  lut41019 \mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_N_2L1_0 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41020 \mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_4_RNIOQQP ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41019 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41020 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_960 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut41021 \coreInst/busControllerInst/sequencer/WRN1_BUF_3_0_a2_0 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41022 \coreInst/opxMultiplexerInst/PC_OFFSETX_sn.N_3_i_0_o2 ( .A(A0), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41021 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41022 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF99) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_961 ( input D1, C1, B1, A1, D0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut41023 \coreInst/busControllerInst/sequencer/ADDR_BUSX_R_3_0_iv_i_a2[1] ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41024 \coreInst/opxMultiplexerInst/ALUB_SRCX_0_2_N_2L1 ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/instructionLatchInst/INSTRUCTION[4] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0010 \coreInst/instructionLatchInst/INSTRUCTION[3] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut41023 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_962 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut41025 \coreInst/fullALUInst/aluInst/RESULT_7[2] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40548 \coreInst/busControllerInst/ADDR_BUF_i_a2_0[2] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41025 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_963 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut41026 \coreInst/busControllerInst/ADDR_BUF_i_1_1[1] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41027 \coreInst/busControllerInst/ADDR_BUF_i_a2[15] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41026 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0015) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41027 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3220) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_964 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut41028 \coreInst/busControllerInst/ADDR_BUF_i_a2[14] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41029 \coreInst/busControllerInst/ADDR_BUF_i_a2[13] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00E8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5440) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_965 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut41030 \coreInst/busControllerInst/ADDR_BUF_i_a2[11] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41030 \coreInst/busControllerInst/ADDR_BUF_i_a2[12] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00E8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_966 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut41031 \coreInst/registerFileInst/ADDRA_0[3] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut41032 \coreInst/registerFileInst/ADDRA_0_f0_1_0[2] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCECF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC4CF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_967 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );

  lut41033 \coreInst/registerFileInst/ADDRA_0_f0_0[0] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut41033 \coreInst/registerFileInst/ADDRA_0_f0_1_0[1] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBF11) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_968 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41034 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_9_0_RNO_0 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41034 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_1_0_RNO ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_969 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41035 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_7_0_RNO_0 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41036 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_12_cry_1_0_RNO ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9A00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8A20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_970 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41036 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_11_0_RNO_0 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41037 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_5_0_RNO_0 ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8828) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_971 ( input C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40094 \coreInst/fullALUInst/aluInst/tmp_3_0[12] ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41038 \coreInst/fullALUInst/aluInst/tmp_3_0[13] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_972 ( input D1, C1, B1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut41039 \coreInst/fullALUInst/aluInst/un53_RESULT_74 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41040 \coreInst/fullALUInst/aluInst/un53_RESULT_82 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_973 ( input C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut41041 \coreInst/fullALUInst/aluInst/un53_RESULT_3 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41042 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_0_axb_0 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6CA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_974 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41043 \coreInst/fullALUInst/aluInst/un3_tmp_9_0_0 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41044 \coreInst/fullALUInst/aluInst/RESULT_7[3] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_975 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41045 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_12_cry_1_0_RNO_0 ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41045 \coreInst/fullALUInst/aluInst/RESULT_7[1] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_976 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41046 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_5_0_RNO ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41046 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_9_0_RNO ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8C80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_977 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41047 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_11_0_RNO ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41047 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_8_cry_7_0_RNO ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_978 ( input D1, B1, A1, D0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut41048 \coreInst/fullALUInst/aluInst/un53_RESULT_5 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41048 \coreInst/fullALUInst/aluInst/un38_RESULT_5 ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDD88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_979 ( input D1, C1, A1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40573 \coreInst/fullALUInst/aluInst/un53_RESULT_7 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40573 \coreInst/fullALUInst/aluInst/un38_RESULT_7 ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_debugger_SLICE_980 ( input D1, B1, A1, D0, C0, B0, A0, M1, M0, 
    CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut41049 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_o2_0[8] ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41050 \coreInst/debugger/dataR/DOUT_RNO_0[8] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrL/Q_PHI0[1] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrL/Q_PHI0[0] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2A00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_981 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, 
    M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut41051 \coreInst/debugger/dataR/DOUT_RNO_0[4] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut41052 \coreInst/debugger/dataR/DOUT_RNO_0[10] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrH/Q_PHI0[1] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrH/Q_PHI0[0] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_982 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, 
    M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut41053 \coreInst/debugger/dataR/DOUT_RNO_0[11] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut41054 \coreInst/debugger/dataR/DOUT_RNO_0[6] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrH/Q_PHI0[7] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrH/Q_PHI0[6] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h40C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h40C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_983 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, 
    M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut41055 \coreInst/debugger/dataR/DOUT_RNO_0[13] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut41055 \coreInst/debugger/dataR/DOUT_RNO_0[9] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrL/Q_PHI0[3] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrL/Q_PHI0[2] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2A00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_984 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, 
    M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut41053 \coreInst/debugger/dataR/DOUT_RNO_0[7] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut41053 \coreInst/debugger/dataR/DOUT_RNO_0[5] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrH/Q_PHI0[5] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrH/Q_PHI0[4] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module coreInst_debugger_SLICE_985 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, 
    M0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut41050 \coreInst/debugger/dataR/DOUT_RNO_0[14] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut41050 \coreInst/debugger/dataR/DOUT_RNO_0[12] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrH/Q_PHI0[3] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrH/Q_PHI0[2] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mcuResourcesInst_UARTInst_uartTxInst_SLICE_986 ( input D1, C1, B1, A1, 
    D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut41056 \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Active_RNO_0 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41057 \mcuResourcesInst/UARTInst/uartTxInst/o_TX_Serial_3_iv_i ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4430) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3C3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_UARTInst_uartRXInst_SLICE_987 ( input D1, B1, D0, C0, 
    B0, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40303 \mcuResourcesInst/UARTInst/uartRXInst/un1_r_RX_Byte_3_1 ( .A(GNDI), 
    .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41058 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Bytece[2] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0018 \mcuResourcesInst/UARTInst/uartRXInst/r_RX_Byte[1] ( 
    .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_SLICE_988 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, output F0, F1 );

  lut41059 \mcuResourcesInst/memoryMapperInst/CPU_DIN_0[10] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41060 \mcuResourcesInst/memoryMapperInst/CPU_DIN_0[5] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_SLICE_989 ( input D1, C1, B1, A1, D0, 
    C0, B0, A0, output F0, F1 );

  lut41061 \mcuResourcesInst/memoryMapperInst/CPU_DIN_0[6] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41062 \mcuResourcesInst/memoryMapperInst/CPU_DIN_0[0] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_990 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut41063 \coreInst/programCounterInst/ARGA_i_0_3_N_3L3 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40640 \mcuResourcesInst/memoryMapperInst/CPU_DIN_0[3] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h010F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_991 ( input D1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40278 \coreInst/debugger/modeReg/Q_RNIV3FJ[2] ( .A(A1), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41064 \mcuResourcesInst/memoryMapperInst/CPU_DIN_4_RNO_0[1] ( .A(A0), 
    .B(B0), .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_992 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut41065 \coreInst/fullALUInst/muxB/ALUB_m8_2_0 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut41066 \coreInst/registerSequencerInst/REGA_WEN_3_i_1 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5FD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_993 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut41067 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_a2_0[3] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41068 \coreInst/programCounterInst/PC_A_NEXT_6_0_0_o2[15] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[15] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[14] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8C00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_994 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41069 \coreInst/programCounterInst/ARGA_0_iv_i_0_0[1] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41070 \coreInst/programCounterInst/ARGA_m4_0_a3 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3B33) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h44C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_995 ( input D1, A1, D0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40210 \coreInst/programCounterInst/ARGA_m5_0_a2_0 ( .A(A1), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41071 \coreInst/programCounterInst/ARGA_i_o2[0] ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h55FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_996 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41072 \coreInst/programCounterInst/ARGB_3_0[8] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut41073 \coreInst/programCounterInst/ARGB_3_0[10] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_997 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut41074 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_0 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41075 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[1] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[5] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[4] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h153F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_998 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut41076 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41073 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[4] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[7] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[6] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h135F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_999 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut41076 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_3 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41073 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[5] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[9] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/programCounterInst/INTR0[8] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module coreInst_programCounterInst_SLICE_1000 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41076 \coreInst/programCounterInst/PC_A_NEXT_6_0_0_N_2L1_0 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41075 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[6] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_programCounterInst_SLICE_1001 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41077 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_2 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41078 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[7] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_programCounterInst_SLICE_1002 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41074 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_N_2L1_1 ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut41073 \coreInst/programCounterInst/PC_A_NEXT_6_i_i_0[8] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_busControllerInst_sequencer_SLICE_1003 ( input D1, C1, B1, C0, 
    B0, A0, output F0, F1 );
  wire   GNDI;

  lut41079 \coreInst/busControllerInst/sequencer/ADDR_BUSX_R_3_0_iv_i_m2[1] ( 
    .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41080 \coreInst/busControllerInst/sequencer/ADDR_BUSX_R_3_0_iv_i_a2_0[0] 
    ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0CF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_1004 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41081 \coreInst/busControllerInst/DOUT_BUF_i_0[15] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40740 \coreInst/busControllerInst/DOUT_BUF_i_0[12] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h50DC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_1005 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40740 \coreInst/busControllerInst/DOUT_BUF_i_0[14] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41081 \coreInst/busControllerInst/DOUT_BUF_i_0[11] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_1006 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut41082 \coreInst/fullALUInst/aluInst/RESULT_7[8] ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41083 \coreInst/busControllerInst/ADDR_BUF_i_a2_0[8] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3F00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_1007 ( input D1, C1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut41084 \coreInst/fullALUInst/aluInst/RESULT_7[10] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41085 \coreInst/busControllerInst/ADDR_BUF_i_a2_0[10] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0CCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_busControllerInst_SLICE_1008 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut40780 \coreInst/busControllerInst/ADDR_BUF_i_0[2] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40780 \coreInst/busControllerInst/ADDR_BUF_i_2_0[8] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_1009 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, output F0, F1 );

  lut41086 \coreInst/fullALUInst/aluInst/un38_RESULT_93_0 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41087 \coreInst/fullALUInst/aluInst/RESULT_10_30_RNI2OLO8 ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1010 ( input D1, C1, B1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut41088 \coreInst/fullALUInst/aluInst/RESULT_10_82 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41089 \coreInst/fullALUInst/aluInst/RESULT_8_0_am_RNO[9] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1011 ( input C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut41090 \coreInst/fullALUInst/aluInst/RESULT_10_80 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41091 \coreInst/fullALUInst/aluInst/RESULT_10_76 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3120) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1012 ( input D1, C1, B1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut41088 \coreInst/fullALUInst/aluInst/RESULT_10_79 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41092 \coreInst/fullALUInst/aluInst/RESULT_10_75 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2320) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1013 ( input C1, B1, A1, D0, C0, 
    output F0, F1 );
  wire   GNDI;

  lut41093 \coreInst/fullALUInst/aluInst/RESULT_10_78 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40132 \coreInst/fullALUInst/aluInst/RESULT_11_72_e ( .A(GNDI), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1014 ( input D1, B1, A1, D0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut41094 \coreInst/fullALUInst/aluInst/un53_RESULT_72 ( .A(A1), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41094 \coreInst/fullALUInst/aluInst/un53_RESULT_76 ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1015 ( input D1, C1, B1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40624 \coreInst/fullALUInst/aluInst/un53_RESULT_42 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41095 \coreInst/fullALUInst/aluInst/un53_RESULT_46 ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_1016 ( input D1, C1, A1, D0, C0, B0, M1, M0, CE, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut41096 \coreInst/fullALUInst/aluInst/RESULT_7[14] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41097 \coreInst/fullALUInst/aluInst/OVER_2_5 ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrL/Q_R[5] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrL/Q_R[4] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_1017 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut41098 \coreInst/fullALUInst/aluInst/RESULT_7[6] ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41099 \coreInst/fullALUInst/aluInst/RESULT_0[6] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/modeReg/Q[0] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrL/PL_PHI0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8F80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1018 ( input D1, C1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40252 \coreInst/fullALUInst/aluInst/RESULT_10_3 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41100 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_0_cry_1_0_RNIHAUD ( 
    .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3CCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1019 ( input C1, B1, A1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40985 \coreInst/fullALUInst/aluInst/RESULT_10_12 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40573 \coreInst/fullALUInst/aluInst/un38_RESULT_13 ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_debugger_SLICE_1020 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut41101 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[3] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41102 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_1[0] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3075) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h444F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_1021 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut41103 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[10] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41104 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[11] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C5D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h222F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_1022 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut41105 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[6] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40668 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[13] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3075) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_1023 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut41106 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[9] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41107 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[7] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A3B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5703) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_1024 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut41108 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[5] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41109 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[14] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h444F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A3B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_1025 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40668 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[12] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41110 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_2[15] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1F11) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_1026 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut41111 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[3] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41112 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[0] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h50DC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h44F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_SLICE_1027 ( input D1, C1, B1, A1, C0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut41113 \mcuResourcesInst/memoryMapperInst/CPU_DIN_bm_RNO[4] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40584 \mcuResourcesInst/interruptMaskRegisterInst/DOUT_1_1[5] ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_SLICE_1028 ( input D1, C1, A1, D0, C0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40538 \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[10] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40307 \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[4] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module mcuResourcesInst_memoryMapperInst_SLICE_1029 ( input D1, C1, A1, D0, C0, 
    B0, output F0, F1 );
  wire   GNDI;

  lut40307 \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[3] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40575 \mcuResourcesInst/memoryMapperInst/CPU_DIN_1[5] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_1030 ( input D1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40278 \coreInst/dinLatch/DOUT6 ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41114 \mcuResourcesInst/memoryMapperInst/BE0_f0 ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0707) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module mcuResourcesInst_memoryMapperInst_SLICE_1031 ( input D1, C1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40132 \mcuResourcesInst/memoryMapperInst/GPIO_MAP_8_0 ( .A(GNDI), 
    .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41115 \mcuResourcesInst/memoryMapperInst/UART_MAP_0_a2_3 ( .A(GNDI), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0003) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_opxMultiplexerInst_SLICE_1032 ( input C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut41116 \coreInst/opxMultiplexerInst/ALUB_m10_i_a4_0 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41117 \coreInst/opxMultiplexerInst/PC_OFFSETX_m1_fc_0_a2[0] ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD0D0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_opxMultiplexerInst_SLICE_1033 ( input D1, C1, B1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut41118 \coreInst/opxMultiplexerInst/ALUB_SRCX_0_x[1] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41119 \coreInst/opxMultiplexerInst/ALUB_m10_i_m2 ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00CF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h303F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_1034 ( input C1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut41120 \coreInst/fullALUInst/muxB/ALUB_m8_2 ( .A(A1), .B(GNDI), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41121 \coreInst/opxMultiplexerInst/ALUB_SRCX_0_2_N_3L3 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0010 \coreInst/instructionLatchInst/INSTRUCTION[6] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0010 \coreInst/instructionLatchInst/INSTRUCTION[5] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut41120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0505) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1120) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_1035 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut41122 \coreInst/debugger/DEBUG_DATA_MUX_OUT_6_i_0[1] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40722 \coreInst/programCounterInst/ARGB_3_0[1] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h22F2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_1036 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40809 \coreInst/registerFileInst/DINA_3_i_0[2] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut41123 \coreInst/programCounterInst/ARGB_3_0_a2[2] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBF00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_1037 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut41124 \coreInst/fullALUInst/ccRegs/CC_RUN_REG_0_sqmuxa ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41125 \coreInst/programCounterInst/HERE11 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_1038 ( input B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut41126 \coreInst/busControllerInst/sequencer/N_1010_i ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40721 \coreInst/programCounterInst/INTR05 ( .A(GNDI), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41126 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_1039 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut41025 \coreInst/fullALUInst/aluInst/un3_tmp_13_0_1 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40210 \coreInst/programCounterInst/ARGB_3_0_a2_0[2] ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_1040 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40298 \coreInst/registerFileInst/DINA_3_i_a2_4[7] ( .A(GNDI), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41127 \coreInst/busControllerInst/DOUT_BUF_i_0[10] ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41127 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h50DC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_1041 ( input C1, A1, D0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut41128 \coreInst/registerFileInst/DINA_3_i_a2[6] ( .A(A1), .B(GNDI), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40600 \coreInst/registerFileInst/DINA_3_i_a2[3] ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41128 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_1042 ( input C1, B1, D0, C0, output F0, 
    F1 );
  wire   GNDI;

  lut41129 \coreInst/registerFileInst/DINA_3_i_a2[5] ( .A(GNDI), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41130 \coreInst/registerFileInst/DINA_3_i_a2[4] ( .A(GNDI), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41129 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41130 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_registerFileInst_SLICE_1043 ( input D1, C1, B1, A1, D0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut41131 \coreInst/registerFileInst/ADDRB_0[1] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut41132 \coreInst/registerFileInst/ADDRB_i_o2_RNI5HN22[0] ( .A(A0), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41131 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41132 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00DD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_1044 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut41133 \coreInst/fullALUInst/aluInst/RESULT_11_bm_RNO[0] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut41134 \coreInst/registerFileInst/ADDRB_0_1[2] ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41133 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9599) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41134 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5550) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1045 ( input D1, C1, B1, A1, D0, C0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut41135 \coreInst/fullALUInst/aluInst/PARITY_u_RNO ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut41095 \coreInst/fullALUInst/aluInst/RESULT_9_RNITGBC1[8] ( .A(A0), 
    .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41135 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h99FB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1046 ( input D1, C1, A1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40565 \coreInst/fullALUInst/aluInst/un38_RESULT_6 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41136 \coreInst/fullALUInst/aluInst/RESULT_9_am_RNO[4] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41136 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_1047 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut40561 \coreInst/fullALUInst/aluInst/un38_RESULT_17 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41137 \coreInst/fullALUInst/aluInst/PARITY_u_am_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/requestGen/modeReqReg/Q_PHI0[0] ( 
    .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0018 \coreInst/debugger/requestGen/modeReqReg/Q[0] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41137 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1380) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_1048 ( input D1, C1, B1, A1, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut41138 \coreInst/fullALUInst/aluInst/RESULT_13_RNIR8583[9] ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40569 \coreInst/fullALUInst/aluInst/RESULT[5] ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0010 \coreInst/dinLatch/DOUT[13] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41138 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2A20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1049 ( input D1, C1, A1, D0, C0, B0, 
    output F0, F1 );
  wire   GNDI;

  lut40543 \coreInst/fullALUInst/aluInst/RESULT_12_0[0] ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40614 \coreInst/fullALUInst/aluInst/RESULT_12_0[7] ( .A(GNDI), .B(B0), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_1050 ( input C1, B1, D0, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut41139 \coreInst/fullALUInst/aluInst/tmp_3_7[13] ( .A(GNDI), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41140 \coreInst/fullALUInst/aluInst/RESULT_3[13] ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41139 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41140 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1051 ( input D1, C1, B1, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut41141 \coreInst/fullALUInst/aluInst/RESULT_0[3] ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41142 \coreInst/fullALUInst/aluInst/RESULT_10_77 ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41141 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41142 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1052 ( input D1, B1, D0, B0, output 
    F0, F1 );
  wire   GNDI;

  lut40303 \coreInst/fullALUInst/aluInst/un38_RESULT_94_0 ( .A(GNDI), .B(B1), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40175 \coreInst/fullALUInst/aluInst/un38_RESULT_98_0 ( .A(GNDI), .B(B0), 
    .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_1053 ( input C1, B1, A1, D0, C0, B0, 
    A0, output F0, F1 );
  wire   GNDI;

  lut40941 \coreInst/fullALUInst/aluInst/RESULT_10_23 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41143 \coreInst/fullALUInst/aluInst/RESULT_11_46 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41143 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE10) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1054 ( input C1, B1, A1, D0, C0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut41144 \coreInst/fullALUInst/aluInst/RESULT_7[7] ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41145 \coreInst/fullALUInst/aluInst/RESULT_7[12] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41144 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41145 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1055 ( input D1, C1, B1, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40614 \coreInst/fullALUInst/aluInst/un53_RESULT_28 ( .A(GNDI), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41146 \coreInst/fullALUInst/aluInst/un53_RESULT_34 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41146 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_1056 ( input D1, C1, A1, C0, B0, A0, M0, CE, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, LSR_NOTIN, M0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40920 \coreInst/fullALUInst/aluInst/un21_RESULT.madd_cry_15_s1_0_RNI0P3P 
    ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40985 \coreInst/fullALUInst/aluInst/PARITY_2_1_RNO ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/modeReg/Q_R[2] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module coreInst_debugger_SLICE_1057 ( input D1, B1, D0, C0, A0, M1, M0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut41147 \coreInst/debugger/addrL/PL_RNIOB3E ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41148 \coreInst/debugger/addrH/PL_RNII9VL ( .A(A0), .B(GNDI), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrH/PL_PHI0 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/addrH/PL ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41147 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41148 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_debugger_SLICE_1058 ( input C1, B1, A1, D0, C0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut41146 \coreInst/debugger/DEBUG_DOUT[6] ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41095 \coreInst/debugger/DEBUG_DOUT[0] ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_debugger_SLICE_1059 ( input C1, B1, A1, D0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40296 \coreInst/debugger/DEBUG_DOUT[5] ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40884 \coreInst/debugger/DEBUG_DOUT[1] ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_debugger_SLICE_1060 ( input D1, C1, A1, D0, B0, A0, output F0, 
    F1 );
  wire   GNDI;

  lut40105 \coreInst/debugger/DEBUG_DOUT[4] ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40754 \coreInst/debugger/DEBUG_DOUT[2] ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_1061 ( input C1, B1, A1, C0, B0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut41149 \coreInst/instructionPhaseDecoderInst/STOPPED_2_0_0_0_a2 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41139 \coreInst/instructionPhaseDecoderInst/PHASE_R_ns_o4_0_o3[1] ( 
    .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0010 \coreInst/instructionLatchInst/DEBUG_OPX[1] ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0010 \coreInst/instructionLatchInst/DEBUG_OPX[0] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (negedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut41149 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC8C8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1062 ( input C1, B1, D0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40219 \coreInst/fullALUInst/aluInst/un53_RESULT_77 ( .A(GNDI), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41150 
    \coreInst/fullALUInst/aluInst/un47_RESULT.un47_RESULT_cry_7_0_RNIQH5I ( 
    .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41150 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0055) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_1063 ( input D1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut41151 \coreInst/busControllerInst/ADDR_BUF_i_RNIC2TF[15] ( .A(GNDI), 
    .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41152 \mcuResourcesInst/memoryMapperInst/INT_MAP_11_1_x ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut41151 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut41152 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_SLICE_1064 ( input D1, A1, D0, C0, B0, A0, M0, CE, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, LSR_NOTIN, M0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40210 \coreInst/fullALUInst/aluInst/un3_tmp_5_0 ( .A(A1), .B(GNDI), 
    .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41153 \coreInst/fullALUInst/aluInst/OVER_2_7 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0018 \coreInst/debugger/addrL/Q_R[6] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41153 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module coreInst_fullALUInst_aluInst_SLICE_1065 ( input D1, C1, A1, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut40864 \coreInst/fullALUInst/aluInst/un38_RESULT_3 ( .A(A1), .B(GNDI), 
    .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41146 \coreInst/fullALUInst/aluInst/un53_RESULT_40 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_1066 ( input D1, C1, B1, A1, D0, C0, A0, M1, M0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  lut41052 \coreInst/debugger/dataR/DOUT_RNO_0[15] ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40230 \coreInst/fullALUInst/aluInst/RESULT_10[8] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0018 \coreInst/debugger/modeReg/Q[2] ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0018 \coreInst/debugger/modeReg/Q[1] ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_SLICE_1067 ( input C1, B1, A1, D0, C0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40561 \coreInst/fullALUInst/aluInst/un38_RESULT_69 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40538 \coreInst/fullALUInst/muxB/ALUB_DATA_6_RNO[3] ( .A(A0), .B(GNDI), 
    .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_fullALUInst_aluInst_SLICE_1068 ( input C1, B1, A1, C0, B0, A0, 
    output F0, F1 );
  wire   GNDI;

  lut41082 \coreInst/fullALUInst/aluInst/RESULT_7[11] ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut41082 \coreInst/fullALUInst/aluInst/RESULT_7[9] ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module coreInst_SLICE_1069 ( input D1, C1, B1, A1, D0, C0, B0, M0, CE, LSR, 
    CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly, LSR_dly;

  lut41154 \coreInst/busControllerInst/DOUT_BUF_0_o2_1[7] ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40095 \coreInst/fullALUInst/aluInst/RESULT[10] ( .A(GNDI), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0018 \coreInst/debugger/requestGen/modeReqReg/Q_R[0] ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut41154 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDCFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module PIN_DEBUG_DATA_0_ ( output PADDI, input PADDT, PADDO, inout 
    PINDEBUGDATA0 );

  xo2iobuf \PIN_DEBUG_DATA_pad[0] ( .I(PADDO), .T(PADDT), .Z(PADDI), 
    .PAD(PINDEBUGDATA0), .PADI(PINDEBUGDATA0));

  specify
    (PADDT => PINDEBUGDATA0) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => PINDEBUGDATA0) = (0:0:0,0:0:0);
    (PINDEBUGDATA0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDEBUGDATA0, 0:0:0);
    $width (negedge PINDEBUGDATA0, 0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output Z, PAD, input PADI );

  IB INST1( .I(PADI), .O(Z));
  OBZ INST2( .I(I), .T(T), .O(PAD));
endmodule

module PIN_DEBUG_DATA_0__MGIOL ( input DI, CE, LSR, CLK, output IN );
  wire   LSR_NOTIN, DI_dly, CLK_dly, CE_dly, LSR_dly;

  smuxlregsre \coreInst_debugger_addrH_Q_Rio[0] ( .D0(DI_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(IN));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IN) = (0:0:0,0:0:0);
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module smuxlregsre ( input D0, SP, CK, LSR, output Q );

  IFS1P3DX INST01( .D(D0), .SP(SP), .SCLK(CK), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module PIN_WR0N ( input PADDO, output PIN_WR0N );
  wire   VCCI;

  xo2iobuf1155 PIN_WR0N_pad( .I(PADDO), .T(VCCI), .PAD(PIN_WR0N));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => PIN_WR0N) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf1155 ( input I, T, output PAD );

  OBZ INST5( .I(I), .T(T), .O(PAD));
endmodule

module PIN_STOPPEDN ( input IOLDO, output PIN_STOPPEDN );
  wire   GNDI;

  xo2iobuf1156 PIN_STOPPEDN_pad( .I(IOLDO), .T(GNDI), .PAD(PIN_STOPPEDN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => PIN_STOPPEDN) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf1156 ( input I, T, output PAD );

  OBZPU INST5( .I(I), .T(T), .O(PAD));
endmodule

module PIN_STOPPEDN_MGIOL ( output IOLDO, input OPOS, CLK );
  wire   VCCI, GNDI, OPOS_dly, CLK_dly;

  mfflsre coreInst_instructionPhaseDecoderInst_STOPPED_iio( .D0(OPOS_dly), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mfflsre ( input D0, SP, CK, LSR, output Q );

  FD1P3DX INST01( .D(D0), .SP(SP), .CK(CK), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module PIN_CLK_X1 ( output PADDI, input PIN_CLK_X1 );

  xo2iobuf1157 PIN_CLK_X1_pad( .Z(PADDI), .PAD(PIN_CLK_X1));

  specify
    (PIN_CLK_X1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PIN_CLK_X1, 0:0:0);
    $width (negedge PIN_CLK_X1, 0:0:0);
  endspecify

endmodule

module xo2iobuf1157 ( output Z, input PAD );

  IB INST1( .I(PAD), .O(Z));
endmodule

module PIN_ADDR_GPIO ( input PADDO, output PIN_ADDR_GPIO );
  wire   GNDI;

  xo2iobuf1158 PIN_ADDR_GPIO_pad( .I(PADDO), .T(GNDI), .PAD(PIN_ADDR_GPIO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PIN_ADDR_GPIO) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf1158 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module PIN_WRN_GPIO ( input PADDO, output PIN_WRN_GPIO );
  wire   GNDI;

  xo2iobuf1158 PIN_WRN_GPIO_pad( .I(PADDO), .T(GNDI), .PAD(PIN_WRN_GPIO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PIN_WRN_GPIO) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_RDN_GPIO ( input PADDO, output PIN_RDN_GPIO );
  wire   GNDI;

  xo2iobuf1158 PIN_RDN_GPIO_pad( .I(PADDO), .T(GNDI), .PAD(PIN_RDN_GPIO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PIN_RDN_GPIO) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DIN_GPIO_15_ ( output PADDI, input PINDINGPIO15 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[15] ( .Z(PADDI), .PAD(PINDINGPIO15));

  specify
    (PINDINGPIO15 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO15, 0:0:0);
    $width (negedge PINDINGPIO15, 0:0:0);
  endspecify

endmodule

module xo2iobuf1159 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module PIN_DIN_GPIO_14_ ( output PADDI, input PINDINGPIO14 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[14] ( .Z(PADDI), .PAD(PINDINGPIO14));

  specify
    (PINDINGPIO14 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO14, 0:0:0);
    $width (negedge PINDINGPIO14, 0:0:0);
  endspecify

endmodule

module PIN_DIN_GPIO_13_ ( output PADDI, input PINDINGPIO13 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[13] ( .Z(PADDI), .PAD(PINDINGPIO13));

  specify
    (PINDINGPIO13 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO13, 0:0:0);
    $width (negedge PINDINGPIO13, 0:0:0);
  endspecify

endmodule

module PIN_DIN_GPIO_12_ ( output PADDI, input PINDINGPIO12 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[12] ( .Z(PADDI), .PAD(PINDINGPIO12));

  specify
    (PINDINGPIO12 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO12, 0:0:0);
    $width (negedge PINDINGPIO12, 0:0:0);
  endspecify

endmodule

module PIN_DIN_GPIO_11_ ( output PADDI, input PINDINGPIO11 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[11] ( .Z(PADDI), .PAD(PINDINGPIO11));

  specify
    (PINDINGPIO11 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO11, 0:0:0);
    $width (negedge PINDINGPIO11, 0:0:0);
  endspecify

endmodule

module PIN_DIN_GPIO_10_ ( output PADDI, input PINDINGPIO10 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[10] ( .Z(PADDI), .PAD(PINDINGPIO10));

  specify
    (PINDINGPIO10 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO10, 0:0:0);
    $width (negedge PINDINGPIO10, 0:0:0);
  endspecify

endmodule

module PIN_DIN_GPIO_9_ ( output PADDI, input PINDINGPIO9 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[9] ( .Z(PADDI), .PAD(PINDINGPIO9));

  specify
    (PINDINGPIO9 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO9, 0:0:0);
    $width (negedge PINDINGPIO9, 0:0:0);
  endspecify

endmodule

module PIN_DIN_GPIO_8_ ( output PADDI, input PINDINGPIO8 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[8] ( .Z(PADDI), .PAD(PINDINGPIO8));

  specify
    (PINDINGPIO8 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO8, 0:0:0);
    $width (negedge PINDINGPIO8, 0:0:0);
  endspecify

endmodule

module PIN_DIN_GPIO_7_ ( output PADDI, input PINDINGPIO7 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[7] ( .Z(PADDI), .PAD(PINDINGPIO7));

  specify
    (PINDINGPIO7 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO7, 0:0:0);
    $width (negedge PINDINGPIO7, 0:0:0);
  endspecify

endmodule

module PIN_DIN_GPIO_6_ ( output PADDI, input PINDINGPIO6 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[6] ( .Z(PADDI), .PAD(PINDINGPIO6));

  specify
    (PINDINGPIO6 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO6, 0:0:0);
    $width (negedge PINDINGPIO6, 0:0:0);
  endspecify

endmodule

module PIN_DIN_GPIO_5_ ( output PADDI, input PINDINGPIO5 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[5] ( .Z(PADDI), .PAD(PINDINGPIO5));

  specify
    (PINDINGPIO5 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO5, 0:0:0);
    $width (negedge PINDINGPIO5, 0:0:0);
  endspecify

endmodule

module PIN_DIN_GPIO_4_ ( output PADDI, input PINDINGPIO4 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[4] ( .Z(PADDI), .PAD(PINDINGPIO4));

  specify
    (PINDINGPIO4 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO4, 0:0:0);
    $width (negedge PINDINGPIO4, 0:0:0);
  endspecify

endmodule

module PIN_DIN_GPIO_3_ ( output PADDI, input PINDINGPIO3 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[3] ( .Z(PADDI), .PAD(PINDINGPIO3));

  specify
    (PINDINGPIO3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO3, 0:0:0);
    $width (negedge PINDINGPIO3, 0:0:0);
  endspecify

endmodule

module PIN_DIN_GPIO_2_ ( output PADDI, input PINDINGPIO2 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[2] ( .Z(PADDI), .PAD(PINDINGPIO2));

  specify
    (PINDINGPIO2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO2, 0:0:0);
    $width (negedge PINDINGPIO2, 0:0:0);
  endspecify

endmodule

module PIN_DIN_GPIO_1_ ( output PADDI, input PINDINGPIO1 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[1] ( .Z(PADDI), .PAD(PINDINGPIO1));

  specify
    (PINDINGPIO1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO1, 0:0:0);
    $width (negedge PINDINGPIO1, 0:0:0);
  endspecify

endmodule

module PIN_DIN_GPIO_0_ ( output PADDI, input PINDINGPIO0 );

  xo2iobuf1159 \PIN_DIN_GPIO_pad[0] ( .Z(PADDI), .PAD(PINDINGPIO0));

  specify
    (PINDINGPIO0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDINGPIO0, 0:0:0);
    $width (negedge PINDINGPIO0, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_STOP ( input PADDO, output PIN_DEBUG_STOP );
  wire   VCCI;

  xo2iobuf1160 PIN_DEBUG_STOP_pad( .I(PADDO), .T(VCCI), .PAD(PIN_DEBUG_STOP));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => PIN_DEBUG_STOP) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf1160 ( input I, T, output PAD );

  OBZPU INST5( .I(I), .T(T), .O(PAD));
endmodule

module PIN_DEBUG_ADDR_2_ ( output PADDI, input PINDEBUGADDR2 );

  xo2iobuf1157 \PIN_DEBUG_ADDR_pad[2] ( .Z(PADDI), .PAD(PINDEBUGADDR2));

  specify
    (PINDEBUGADDR2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDEBUGADDR2, 0:0:0);
    $width (negedge PINDEBUGADDR2, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_ADDR_1_ ( output PADDI, input PINDEBUGADDR1 );

  xo2iobuf1157 \PIN_DEBUG_ADDR_pad[1] ( .Z(PADDI), .PAD(PINDEBUGADDR1));

  specify
    (PINDEBUGADDR1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDEBUGADDR1, 0:0:0);
    $width (negedge PINDEBUGADDR1, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_ADDR_0_ ( output PADDI, input PINDEBUGADDR0 );

  xo2iobuf1157 \PIN_DEBUG_ADDR_pad[0] ( .Z(PADDI), .PAD(PINDEBUGADDR0));

  specify
    (PINDEBUGADDR0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDEBUGADDR0, 0:0:0);
    $width (negedge PINDEBUGADDR0, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_RDN ( output PADDI, input PIN_DEBUG_RDN );

  xo2iobuf1161 PIN_DEBUG_RDN_pad( .Z(PADDI), .PAD(PIN_DEBUG_RDN));

  specify
    (PIN_DEBUG_RDN => PADDI) = (0:0:0,0:0:0);
    $width (posedge PIN_DEBUG_RDN, 0:0:0);
    $width (negedge PIN_DEBUG_RDN, 0:0:0);
  endspecify

endmodule

module xo2iobuf1161 ( output Z, input PAD );

  IBPU INST1( .I(PAD), .O(Z));
endmodule

module PIN_DEBUG_WRN ( output PADDI, input PIN_DEBUG_WRN );

  xo2iobuf1161 PIN_DEBUG_WRN_pad( .Z(PADDI), .PAD(PIN_DEBUG_WRN));

  specify
    (PIN_DEBUG_WRN => PADDI) = (0:0:0,0:0:0);
    $width (posedge PIN_DEBUG_WRN, 0:0:0);
    $width (negedge PIN_DEBUG_WRN, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_DATA_7_ ( output PADDI, input PADDT, PADDO, inout 
    PINDEBUGDATA7 );

  xo2iobuf \PIN_DEBUG_DATA_pad[7] ( .I(PADDO), .T(PADDT), .Z(PADDI), 
    .PAD(PINDEBUGDATA7), .PADI(PINDEBUGDATA7));

  specify
    (PADDT => PINDEBUGDATA7) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => PINDEBUGDATA7) = (0:0:0,0:0:0);
    (PINDEBUGDATA7 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDEBUGDATA7, 0:0:0);
    $width (negedge PINDEBUGDATA7, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_DATA_7__MGIOL ( input DI, CE, LSR, CLK, output IN );
  wire   LSR_NOTIN, DI_dly, CLK_dly, CE_dly, LSR_dly;

  smuxlregsre \coreInst_debugger_addrH_Q_Rio[7] ( .D0(DI_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(IN));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IN) = (0:0:0,0:0:0);
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_DATA_6_ ( output PADDI, input PADDT, PADDO, inout 
    PINDEBUGDATA6 );

  xo2iobuf \PIN_DEBUG_DATA_pad[6] ( .I(PADDO), .T(PADDT), .Z(PADDI), 
    .PAD(PINDEBUGDATA6), .PADI(PINDEBUGDATA6));

  specify
    (PADDT => PINDEBUGDATA6) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => PINDEBUGDATA6) = (0:0:0,0:0:0);
    (PINDEBUGDATA6 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDEBUGDATA6, 0:0:0);
    $width (negedge PINDEBUGDATA6, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_DATA_6__MGIOL ( input DI, CE, LSR, CLK, output IN );
  wire   LSR_NOTIN, DI_dly, CLK_dly, CE_dly, LSR_dly;

  smuxlregsre \coreInst_debugger_addrH_Q_Rio[6] ( .D0(DI_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(IN));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IN) = (0:0:0,0:0:0);
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_DATA_5_ ( output PADDI, input PADDT, PADDO, inout 
    PINDEBUGDATA5 );

  xo2iobuf \PIN_DEBUG_DATA_pad[5] ( .I(PADDO), .T(PADDT), .Z(PADDI), 
    .PAD(PINDEBUGDATA5), .PADI(PINDEBUGDATA5));

  specify
    (PADDT => PINDEBUGDATA5) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => PINDEBUGDATA5) = (0:0:0,0:0:0);
    (PINDEBUGDATA5 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDEBUGDATA5, 0:0:0);
    $width (negedge PINDEBUGDATA5, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_DATA_5__MGIOL ( input DI, CE, LSR, CLK, output IN );
  wire   LSR_NOTIN, DI_dly, CLK_dly, CE_dly, LSR_dly;

  smuxlregsre \coreInst_debugger_addrH_Q_Rio[5] ( .D0(DI_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(IN));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IN) = (0:0:0,0:0:0);
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_DATA_4_ ( output PADDI, input PADDT, PADDO, inout 
    PINDEBUGDATA4 );

  xo2iobuf \PIN_DEBUG_DATA_pad[4] ( .I(PADDO), .T(PADDT), .Z(PADDI), 
    .PAD(PINDEBUGDATA4), .PADI(PINDEBUGDATA4));

  specify
    (PADDT => PINDEBUGDATA4) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => PINDEBUGDATA4) = (0:0:0,0:0:0);
    (PINDEBUGDATA4 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDEBUGDATA4, 0:0:0);
    $width (negedge PINDEBUGDATA4, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_DATA_4__MGIOL ( input DI, CE, LSR, CLK, output IN );
  wire   LSR_NOTIN, DI_dly, CLK_dly, CE_dly, LSR_dly;

  smuxlregsre \coreInst_debugger_addrH_Q_Rio[4] ( .D0(DI_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(IN));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IN) = (0:0:0,0:0:0);
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_DATA_3_ ( output PADDI, input PADDT, PADDO, inout 
    PINDEBUGDATA3 );

  xo2iobuf \PIN_DEBUG_DATA_pad[3] ( .I(PADDO), .T(PADDT), .Z(PADDI), 
    .PAD(PINDEBUGDATA3), .PADI(PINDEBUGDATA3));

  specify
    (PADDT => PINDEBUGDATA3) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => PINDEBUGDATA3) = (0:0:0,0:0:0);
    (PINDEBUGDATA3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDEBUGDATA3, 0:0:0);
    $width (negedge PINDEBUGDATA3, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_DATA_3__MGIOL ( input DI, CE, LSR, CLK, output IN );
  wire   LSR_NOTIN, DI_dly, CLK_dly, CE_dly, LSR_dly;

  smuxlregsre \coreInst_debugger_addrH_Q_Rio[3] ( .D0(DI_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(IN));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IN) = (0:0:0,0:0:0);
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_DATA_2_ ( output PADDI, input PADDT, PADDO, inout 
    PINDEBUGDATA2 );

  xo2iobuf \PIN_DEBUG_DATA_pad[2] ( .I(PADDO), .T(PADDT), .Z(PADDI), 
    .PAD(PINDEBUGDATA2), .PADI(PINDEBUGDATA2));

  specify
    (PADDT => PINDEBUGDATA2) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => PINDEBUGDATA2) = (0:0:0,0:0:0);
    (PINDEBUGDATA2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDEBUGDATA2, 0:0:0);
    $width (negedge PINDEBUGDATA2, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_DATA_2__MGIOL ( input DI, CE, LSR, CLK, output IN );
  wire   LSR_NOTIN, DI_dly, CLK_dly, CE_dly, LSR_dly;

  smuxlregsre \coreInst_debugger_addrH_Q_Rio[2] ( .D0(DI_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(IN));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IN) = (0:0:0,0:0:0);
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_DATA_1_ ( output PADDI, input PADDT, PADDO, inout 
    PINDEBUGDATA1 );

  xo2iobuf \PIN_DEBUG_DATA_pad[1] ( .I(PADDO), .T(PADDT), .Z(PADDI), 
    .PAD(PINDEBUGDATA1), .PADI(PINDEBUGDATA1));

  specify
    (PADDT => PINDEBUGDATA1) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => PINDEBUGDATA1) = (0:0:0,0:0:0);
    (PINDEBUGDATA1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PINDEBUGDATA1, 0:0:0);
    $width (negedge PINDEBUGDATA1, 0:0:0);
  endspecify

endmodule

module PIN_DEBUG_DATA_1__MGIOL ( input DI, CE, LSR, CLK, output IN );
  wire   LSR_NOTIN, DI_dly, CLK_dly, CE_dly, LSR_dly;

  smuxlregsre \coreInst_debugger_addrH_Q_Rio[1] ( .D0(DI_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(IN));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (LSR => IN) = (0:0:0,0:0:0);
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIN_LED_7_ ( input PADDO, output PINLED7 );
  wire   VCCI;

  xo2iobuf1155 \PIN_LED_pad[7] ( .I(PADDO), .T(VCCI), .PAD(PINLED7));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => PINLED7) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_LED_6_ ( input PADDO, output PINLED6 );
  wire   VCCI;

  xo2iobuf1155 \PIN_LED_pad[6] ( .I(PADDO), .T(VCCI), .PAD(PINLED6));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => PINLED6) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_LED_5_ ( input PADDO, output PINLED5 );
  wire   VCCI;

  xo2iobuf1155 \PIN_LED_pad[5] ( .I(PADDO), .T(VCCI), .PAD(PINLED5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => PINLED5) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_LED_4_ ( input PADDO, output PINLED4 );
  wire   VCCI;

  xo2iobuf1155 \PIN_LED_pad[4] ( .I(PADDO), .T(VCCI), .PAD(PINLED4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => PINLED4) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_LED_3_ ( input PADDO, output PINLED3 );
  wire   VCCI;

  xo2iobuf1155 \PIN_LED_pad[3] ( .I(PADDO), .T(VCCI), .PAD(PINLED3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => PINLED3) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_LED_2_ ( input PADDO, output PINLED2 );
  wire   VCCI;

  xo2iobuf1155 \PIN_LED_pad[2] ( .I(PADDO), .T(VCCI), .PAD(PINLED2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => PINLED2) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_LED_1_ ( input PADDO, output PINLED1 );
  wire   VCCI;

  xo2iobuf1155 \PIN_LED_pad[1] ( .I(PADDO), .T(VCCI), .PAD(PINLED1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => PINLED1) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_LED_0_ ( input PADDO, output PINLED0 );
  wire   VCCI;

  xo2iobuf1155 \PIN_LED_pad[0] ( .I(PADDO), .T(VCCI), .PAD(PINLED0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => PINLED0) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_TXD ( input IOLDO, output PIN_TXD );

  xo2iobuf1162 PIN_TXD_pad( .I(IOLDO), .PAD(PIN_TXD));

  specify
    (IOLDO => PIN_TXD) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf1162 ( input I, output PAD );

  OB INST5( .I(I), .O(PAD));
endmodule

module PIN_TXD_MGIOL ( output IOLDO, input OPOS, CLK );
  wire   VCCI, GNDI, OPOS_dly, CLK_dly;

  mfflsre1163 mcuResourcesInst_UARTInst_uartTxInst_o_TX_Serialio( 
    .D0(OPOS_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module mfflsre1163 ( input D0, SP, CK, LSR, output Q );

  FD1P3BX INST01( .D(D0), .SP(SP), .CK(CK), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module PIN_RXD ( output PADDI, input PIN_RXD );

  xo2iobuf1161 PIN_RXD_pad( .Z(PADDI), .PAD(PIN_RXD));

  specify
    (PIN_RXD => PADDI) = (0:0:0,0:0:0);
    $width (posedge PIN_RXD, 0:0:0);
    $width (negedge PIN_RXD, 0:0:0);
  endspecify

endmodule

module PIN_RXD_MGIOL ( input DI, CE, CLK, output IN );
  wire   GNDI, DI_dly, CLK_dly, CE_dly;

  smuxlregsre \mcuResourcesInst_UARTInst_uartRXInst_r_RX_Byteio[7] ( 
    .D0(DI_dly), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IN) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI, 0:0:0, 0:0:0,,,, CLK_dly, DI_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIN_WR1N ( input PADDO, output PIN_WR1N );
  wire   VCCI;

  xo2iobuf1155 PIN_WR1N_pad( .I(PADDO), .T(VCCI), .PAD(PIN_WR1N));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => PIN_WR1N) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_RDN ( input PADDO, output PIN_RDN );
  wire   GNDI;

  xo2iobuf1158 PIN_RDN_pad( .I(PADDO), .T(GNDI), .PAD(PIN_RDN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PIN_RDN) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_INT6 ( output PADDI, input PIN_INT6 );

  xo2iobuf1159 PIN_INT6_pad( .Z(PADDI), .PAD(PIN_INT6));

  specify
    (PIN_INT6 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PIN_INT6, 0:0:0);
    $width (negedge PIN_INT6, 0:0:0);
  endspecify

endmodule

module PIN_INT5 ( output PADDI, input PIN_INT5 );

  xo2iobuf1159 PIN_INT5_pad( .Z(PADDI), .PAD(PIN_INT5));

  specify
    (PIN_INT5 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PIN_INT5, 0:0:0);
    $width (negedge PIN_INT5, 0:0:0);
  endspecify

endmodule

module PIN_INT4 ( output PADDI, input PIN_INT4 );

  xo2iobuf1159 PIN_INT4_pad( .Z(PADDI), .PAD(PIN_INT4));

  specify
    (PIN_INT4 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PIN_INT4, 0:0:0);
    $width (negedge PIN_INT4, 0:0:0);
  endspecify

endmodule

module PIN_INT3 ( output PADDI, input PIN_INT3 );

  xo2iobuf1159 PIN_INT3_pad( .Z(PADDI), .PAD(PIN_INT3));

  specify
    (PIN_INT3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PIN_INT3, 0:0:0);
    $width (negedge PIN_INT3, 0:0:0);
  endspecify

endmodule

module PIN_INT2 ( output PADDI, input PIN_INT2 );

  xo2iobuf1159 PIN_INT2_pad( .Z(PADDI), .PAD(PIN_INT2));

  specify
    (PIN_INT2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PIN_INT2, 0:0:0);
    $width (negedge PIN_INT2, 0:0:0);
  endspecify

endmodule

module PIN_INT1 ( output PADDI, input PIN_INT1 );

  xo2iobuf1159 PIN_INT1_pad( .Z(PADDI), .PAD(PIN_INT1));

  specify
    (PIN_INT1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PIN_INT1, 0:0:0);
    $width (negedge PIN_INT1, 0:0:0);
  endspecify

endmodule

module PIN_INT0 ( output PADDI, input PIN_INT0 );

  xo2iobuf1159 PIN_INT0_pad( .Z(PADDI), .PAD(PIN_INT0));

  specify
    (PIN_INT0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge PIN_INT0, 0:0:0);
    $width (negedge PIN_INT0, 0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_15_ ( input PADDO, output PINDATABUS15 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[15] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS15));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS15) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_14_ ( input PADDO, output PINDATABUS14 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[14] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS14));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS14) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_13_ ( input PADDO, output PINDATABUS13 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[13] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS13));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS13) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_12_ ( input PADDO, output PINDATABUS12 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[12] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS12));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS12) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_11_ ( input PADDO, output PINDATABUS11 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[11] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS11));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS11) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_10_ ( input PADDO, output PINDATABUS10 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[10] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS10));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS10) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_9_ ( input PADDO, output PINDATABUS9 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[9] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS9));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS9) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_8_ ( input PADDO, output PINDATABUS8 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[8] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS8));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS8) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_7_ ( input PADDO, output PINDATABUS7 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[7] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS7) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_6_ ( input PADDO, output PINDATABUS6 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[6] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS6) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_5_ ( input PADDO, output PINDATABUS5 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[5] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS5) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_4_ ( input PADDO, output PINDATABUS4 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[4] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS4) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_3_ ( input PADDO, output PINDATABUS3 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[3] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS3) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_2_ ( input PADDO, output PINDATABUS2 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[2] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS2) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_1_ ( input PADDO, output PINDATABUS1 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[1] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS1) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DATA_BUS_0_ ( input PADDO, output PINDATABUS0 );
  wire   GNDI;

  xo2iobuf1158 \PIN_DATA_BUS_pad[0] ( .I(PADDO), .T(GNDI), .PAD(PINDATABUS0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINDATABUS0) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_15_ ( input PADDO, output PINADDRBUS15 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[15] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS15));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS15) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_14_ ( input PADDO, output PINADDRBUS14 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[14] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS14));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS14) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_13_ ( input PADDO, output PINADDRBUS13 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[13] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS13));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS13) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_12_ ( input PADDO, output PINADDRBUS12 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[12] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS12));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS12) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_11_ ( input PADDO, output PINADDRBUS11 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[11] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS11));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS11) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_10_ ( input PADDO, output PINADDRBUS10 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[10] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS10));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS10) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_9_ ( input PADDO, output PINADDRBUS9 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[9] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS9));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS9) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_8_ ( input PADDO, output PINADDRBUS8 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[8] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS8));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS8) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_7_ ( input PADDO, output PINADDRBUS7 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[7] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS7));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS7) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_6_ ( input PADDO, output PINADDRBUS6 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[6] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS6) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_5_ ( input PADDO, output PINADDRBUS5 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[5] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS5) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_4_ ( input PADDO, output PINADDRBUS4 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[4] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS4) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_3_ ( input PADDO, output PINADDRBUS3 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[3] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS3) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_2_ ( input PADDO, output PINADDRBUS2 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[2] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS2) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_1_ ( input PADDO, output PINADDRBUS1 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[1] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS1) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_ADDR_BUS_0_ ( input PADDO, output PINADDRBUS0 );
  wire   GNDI;

  xo2iobuf1158 \PIN_ADDR_BUS_pad[0] ( .I(PADDO), .T(GNDI), .PAD(PINADDRBUS0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => PINADDRBUS0) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_COMMITN ( input IOLDO, output PIN_COMMITN );
  wire   GNDI;

  xo2iobuf1156 PIN_COMMITN_pad( .I(IOLDO), .T(GNDI), .PAD(PIN_COMMITN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => PIN_COMMITN) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_COMMITN_MGIOL ( output IOLDO, input OPOS, CLK );
  wire   VCCI, GNDI, OPOS_dly, CLK_dly;

  mfflsre1163 coreInst_instructionPhaseDecoderInst_COMMIT_rep0_iio( 
    .D0(OPOS_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIN_EXECUTEN ( input IOLDO, output PIN_EXECUTEN );
  wire   GNDI;

  xo2iobuf1156 PIN_EXECUTEN_pad( .I(IOLDO), .T(GNDI), .PAD(PIN_EXECUTEN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => PIN_EXECUTEN) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_EXECUTEN_MGIOL ( output IOLDO, input OPOS, CLK );
  wire   VCCI, GNDI, OPOS_dly, CLK_dly;

  mfflsre1163 coreInst_instructionPhaseDecoderInst_EXECUTE_rep0_iio( 
    .D0(OPOS_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIN_DECODEN ( input IOLDO, output PIN_DECODEN );
  wire   GNDI;

  xo2iobuf1156 PIN_DECODEN_pad( .I(IOLDO), .T(GNDI), .PAD(PIN_DECODEN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => PIN_DECODEN) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_DECODEN_MGIOL ( output IOLDO, input OPOS, CLK );
  wire   VCCI, GNDI, OPOS_dly, CLK_dly;

  mfflsre1163 coreInst_instructionPhaseDecoderInst_DECODE_rep0_iio( 
    .D0(OPOS_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIN_FETCHN ( input IOLDO, output PIN_FETCHN );
  wire   GNDI;

  xo2iobuf1156 PIN_FETCHN_pad( .I(IOLDO), .T(GNDI), .PAD(PIN_FETCHN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (IOLDO => PIN_FETCHN) = (0:0:0,0:0:0);
  endspecify

endmodule

module PIN_FETCHN_MGIOL ( output IOLDO, input OPOS, CLK );
  wire   VCCI, GNDI, OPOS_dly, CLK_dly;

  mfflsre1163 coreInst_instructionPhaseDecoderInst_FETCH_rep0_iio( 
    .D0(OPOS_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(IOLDO));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLK => IOLDO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, OPOS, 0:0:0, 0:0:0,,,, CLK_dly, OPOS_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PIN_RESETN ( output PADDI, input PIN_RESETN );

  xo2iobuf1161 PIN_RESETN_pad( .Z(PADDI), .PAD(PIN_RESETN));

  specify
    (PIN_RESETN => PADDI) = (0:0:0,0:0:0);
    $width (posedge PIN_RESETN, 0:0:0);
    $width (negedge PIN_RESETN, 0:0:0);
  endspecify

endmodule

module mcuResourcesInst_RAMInst_RAM_0_0_7 ( input DIA7, DIA6, DIA5, DIA4, DIA3, 
    DIA2, DIA1, DIA0, ADA12, ADA11, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, 
    ADA0, output DOA7, DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input WEA, 
    CEA, OCEA, RSTA, CLKA, CSA1, CSA0 );
  wire   GNDI, VCCI, DIA7_dly, CLKA_dly, DIA6_dly, DIA5_dly, DIA4_dly, 
         DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA12_dly, ADA11_dly, 
         ADA10_dly, ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, 
         ADA0_dly, WEA_dly, CEA_dly, OCEA_dly, RSTA_dly, CSA1_dly, CSA0_dly;

  DP8KC_B \mcuResourcesInst/RAMInst/RAM_0_0_7_DP8KC ( .CEA(CEA_dly), 
    .OCEA(OCEA_dly), .CLKA(CLKA_dly), .WEA(WEA_dly), .CSA0(CSA0_dly), 
    .CSA1(CSA1_dly), .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), 
    .CLKB(GNDI), .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), 
    .RSTB(GNDI), .DIA0(DIA0_dly), .DIA1(DIA1_dly), .DIA2(DIA2_dly), 
    .DIA3(DIA3_dly), .DIA4(DIA4_dly), .DIA5(DIA5_dly), .DIA6(DIA6_dly), 
    .DIA7(DIA7_dly), .DIA8(GNDI), .ADA0(ADA0_dly), .ADA1(GNDI), .ADA2(GNDI), 
    .ADA3(GNDI), .ADA4(ADA4_dly), .ADA5(ADA5_dly), .ADA6(ADA6_dly), 
    .ADA7(ADA7_dly), .ADA8(ADA8_dly), .ADA9(ADA9_dly), .ADA10(ADA10_dly), 
    .ADA11(ADA11_dly), .ADA12(ADA12_dly), .DIB0(GNDI), .DIB1(GNDI), 
    .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), .DIB5(GNDI), .DIB6(GNDI), 
    .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), .ADB1(GNDI), .ADB2(GNDI), 
    .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), .ADB6(GNDI), .ADB7(GNDI), 
    .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), .ADB11(GNDI), .ADB12(GNDI), 
    .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), 
    .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (RSTA => DOA7) = (0:0:0,0:0:0);
    (RSTA => DOA6) = (0:0:0,0:0:0);
    (RSTA => DOA5) = (0:0:0,0:0:0);
    (RSTA => DOA4) = (0:0:0,0:0:0);
    (RSTA => DOA3) = (0:0:0,0:0:0);
    (RSTA => DOA2) = (0:0:0,0:0:0);
    (RSTA => DOA1) = (0:0:0,0:0:0);
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA7) = (0:0:0,0:0:0);
    (CLKA => DOA6) = (0:0:0,0:0:0);
    (CLKA => DOA5) = (0:0:0,0:0:0);
    (CLKA => DOA4) = (0:0:0,0:0:0);
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA0, 0:0:0, 0:0:0,,,, CLKA_dly, ADA0_dly);
    $setuphold (posedge CLKA, WEA, 0:0:0, 0:0:0,,,, CLKA_dly, WEA_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA1, 0:0:0, 0:0:0,,,, CLKA_dly, CSA1_dly);
    $setuphold (posedge CLKA, CSA0, 0:0:0, 0:0:0,,,, CLKA_dly, CSA0_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
  endspecify

endmodule

module DP8KC_B ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, OCEB, 
    CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, DIA5, 
    DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, ADA8, 
    ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, DIB7, 
    DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, ADB10, 
    ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, DOA8, 
    DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 9;
  defparam INST10.DATA_WIDTH_B = 9;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "WRITETHROUGH";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_RAMInst_RAM_0_1_6 ( input DIA7, DIA6, DIA5, DIA4, DIA3, 
    DIA2, DIA1, DIA0, ADA12, ADA11, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, 
    ADA0, output DOA7, DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input WEA, 
    CEA, OCEA, RSTA, CLKA, CSA1, CSA0 );
  wire   GNDI, VCCI, DIA7_dly, CLKA_dly, DIA6_dly, DIA5_dly, DIA4_dly, 
         DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA12_dly, ADA11_dly, 
         ADA10_dly, ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, 
         ADA0_dly, WEA_dly, CEA_dly, OCEA_dly, RSTA_dly, CSA1_dly, CSA0_dly;

  DP8KC1164 \mcuResourcesInst/RAMInst/RAM_0_1_6_DP8KC ( .CEA(CEA_dly), 
    .OCEA(OCEA_dly), .CLKA(CLKA_dly), .WEA(WEA_dly), .CSA0(CSA0_dly), 
    .CSA1(CSA1_dly), .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), 
    .CLKB(GNDI), .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), 
    .RSTB(GNDI), .DIA0(DIA0_dly), .DIA1(DIA1_dly), .DIA2(DIA2_dly), 
    .DIA3(DIA3_dly), .DIA4(DIA4_dly), .DIA5(DIA5_dly), .DIA6(DIA6_dly), 
    .DIA7(DIA7_dly), .DIA8(GNDI), .ADA0(ADA0_dly), .ADA1(GNDI), .ADA2(GNDI), 
    .ADA3(GNDI), .ADA4(ADA4_dly), .ADA5(ADA5_dly), .ADA6(ADA6_dly), 
    .ADA7(ADA7_dly), .ADA8(ADA8_dly), .ADA9(ADA9_dly), .ADA10(ADA10_dly), 
    .ADA11(ADA11_dly), .ADA12(ADA12_dly), .DIB0(GNDI), .DIB1(GNDI), 
    .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), .DIB5(GNDI), .DIB6(GNDI), 
    .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), .ADB1(GNDI), .ADB2(GNDI), 
    .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), .ADB6(GNDI), .ADB7(GNDI), 
    .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), .ADB11(GNDI), .ADB12(GNDI), 
    .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), 
    .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (RSTA => DOA7) = (0:0:0,0:0:0);
    (RSTA => DOA6) = (0:0:0,0:0:0);
    (RSTA => DOA5) = (0:0:0,0:0:0);
    (RSTA => DOA4) = (0:0:0,0:0:0);
    (RSTA => DOA3) = (0:0:0,0:0:0);
    (RSTA => DOA2) = (0:0:0,0:0:0);
    (RSTA => DOA1) = (0:0:0,0:0:0);
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA7) = (0:0:0,0:0:0);
    (CLKA => DOA6) = (0:0:0,0:0:0);
    (CLKA => DOA5) = (0:0:0,0:0:0);
    (CLKA => DOA4) = (0:0:0,0:0:0);
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA0, 0:0:0, 0:0:0,,,, CLKA_dly, ADA0_dly);
    $setuphold (posedge CLKA, WEA, 0:0:0, 0:0:0,,,, CLKA_dly, WEA_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA1, 0:0:0, 0:0:0,,,, CLKA_dly, CSA1_dly);
    $setuphold (posedge CLKA, CSA0, 0:0:0, 0:0:0,,,, CLKA_dly, CSA0_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
  endspecify

endmodule

module DP8KC1164 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 9;
  defparam INST10.DATA_WIDTH_B = 9;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "WRITETHROUGH";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_RAMInst_RAM_1_0_5 ( input DIA7, DIA6, DIA5, DIA4, DIA3, 
    DIA2, DIA1, DIA0, ADA12, ADA11, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, 
    ADA0, output DOA7, DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input WEA, 
    CEA, OCEA, RSTA, CLKA, CSA1, CSA0 );
  wire   GNDI, VCCI, DIA7_dly, CLKA_dly, DIA6_dly, DIA5_dly, DIA4_dly, 
         DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA12_dly, ADA11_dly, 
         ADA10_dly, ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, 
         ADA0_dly, WEA_dly, CEA_dly, OCEA_dly, RSTA_dly, CSA1_dly, CSA0_dly;

  DP8KC1165 \mcuResourcesInst/RAMInst/RAM_1_0_5_DP8KC ( .CEA(CEA_dly), 
    .OCEA(OCEA_dly), .CLKA(CLKA_dly), .WEA(WEA_dly), .CSA0(CSA0_dly), 
    .CSA1(CSA1_dly), .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), 
    .CLKB(GNDI), .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), 
    .RSTB(GNDI), .DIA0(DIA0_dly), .DIA1(DIA1_dly), .DIA2(DIA2_dly), 
    .DIA3(DIA3_dly), .DIA4(DIA4_dly), .DIA5(DIA5_dly), .DIA6(DIA6_dly), 
    .DIA7(DIA7_dly), .DIA8(GNDI), .ADA0(ADA0_dly), .ADA1(GNDI), .ADA2(GNDI), 
    .ADA3(GNDI), .ADA4(ADA4_dly), .ADA5(ADA5_dly), .ADA6(ADA6_dly), 
    .ADA7(ADA7_dly), .ADA8(ADA8_dly), .ADA9(ADA9_dly), .ADA10(ADA10_dly), 
    .ADA11(ADA11_dly), .ADA12(ADA12_dly), .DIB0(GNDI), .DIB1(GNDI), 
    .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), .DIB5(GNDI), .DIB6(GNDI), 
    .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), .ADB1(GNDI), .ADB2(GNDI), 
    .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), .ADB6(GNDI), .ADB7(GNDI), 
    .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), .ADB11(GNDI), .ADB12(GNDI), 
    .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), 
    .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (RSTA => DOA7) = (0:0:0,0:0:0);
    (RSTA => DOA6) = (0:0:0,0:0:0);
    (RSTA => DOA5) = (0:0:0,0:0:0);
    (RSTA => DOA4) = (0:0:0,0:0:0);
    (RSTA => DOA3) = (0:0:0,0:0:0);
    (RSTA => DOA2) = (0:0:0,0:0:0);
    (RSTA => DOA1) = (0:0:0,0:0:0);
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA7) = (0:0:0,0:0:0);
    (CLKA => DOA6) = (0:0:0,0:0:0);
    (CLKA => DOA5) = (0:0:0,0:0:0);
    (CLKA => DOA4) = (0:0:0,0:0:0);
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA0, 0:0:0, 0:0:0,,,, CLKA_dly, ADA0_dly);
    $setuphold (posedge CLKA, WEA, 0:0:0, 0:0:0,,,, CLKA_dly, WEA_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA1, 0:0:0, 0:0:0,,,, CLKA_dly, CSA1_dly);
    $setuphold (posedge CLKA, CSA0, 0:0:0, 0:0:0,,,, CLKA_dly, CSA0_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
  endspecify

endmodule

module DP8KC1165 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b001";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 9;
  defparam INST10.DATA_WIDTH_B = 9;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "WRITETHROUGH";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_RAMInst_RAM_1_1_4 ( input DIA7, DIA6, DIA5, DIA4, DIA3, 
    DIA2, DIA1, DIA0, ADA12, ADA11, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, 
    ADA0, output DOA7, DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input WEA, 
    CEA, OCEA, RSTA, CLKA, CSA1, CSA0 );
  wire   GNDI, VCCI, DIA7_dly, CLKA_dly, DIA6_dly, DIA5_dly, DIA4_dly, 
         DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA12_dly, ADA11_dly, 
         ADA10_dly, ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, 
         ADA0_dly, WEA_dly, CEA_dly, OCEA_dly, RSTA_dly, CSA1_dly, CSA0_dly;

  DP8KC1166 \mcuResourcesInst/RAMInst/RAM_1_1_4_DP8KC ( .CEA(CEA_dly), 
    .OCEA(OCEA_dly), .CLKA(CLKA_dly), .WEA(WEA_dly), .CSA0(CSA0_dly), 
    .CSA1(CSA1_dly), .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), 
    .CLKB(GNDI), .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), 
    .RSTB(GNDI), .DIA0(DIA0_dly), .DIA1(DIA1_dly), .DIA2(DIA2_dly), 
    .DIA3(DIA3_dly), .DIA4(DIA4_dly), .DIA5(DIA5_dly), .DIA6(DIA6_dly), 
    .DIA7(DIA7_dly), .DIA8(GNDI), .ADA0(ADA0_dly), .ADA1(GNDI), .ADA2(GNDI), 
    .ADA3(GNDI), .ADA4(ADA4_dly), .ADA5(ADA5_dly), .ADA6(ADA6_dly), 
    .ADA7(ADA7_dly), .ADA8(ADA8_dly), .ADA9(ADA9_dly), .ADA10(ADA10_dly), 
    .ADA11(ADA11_dly), .ADA12(ADA12_dly), .DIB0(GNDI), .DIB1(GNDI), 
    .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), .DIB5(GNDI), .DIB6(GNDI), 
    .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), .ADB1(GNDI), .ADB2(GNDI), 
    .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), .ADB6(GNDI), .ADB7(GNDI), 
    .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), .ADB11(GNDI), .ADB12(GNDI), 
    .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), 
    .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (RSTA => DOA7) = (0:0:0,0:0:0);
    (RSTA => DOA6) = (0:0:0,0:0:0);
    (RSTA => DOA5) = (0:0:0,0:0:0);
    (RSTA => DOA4) = (0:0:0,0:0:0);
    (RSTA => DOA3) = (0:0:0,0:0:0);
    (RSTA => DOA2) = (0:0:0,0:0:0);
    (RSTA => DOA1) = (0:0:0,0:0:0);
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA7) = (0:0:0,0:0:0);
    (CLKA => DOA6) = (0:0:0,0:0:0);
    (CLKA => DOA5) = (0:0:0,0:0:0);
    (CLKA => DOA4) = (0:0:0,0:0:0);
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA0, 0:0:0, 0:0:0,,,, CLKA_dly, ADA0_dly);
    $setuphold (posedge CLKA, WEA, 0:0:0, 0:0:0,,,, CLKA_dly, WEA_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA1, 0:0:0, 0:0:0,,,, CLKA_dly, CSA1_dly);
    $setuphold (posedge CLKA, CSA0, 0:0:0, 0:0:0,,,, CLKA_dly, CSA0_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
  endspecify

endmodule

module DP8KC1166 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b001";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 9;
  defparam INST10.DATA_WIDTH_B = 9;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "WRITETHROUGH";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_RAMInst_RAM_2_0_3 ( input DIA7, DIA6, DIA5, DIA4, DIA3, 
    DIA2, DIA1, DIA0, ADA12, ADA11, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, 
    ADA0, output DOA7, DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input WEA, 
    CEA, OCEA, RSTA, CLKA, CSA1, CSA0 );
  wire   GNDI, VCCI, DIA7_dly, CLKA_dly, DIA6_dly, DIA5_dly, DIA4_dly, 
         DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA12_dly, ADA11_dly, 
         ADA10_dly, ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, 
         ADA0_dly, WEA_dly, CEA_dly, OCEA_dly, RSTA_dly, CSA1_dly, CSA0_dly;

  DP8KC1167 \mcuResourcesInst/RAMInst/RAM_2_0_3_DP8KC ( .CEA(CEA_dly), 
    .OCEA(OCEA_dly), .CLKA(CLKA_dly), .WEA(WEA_dly), .CSA0(CSA0_dly), 
    .CSA1(CSA1_dly), .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), 
    .CLKB(GNDI), .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), 
    .RSTB(GNDI), .DIA0(DIA0_dly), .DIA1(DIA1_dly), .DIA2(DIA2_dly), 
    .DIA3(DIA3_dly), .DIA4(DIA4_dly), .DIA5(DIA5_dly), .DIA6(DIA6_dly), 
    .DIA7(DIA7_dly), .DIA8(GNDI), .ADA0(ADA0_dly), .ADA1(GNDI), .ADA2(GNDI), 
    .ADA3(GNDI), .ADA4(ADA4_dly), .ADA5(ADA5_dly), .ADA6(ADA6_dly), 
    .ADA7(ADA7_dly), .ADA8(ADA8_dly), .ADA9(ADA9_dly), .ADA10(ADA10_dly), 
    .ADA11(ADA11_dly), .ADA12(ADA12_dly), .DIB0(GNDI), .DIB1(GNDI), 
    .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), .DIB5(GNDI), .DIB6(GNDI), 
    .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), .ADB1(GNDI), .ADB2(GNDI), 
    .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), .ADB6(GNDI), .ADB7(GNDI), 
    .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), .ADB11(GNDI), .ADB12(GNDI), 
    .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), 
    .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (RSTA => DOA7) = (0:0:0,0:0:0);
    (RSTA => DOA6) = (0:0:0,0:0:0);
    (RSTA => DOA5) = (0:0:0,0:0:0);
    (RSTA => DOA4) = (0:0:0,0:0:0);
    (RSTA => DOA3) = (0:0:0,0:0:0);
    (RSTA => DOA2) = (0:0:0,0:0:0);
    (RSTA => DOA1) = (0:0:0,0:0:0);
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA7) = (0:0:0,0:0:0);
    (CLKA => DOA6) = (0:0:0,0:0:0);
    (CLKA => DOA5) = (0:0:0,0:0:0);
    (CLKA => DOA4) = (0:0:0,0:0:0);
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA0, 0:0:0, 0:0:0,,,, CLKA_dly, ADA0_dly);
    $setuphold (posedge CLKA, WEA, 0:0:0, 0:0:0,,,, CLKA_dly, WEA_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA1, 0:0:0, 0:0:0,,,, CLKA_dly, CSA1_dly);
    $setuphold (posedge CLKA, CSA0, 0:0:0, 0:0:0,,,, CLKA_dly, CSA0_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
  endspecify

endmodule

module DP8KC1167 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b010";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 9;
  defparam INST10.DATA_WIDTH_B = 9;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "WRITETHROUGH";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_RAMInst_RAM_2_1_2 ( input DIA7, DIA6, DIA5, DIA4, DIA3, 
    DIA2, DIA1, DIA0, ADA12, ADA11, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, 
    ADA0, output DOA7, DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input WEA, 
    CEA, OCEA, RSTA, CLKA, CSA1, CSA0 );
  wire   GNDI, VCCI, DIA7_dly, CLKA_dly, DIA6_dly, DIA5_dly, DIA4_dly, 
         DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA12_dly, ADA11_dly, 
         ADA10_dly, ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, 
         ADA0_dly, WEA_dly, CEA_dly, OCEA_dly, RSTA_dly, CSA1_dly, CSA0_dly;

  DP8KC1168 \mcuResourcesInst/RAMInst/RAM_2_1_2_DP8KC ( .CEA(CEA_dly), 
    .OCEA(OCEA_dly), .CLKA(CLKA_dly), .WEA(WEA_dly), .CSA0(CSA0_dly), 
    .CSA1(CSA1_dly), .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), 
    .CLKB(GNDI), .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), 
    .RSTB(GNDI), .DIA0(DIA0_dly), .DIA1(DIA1_dly), .DIA2(DIA2_dly), 
    .DIA3(DIA3_dly), .DIA4(DIA4_dly), .DIA5(DIA5_dly), .DIA6(DIA6_dly), 
    .DIA7(DIA7_dly), .DIA8(GNDI), .ADA0(ADA0_dly), .ADA1(GNDI), .ADA2(GNDI), 
    .ADA3(GNDI), .ADA4(ADA4_dly), .ADA5(ADA5_dly), .ADA6(ADA6_dly), 
    .ADA7(ADA7_dly), .ADA8(ADA8_dly), .ADA9(ADA9_dly), .ADA10(ADA10_dly), 
    .ADA11(ADA11_dly), .ADA12(ADA12_dly), .DIB0(GNDI), .DIB1(GNDI), 
    .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), .DIB5(GNDI), .DIB6(GNDI), 
    .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), .ADB1(GNDI), .ADB2(GNDI), 
    .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), .ADB6(GNDI), .ADB7(GNDI), 
    .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), .ADB11(GNDI), .ADB12(GNDI), 
    .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), 
    .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (RSTA => DOA7) = (0:0:0,0:0:0);
    (RSTA => DOA6) = (0:0:0,0:0:0);
    (RSTA => DOA5) = (0:0:0,0:0:0);
    (RSTA => DOA4) = (0:0:0,0:0:0);
    (RSTA => DOA3) = (0:0:0,0:0:0);
    (RSTA => DOA2) = (0:0:0,0:0:0);
    (RSTA => DOA1) = (0:0:0,0:0:0);
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA7) = (0:0:0,0:0:0);
    (CLKA => DOA6) = (0:0:0,0:0:0);
    (CLKA => DOA5) = (0:0:0,0:0:0);
    (CLKA => DOA4) = (0:0:0,0:0:0);
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA0, 0:0:0, 0:0:0,,,, CLKA_dly, ADA0_dly);
    $setuphold (posedge CLKA, WEA, 0:0:0, 0:0:0,,,, CLKA_dly, WEA_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA1, 0:0:0, 0:0:0,,,, CLKA_dly, CSA1_dly);
    $setuphold (posedge CLKA, CSA0, 0:0:0, 0:0:0,,,, CLKA_dly, CSA0_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
  endspecify

endmodule

module DP8KC1168 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b010";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 9;
  defparam INST10.DATA_WIDTH_B = 9;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "WRITETHROUGH";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_RAMInst_RAM_3_0_1 ( input DIA7, DIA6, DIA5, DIA4, DIA3, 
    DIA2, DIA1, DIA0, ADA12, ADA11, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, 
    ADA0, output DOA7, DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input WEA, 
    CEA, OCEA, RSTA, CLKA, CSA1, CSA0 );
  wire   GNDI, VCCI, DIA7_dly, CLKA_dly, DIA6_dly, DIA5_dly, DIA4_dly, 
         DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA12_dly, ADA11_dly, 
         ADA10_dly, ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, 
         ADA0_dly, WEA_dly, CEA_dly, OCEA_dly, RSTA_dly, CSA1_dly, CSA0_dly;

  DP8KC1169 \mcuResourcesInst/RAMInst/RAM_3_0_1_DP8KC ( .CEA(CEA_dly), 
    .OCEA(OCEA_dly), .CLKA(CLKA_dly), .WEA(WEA_dly), .CSA0(CSA0_dly), 
    .CSA1(CSA1_dly), .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), 
    .CLKB(GNDI), .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), 
    .RSTB(GNDI), .DIA0(DIA0_dly), .DIA1(DIA1_dly), .DIA2(DIA2_dly), 
    .DIA3(DIA3_dly), .DIA4(DIA4_dly), .DIA5(DIA5_dly), .DIA6(DIA6_dly), 
    .DIA7(DIA7_dly), .DIA8(GNDI), .ADA0(ADA0_dly), .ADA1(GNDI), .ADA2(GNDI), 
    .ADA3(GNDI), .ADA4(ADA4_dly), .ADA5(ADA5_dly), .ADA6(ADA6_dly), 
    .ADA7(ADA7_dly), .ADA8(ADA8_dly), .ADA9(ADA9_dly), .ADA10(ADA10_dly), 
    .ADA11(ADA11_dly), .ADA12(ADA12_dly), .DIB0(GNDI), .DIB1(GNDI), 
    .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), .DIB5(GNDI), .DIB6(GNDI), 
    .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), .ADB1(GNDI), .ADB2(GNDI), 
    .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), .ADB6(GNDI), .ADB7(GNDI), 
    .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), .ADB11(GNDI), .ADB12(GNDI), 
    .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), 
    .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (RSTA => DOA7) = (0:0:0,0:0:0);
    (RSTA => DOA6) = (0:0:0,0:0:0);
    (RSTA => DOA5) = (0:0:0,0:0:0);
    (RSTA => DOA4) = (0:0:0,0:0:0);
    (RSTA => DOA3) = (0:0:0,0:0:0);
    (RSTA => DOA2) = (0:0:0,0:0:0);
    (RSTA => DOA1) = (0:0:0,0:0:0);
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA7) = (0:0:0,0:0:0);
    (CLKA => DOA6) = (0:0:0,0:0:0);
    (CLKA => DOA5) = (0:0:0,0:0:0);
    (CLKA => DOA4) = (0:0:0,0:0:0);
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA0, 0:0:0, 0:0:0,,,, CLKA_dly, ADA0_dly);
    $setuphold (posedge CLKA, WEA, 0:0:0, 0:0:0,,,, CLKA_dly, WEA_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA1, 0:0:0, 0:0:0,,,, CLKA_dly, CSA1_dly);
    $setuphold (posedge CLKA, CSA0, 0:0:0, 0:0:0,,,, CLKA_dly, CSA0_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
  endspecify

endmodule

module DP8KC1169 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b011";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 9;
  defparam INST10.DATA_WIDTH_B = 9;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "WRITETHROUGH";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_RAMInst_RAM_3_1_0 ( input DIA7, DIA6, DIA5, DIA4, DIA3, 
    DIA2, DIA1, DIA0, ADA12, ADA11, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, 
    ADA0, output DOA7, DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input WEA, 
    CEA, OCEA, RSTA, CLKA, CSA1, CSA0 );
  wire   GNDI, VCCI, DIA7_dly, CLKA_dly, DIA6_dly, DIA5_dly, DIA4_dly, 
         DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA12_dly, ADA11_dly, 
         ADA10_dly, ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, 
         ADA0_dly, WEA_dly, CEA_dly, OCEA_dly, RSTA_dly, CSA1_dly, CSA0_dly;

  DP8KC1170 \mcuResourcesInst/RAMInst/RAM_3_1_0_DP8KC ( .CEA(CEA_dly), 
    .OCEA(OCEA_dly), .CLKA(CLKA_dly), .WEA(WEA_dly), .CSA0(CSA0_dly), 
    .CSA1(CSA1_dly), .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), 
    .CLKB(GNDI), .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), 
    .RSTB(GNDI), .DIA0(DIA0_dly), .DIA1(DIA1_dly), .DIA2(DIA2_dly), 
    .DIA3(DIA3_dly), .DIA4(DIA4_dly), .DIA5(DIA5_dly), .DIA6(DIA6_dly), 
    .DIA7(DIA7_dly), .DIA8(GNDI), .ADA0(ADA0_dly), .ADA1(GNDI), .ADA2(GNDI), 
    .ADA3(GNDI), .ADA4(ADA4_dly), .ADA5(ADA5_dly), .ADA6(ADA6_dly), 
    .ADA7(ADA7_dly), .ADA8(ADA8_dly), .ADA9(ADA9_dly), .ADA10(ADA10_dly), 
    .ADA11(ADA11_dly), .ADA12(ADA12_dly), .DIB0(GNDI), .DIB1(GNDI), 
    .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), .DIB5(GNDI), .DIB6(GNDI), 
    .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), .ADB1(GNDI), .ADB2(GNDI), 
    .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), .ADB6(GNDI), .ADB7(GNDI), 
    .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), .ADB11(GNDI), .ADB12(GNDI), 
    .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), 
    .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (RSTA => DOA7) = (0:0:0,0:0:0);
    (RSTA => DOA6) = (0:0:0,0:0:0);
    (RSTA => DOA5) = (0:0:0,0:0:0);
    (RSTA => DOA4) = (0:0:0,0:0:0);
    (RSTA => DOA3) = (0:0:0,0:0:0);
    (RSTA => DOA2) = (0:0:0,0:0:0);
    (RSTA => DOA1) = (0:0:0,0:0:0);
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA7) = (0:0:0,0:0:0);
    (CLKA => DOA6) = (0:0:0,0:0:0);
    (CLKA => DOA5) = (0:0:0,0:0:0);
    (CLKA => DOA4) = (0:0:0,0:0:0);
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA0, 0:0:0, 0:0:0,,,, CLKA_dly, ADA0_dly);
    $setuphold (posedge CLKA, WEA, 0:0:0, 0:0:0,,,, CLKA_dly, WEA_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKA, CSA1, 0:0:0, 0:0:0,,,, CLKA_dly, CSA1_dly);
    $setuphold (posedge CLKA, CSA0, 0:0:0, 0:0:0,,,, CLKA_dly, CSA0_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
  endspecify

endmodule

module DP8KC1170 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b011";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 9;
  defparam INST10.DATA_WIDTH_B = 9;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "WRITETHROUGH";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_15_0 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1171 \mcuResourcesInst/ROMInst/rom_0_15_0_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1171 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x000450AA100A84508240080440A2410AA500A8140A05102215082010A21002005088440001000211";

    defparam INST10.INITVAL_01 = "0x0AA1502A55028540AA550A24502055080410A0050A0540A01400A51082510A0450A85000A1108A15";

    defparam INST10.INITVAL_02 = "0x0A24400A150281102A150AA110A25408051088510804502805028450284508A140A85002A140AA14";

    defparam INST10.INITVAL_03 = "0x02010022500021000000000000000000004000000000000000000000081502851082010880502014";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000005";

    defparam INST10.INITVAL_05 = "0x00000020000084400000022000000102200000110200000844000040880000211000010001000000";

    defparam INST10.INITVAL_06 = "0x02200000400000008800000040884000000020000000000001000000080000010000010000000040";

    defparam INST10.INITVAL_07 = "0x000440A00000001022140A0000000400000000000084000000022000000408000002100000408000";

    defparam INST10.INITVAL_08 = "0x000110A00408A40028140001400004000110AA400084000004000000000102240000000084500000";

    defparam INST10.INITVAL_09 = "0x000440000400000000110A200020040A8400004508800008000000008A450AA05000000225000215";

    defparam INST10.INITVAL_0A = "0x00044028500001102000022010001102001020000884000044000110200002210000040800000840";

    defparam INST10.INITVAL_0B = "0x0285502845022510AA4502A150AA400005402A500001500A14000040825000004082400001100A00";

    defparam INST10.INITVAL_0C = "0x00044080040880008840002100000008800000000A81508A45000010A05508A45000010205408A55";

    defparam INST10.INITVAL_0D = "0x020440A80008845080040800408004088540004408A4000844000110225000211000110200008854";

    defparam INST10.INITVAL_0E = "0x08004088540021102A0008845080110221102845000010221102850000110221108004088440A001";

    defparam INST10.INITVAL_0F = "0x00210000110001100000088150800408000002100000008800008450000408800088400084400044";

    defparam INST10.INITVAL_10 = "0x080000020000200002100200000840008400084000250000040AA500A800002150A8050000102000";

    defparam INST10.INITVAL_11 = "0x00844002110004408011020110201102011020110201102011020110201000004088010000000000";

    defparam INST10.INITVAL_12 = "0x022000220002255082510AA00000110A814080000084002201000440000408801022000884002210";

    defparam INST10.INITVAL_13 = "0x00000000440AA010000408A500200008855002000084000001020000084000011000040000008800";

    defparam INST10.INITVAL_14 = "0x00044000000880000040000000800000001000000000100004000000000000000000040000000000";

    defparam INST10.INITVAL_15 = "0x00045080000020000000000000000000000000000000000000000000084402000000100000400000";

    defparam INST10.INITVAL_16 = "0x08A0002250000000220000000088000825500A000AA540A2410AA140285408A0000A000085508040";

    defparam INST10.INITVAL_17 = "0x00240002150085400800000040881100200000040881000040020000224402800020000004400000";

    defparam INST10.INITVAL_18 = "0x02000008000000100000022000085108004080000084408804000010221000001020010200000851";

    defparam INST10.INITVAL_19 = "0x0A2550A80000254000010200502A0000200000000000400000000000200000000002110A01108001";

    defparam INST10.INITVAL_1A = "0x00000000010000000800000100000100000000000000002000000000021000840008440A0040AA45";

    defparam INST10.INITVAL_1B = "0x08A550A2400000408800000100000000000000000000000000000000080000000000000000002000";

    defparam INST10.INITVAL_1C = "0x0A2150AA110A841080540AA100000100000000000000000000080000000000215000040000000000";

    defparam INST10.INITVAL_1D = "0x0000000000000040001000000000100000000004088550AA050A21508A45080000A0000025102845";

    defparam INST10.INITVAL_1E = "0x00044000010000000000000000000000000008000000400000008000000100000088540801000000";

    defparam INST10.INITVAL_1F = "0x00000000000000002000000040800002200000000000002000000010000000044028100004000040";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_0_15 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1172 \mcuResourcesInst/ROMInst/rom_0_0_15_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1172 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x0A84000210000400800000854000400001002800028100004002A000280002000020000020402000";

    defparam INST10.INITVAL_01 = "0x00A0000204008040080008000020010000000000020040000400010020040A000020040020000001";

    defparam INST10.INITVAL_02 = "0x000000000500005088040280008040000000005000005000050000500805082040000102A0000200";

    defparam INST10.INITVAL_03 = "0x00010000000000008010008010004000000000040000000800080000084000811080400020000000";

    defparam INST10.INITVAL_04 = "0x0005100800020150A0510204402A15008410085402A000820408A550220402251082050804008810";

    defparam INST10.INITVAL_05 = "0x000050A0010A8110A0000A04002A550080100240080010201000850020010A804000540000000010";

    defparam INST10.INITVAL_06 = "0x0804000A400001000200000100200000001020000000000040000040880000810000400000000240";

    defparam INST10.INITVAL_07 = "0x0A0410024000A15008000000102A4000000002150A01000855000400080402000022040025002004";

    defparam INST10.INITVAL_08 = "0x00000000000001000001000040020000A10002100001000010000000001000805000150A81002800";

    defparam INST10.INITVAL_09 = "0x00801000100000000210008400A800002100000002A0000800000410001008840008150A00402800";

    defparam INST10.INITVAL_0A = "0x00001088150A0000025000050020000AA05002410821008201020100000000000002440000000810";

    defparam INST10.INITVAL_0B = "0x0000100801000000A8000000508015080010A8550A0000A2050A800028150020402A15080100A855";

    defparam INST10.INITVAL_0C = "0x08241028040224108045008050AA04002550A80408241002400A80100A05080400A80100A0400054";

    defparam INST10.INITVAL_0D = "0x0081400240002400A804028000280402805082010805402811000400A004002050A04008A0108201";

    defparam INST10.INITVAL_0E = "0x0A800020110000400A41002010200008050000000A8010080500005080100A0400A8100281002A04";

    defparam INST10.INITVAL_0F = "0x0280500010082000AA05002400A04002A54020050AA0008250008110805402A01082500281508001";

    defparam INST10.INITVAL_10 = "0x0000002A0000A0000A0000A0400810028100081000A010824400254002500AA00080000A80400A54";

    defparam INST10.INITVAL_11 = "0x0201100004080010A0400A050080100A050080100A050080100A0500801000244020000000000001";

    defparam INST10.INITVAL_12 = "0x02010000400000000A50020400800000A01002550081000041000410000402A0000A400021000054";

    defparam INST10.INITVAL_13 = "0x00000022410284408014022440881108214088410281008010008000080400210080000001108000";

    defparam INST10.INITVAL_14 = "0x00041000110820002240000010800000000000000001400010000040805000000020000000100000";

    defparam INST10.INITVAL_15 = "0x0AA400200002A100000002000000000000000000080000000000001020140284108A100005400005";

    defparam INST10.INITVAL_16 = "0x0804000004020000804000004082000801508800008140004000204000000000000040088040A010";

    defparam INST10.INITVAL_17 = "0x02054002000280000204020500024400001080140224100050080010800000204000000024100004";

    defparam INST10.INITVAL_18 = "0x00050088000001500000000010080002004008100800102000008140084100004000510000100800";

    defparam INST10.INITVAL_19 = "0x020440020008001000400000000A0002200000000005400000000010A000000000200000A0002800";

    defparam INST10.INITVAL_1A = "0x00000000010000008800000100001000000000000000100000000010A20400010028000000000040";

    defparam INST10.INITVAL_1B = "0x08014000500804402A0402840000000000000000000000000000045080000000000000000000A000";

    defparam INST10.INITVAL_1C = "0x008040205000240080140281108255000050A0550000000011080000001002200000500001000050";

    defparam INST10.INITVAL_1D = "0x000000000000010000100000000000020000000402A0508204080400A24102250000000A80500241";

    defparam INST10.INITVAL_1E = "0x00041000550081002845000000000000001000000025400000000000000500A01082140001000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000800002040200500010000000800008000002510000008041082040220100040";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_1_14 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1173 \mcuResourcesInst/ROMInst/rom_0_1_14_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1173 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x002500A0540225002A1408245000000000100244022010004508254002010AA50008010A00100000";

    defparam INST10.INITVAL_01 = "0x02A44082410821100040020110A800028140000000A0100A400000500A0000A14022000824000044";

    defparam INST10.INITVAL_02 = "0x008000200000000020400000000040080140A0040A0000880008200088000004000A000AA4002240";

    defparam INST10.INITVAL_03 = "0x02A500A81500A40002000020000001020000004100800080000204502A0400210008000800008804";

    defparam INST10.INITVAL_04 = "0x0AA54088110A2040A8450225500A00008100AA410A05000A0400014000410AA0000A150285408801";

    defparam INST10.INITVAL_05 = "0x0821108A400A200022110A8010224508014002440025102A00000110000000A4002244020050A044";

    defparam INST10.INITVAL_06 = "0x0A811082150020502001008510085400204008450A854088100A20400A4400055082450A85400011";

    defparam INST10.INITVAL_07 = "0x00A50000040200008041000140005508054080000AA00020010281100241008100A0410225500014";

    defparam INST10.INITVAL_08 = "0x02014002010220408A10000400221508254002050AA000005102A100285508000022400020000040";

    defparam INST10.INITVAL_09 = "0x02A10080010000408A5400000022550200002A51000010A205080150A20000810002010280100040";

    defparam INST10.INITVAL_0A = "0x0081002210000140200002801000140001408014020100225000004020150A810020450000100A00";

    defparam INST10.INITVAL_0B = "0x0020408A01008440080000040080000204000A4000214000400024500010000450024002A1400A00";

    defparam INST10.INITVAL_0C = "0x02A1000251000100200002A40000100200000204000100200000201080000A010002510800100004";

    defparam INST10.INITVAL_0D = "0x08200000140A0100024000254002510020002850020010020000A140080100A4000254000100A000";

    defparam INST10.INITVAL_0E = "0x002050020402A40080100A010000140080000A10002050804000A000285400800002050020000011";

    defparam INST10.INITVAL_0F = "0x008400024402A04000110201000041000010A040000110A00100A0002A01000140A00100A0002A50";

    defparam INST10.INITVAL_10 = "0x0A21400A45000450284102041082050A20502205020400205102004000000284002A100020408001";

    defparam INST10.INITVAL_11 = "0x00A00022410225000014020440204400004000040204402044000040020400251002440824508011";

    defparam INST10.INITVAL_12 = "0x088400A8100A8540A80000A14082440800002211022010A815020500A01500015080110A0410A801";

    defparam INST10.INITVAL_13 = "0x0A21408A100204002A51000040024502010080100A200022400804000A0102814022450A80002201";

    defparam INST10.INITVAL_14 = "0x02850002050A04100A51022410204000A140A250002050805502A100A8000800500A510A2500A805";

    defparam INST10.INITVAL_15 = "0x000500021508A440801500A15028040AA410A05402A0508A5508A0102200008140A0140021502A15";

    defparam INST10.INITVAL_16 = "0x022100A840008140280102A140201002200002100000002804000400800000040080150820002000";

    defparam INST10.INITVAL_17 = "0x080010AA4008205088410020100810008100220100814080000A84108851080110A8140801002215";

    defparam INST10.INITVAL_18 = "0x08A000AA15008150A8510285402214002550020000204080100821008214088010825408A100A214";

    defparam INST10.INITVAL_19 = "0x028400005008A400A04508A51080510284008A11080410021508A01088040A214020450204400244";

    defparam INST10.INITVAL_1A = "0x00A510A200082400AA15080540A0000A0550A0550A84008A1402A14028410AA0102A040204102810";

    defparam INST10.INITVAL_1B = "0x020010221002051002010824508A440881002A550885408A100024408A40082500AA510A20408815";

    defparam INST10.INITVAL_1C = "0x0800500800080440A00500250028050881000A0002A150A815028500085102A40082110825508841";

    defparam INST10.INITVAL_1D = "0x0884000A040A8150A045000140225408A140A81100000000110280000250020000204008A4100000";

    defparam INST10.INITVAL_1E = "0x080100020408251028540200502A1500A440AA14022150084002A050201408801020110AA540A855";

    defparam INST10.INITVAL_1F = "0x0000000000000000820102051008040280408A10008040280100A150804108A50002010825008810";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_2_13 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1174 \mcuResourcesInst/ROMInst/rom_0_2_13_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1174 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x0AA54002540225002A1400A51008140020100001002000005002A51000010AA44080010A24502844";

    defparam INST10.INITVAL_01 = "0x00A40082400800100044000000AA000A8150020100A0100A40002050280400810002040A20002000";

    defparam INST10.INITVAL_02 = "0x0001100200008440A000000040084000004000040820008800000000880000200002010AA4100241";

    defparam INST10.INITVAL_03 = "0x082440005500000000000020000011020010004000000002040204000A4000210008440201100044";

    defparam INST10.INITVAL_04 = "0x00015082040A8500285502054020510881402051028440A2140A8450A05008245028540A85408A10";

    defparam INST10.INITVAL_05 = "0x0080502045088100A0140A04008240008110A210080140001000A40020040A00402A0002A1000014";

    defparam INST10.INITVAL_06 = "0x020400A8410A0410025002A40022550A2050A2500881400204020110A810028510A255020000A844";

    defparam INST10.INITVAL_07 = "0x088400000000850008400021108A4400A4100A450A81400A150A04000210028010080502A0402014";

    defparam INST10.INITVAL_08 = "0x00850088140201400A11080040284502010080100000008804082510020400000000510A00000004";

    defparam INST10.INITVAL_09 = "0x0004108A540A21100040088400A8100221002A00022000A04100A110001000000088100A00408A00";

    defparam INST10.INITVAL_0A = "0x02A41082050AA4000255080500284008A1000254002100A80102A00000010200000A140000500010";

    defparam INST10.INITVAL_0B = "0x0800008001080440081008040080150AA01080050A8400A0410A8100281502A54028150A8400A055";

    defparam INST10.INITVAL_0C = "0x0A201028400225100005020050AA15082550A80508250020100A81408A400A0100A85400A4000004";

    defparam INST10.INITVAL_0D = "0x008110025100210028110281002850022010A001020140A01100210088040A8040AA4008A1400241";

    defparam INST10.INITVAL_0E = "0x02810022010200408054002100280008044002000A85400804080050A24008044028100201100A14";

    defparam INST10.INITVAL_0F = "0x0AA05020100AA500AA00082000A80402A540AA050AA0400254020100AA040220400215080110A201";

    defparam INST10.INITVAL_10 = "0x0820002010008100000100044020140001400015000410A044020000025402200000000A80100A54";

    defparam INST10.INITVAL_11 = "0x00015028040A80102A000AA400AA400AA400AA4008A0008A0008A000880000014020450001402000";

    defparam INST10.INITVAL_12 = "0x020550805500004020440005102A1008241028150881508054000010A80002210008540021400044";

    defparam INST10.INITVAL_13 = "0x0A04000841020400A854022040080508200080500A8100A0150084502005020400A0500004508210";

    defparam INST10.INITVAL_14 = "0x0AA0100A54082050A04400000002040A8400080500051000400AA040A85002841080100081400000";

    defparam INST10.INITVAL_15 = "0x0AA400221002A010081000201088150800002A1008250000000201402011008510A8010020008011";

    defparam INST10.INITVAL_16 = "0x080450004402015020410225100010002000001100001000000000008001000100005502A0402054";

    defparam INST10.INITVAL_17 = "0x028140200402200080010281400241002110AA540024008015080040200000211020100AA4102054";

    defparam INST10.INITVAL_18 = "0x00A54080000005400000080110880402840002140A80100A04088050004008000008010001508000";

    defparam INST10.INITVAL_19 = "0x02840002540A2410A8510024000054022050A0400085402A4100001020550000002A0100A4002811";

    defparam INST10.INITVAL_1A = "0x0A0000001102A0102054000410A0550280502805020410A041020040280400014000000A85400800";

    defparam INST10.INITVAL_1B = "0x00201000100AA540220402840020010005400001022100A00500A11088550A05508044008010A040";

    defparam INST10.INITVAL_1C = "0x08841000440824408211000010AA11008050AA54008040000108204020110A80400A4402A5000251";

    defparam INST10.INITVAL_1D = "0x002450A011000400020102A4000041000010000002200020400A0400A00002250000440024500210";

    defparam INST10.INITVAL_1E = "0x002010084102A540A85002A100880402001028440085408010020140081400805002000200108200";

    defparam INST10.INITVAL_1F = "0x0000000000000000000002A54020110A00408004000040A255008050084102241082040804400805";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_3_12 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1175 \mcuResourcesInst/ROMInst/rom_0_3_12_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1175 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x0AA5408255022500281400A50008040020000044000000000002A51000010AA44000050A20402840";

    defparam INST10.INITVAL_01 = "0x02204082000020000004028110A81002A150001000A4000A400000502A0400814002440824402040";

    defparam INST10.INITVAL_02 = "0x00811002000080408040002000A850002040A0040000008200000000820000240002010AA0102201";

    defparam INST10.INITVAL_03 = "0x08A5108055008440821000A010004002010028040205108A140824100A4008200000440021000844";

    defparam INST10.INITVAL_04 = "0x0AA5008000008040284502014000450881100005002400020408241000440000108A150280400A44";

    defparam INST10.INITVAL_05 = "0x0801108244082150A214008400024108805022140820008A100280502041022440200102A450A004";

    defparam INST10.INITVAL_06 = "0x0085008004020400A241028450225402A04000140204400845020010204400201000500004408801";

    defparam INST10.INITVAL_07 = "0x02811002540001508845008040085408054008040AA1000011028400A805020400024502A0102044";

    defparam INST10.INITVAL_08 = "0x00804088010001400A010800402010080040805402214088000280502201088050A20400A1002A40";

    defparam INST10.INITVAL_09 = "0x00011088100A01500044088500AA510221402A11022400A04100A110A0100004100A400884402044";

    defparam INST10.INITVAL_0A = "0x00811080050AA040025000850028040AA5408A40022510A0110AA04080410085002A01020000A210";

    defparam INST10.INITVAL_0B = "0x08A00000100800008A0108000080150A011080050A8040A0010AA0102A5500041028150A0040A055";

    defparam INST10.INITVAL_0C = "0x0A2110AA5102A4502255028450AA50022550AA0000250000000AA1008A40080000AA1008A4102045";

    defparam INST10.INITVAL_0D = "0x08A1100A41022000AA1102A1002A11020050A81100054022150204408004008450AA440AA4002201";

    defparam INST10.INITVAL_0E = "0x0AA51020010204400040022000280408844000100AA1408844080050A244088440AA010221102A50";

    defparam INST10.INITVAL_0F = "0x00845000040AA040AA40022000AA0102A540A8450AA5002250002100AA410225402210082150A211";

    defparam INST10.INITVAL_10 = "0x000000A805028050284400A040A2140A2140A215008010AA4100000082500A040000000AA4008A54";

    defparam INST10.INITVAL_11 = "0x08211000440A01102804088040880408804088040880408804088040880008211022400001100845";

    defparam INST10.INITVAL_12 = "0x00851088500080402040000450225400241028150AA1000855000110A80102250088440221100844";

    defparam INST10.INITVAL_13 = "0x0000000811008450A841020440AA440220408A40082100824408A000021402004082400A05002250";

    defparam INST10.INITVAL_14 = "0x0205108804022410000100001002010A004002040A00002800088040285002A00000400800002800";

    defparam INST10.INITVAL_15 = "0x00010028040080100055020100285100044022140021108015008000AA15028400A0500A00000A11";

    defparam INST10.INITVAL_16 = "0x0205108804020550885402A540A2410000008040002010204400044082100200000041082010A251";

    defparam INST10.INITVAL_17 = "0x0A8540084002200000400280100240080010A8010024000011080040081108245080000A01108250";

    defparam INST10.INITVAL_18 = "0x08A500A0140205402001008400A20002A1102810002010000000A00080400084408A0408A4002A04";

    defparam INST10.INITVAL_19 = "0x02855022500A8010AA5408A500885002804020100085002041088110804100A000284400A400AA44";

    defparam INST10.INITVAL_1A = "0x022450A24000840020010004000050020110205102A04082410081502A44082100020002A4100851";

    defparam INST10.INITVAL_1B = "0x0A001000500A05102A140881100A550085000054088540281408A400884508241028100A00008011";

    defparam INST10.INITVAL_1C = "0x08840000440024400200000010A8100005508854022100A840002440A01502A4408A000A81100055";

    defparam INST10.INITVAL_1D = "0x08055080110A800000010AA0000040082040A051022000220000844000100A004000000000500210";

    defparam INST10.INITVAL_1E = "0x0021100A0002204008510204408A5000A00000100201000804020410021000801022050A04002000";

    defparam INST10.INITVAL_1F = "0x000000000000000080010284102050008000800400844002540000402A00002110A2140200100201";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_4_11 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1176 \mcuResourcesInst/ROMInst/rom_0_4_11_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1176 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x02210020440221408A10022000000008200028410020008200088410000408804000100200100004";

    defparam INST10.INITVAL_01 = "0x00001008010001400A04000400880000200000000000402001022140080102A11082400204002240";

    defparam INST10.INITVAL_02 = "0x0205108200088400A00400244028000A00000000000000020008800000000A0400A2000880400005";

    defparam INST10.INITVAL_03 = "0x00205008110004400801002400280402054022000885108240028050220000000020100A04100201";

    defparam INST10.INITVAL_04 = "0x00040002150A210088000024100A000200008A400801400000020000A00102A00000400880000010";

    defparam INST10.INITVAL_05 = "0x0221008A44022150A00108801020400801008804002540820002241000040004000A400200000240";

    defparam INST10.INITVAL_06 = "0x00811020150020502005002010004400A04008140AA54080040A2140A21400245080040A21002010";

    defparam INST10.INITVAL_07 = "0x00210000540000008040000140000100A540880002200080000080102001000550A0410284100001";

    defparam INST10.INITVAL_08 = "0x0024400051020040821000240008410A24400000002050804100A0402804080010A0410020000A41";

    defparam INST10.INITVAL_09 = "0x00810080010A25500004080500200102014000110024100205088050221402A10020010080108044";

    defparam INST10.INITVAL_0A = "0x020100801408A040804000810082040085008A00022510081000A040A00400850080010205508200";

    defparam INST10.INITVAL_0B = "0x00810008010081002A51008040A211028000825408A00020050224100A140280100A1102A0402844";

    defparam INST10.INITVAL_0C = "0x020110A00102A1402004020410281402045020540004000210082100020008050080500824000015";

    defparam INST10.INITVAL_0D = "0x0820000841020000085002210020110000100010000110A20002A040000002040080040A85002004";

    defparam INST10.INITVAL_0E = "0x00A5102810028450080102241002440080008A10022140804000A010024400800020110020000214";

    defparam INST10.INITVAL_0F = "0x000400AA440280408801020150801102845000410A25502000082000000100055020000A20008A10";

    defparam INST10.INITVAL_10 = "0x028540A8410084000845022510820000201082000004400A01002010084108044082510225008850";

    defparam INST10.INITVAL_11 = "0x022000A8400221000244008440024400844002440084400244008440024500241000500AA4408011";

    defparam INST10.INITVAL_12 = "0x0880508800088400824402814008040880500200002150081000A100021100054080010200508800";

    defparam INST10.INITVAL_13 = "0x00244008100004100851000040204502000082000A20400010080450021502004020010A85402005";

    defparam INST10.INITVAL_14 = "0x0801008040020440881002A4502A5002A1008254020400880108A10080000AA4508A51088440A844";

    defparam INST10.INITVAL_15 = "0x02011002010284402A040885108A1102A5102A45022450A204028040A20008214020040220102814";

    defparam INST10.INITVAL_16 = "0x0200400841000400080102801022500021400250028100080402000002100000000A440220002801";

    defparam INST10.INITVAL_17 = "0x020110804408005088050880102A5108A5008801002000A85000841008100005000A5408A1002000";

    defparam INST10.INITVAL_18 = "0x08245002450884408A50008140020400A0102A410221508A1508250080000A840080100820000204";

    defparam INST10.INITVAL_19 = "0x0000002040000400820008050000410805402854082010A0500A20400A410824400041002040A000";

    defparam INST10.INITVAL_1A = "0x02251080140AA010824408205020000AA050A80508800008410881000040022150221100A0100001";

    defparam INST10.INITVAL_1B = "0x02210000550280100240002450A0410A8150AA51082140A85400014022550A2450A0410020500815";

    defparam INST10.INITVAL_1C = "0x0800500800080400200402844008000A8000000100A500A0550224102014000400020108A5500804";

    defparam INST10.INITVAL_1D = "0x0AA41082550A0110200500A050200400A14028510024402044008000AA510A255008400080102001";

    defparam INST10.INITVAL_1E = "0x08210000040A010080010280500A100024408211020110A800002150000008805020010280402811";

    defparam INST10.INITVAL_1F = "0x0000000000000000804102801000000085500A100A8510084400A00088010A011022100081008811";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_5_10 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1177 \mcuResourcesInst/ROMInst/rom_0_5_10_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1177 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00A140204400214000000021402050022010200100201020500A811002510020400A400800100000";

    defparam INST10.INITVAL_01 = "0x000010884000000000400804008810000000001100044020000021400A010281408244000000A000";

    defparam INST10.INITVAL_02 = "0x00050000400004000A010000008000008100800002A0000240088000080000200000000880000800";

    defparam INST10.INITVAL_03 = "0x02254080550884100004000000000002801008410000000000000040220000010000000800108005";

    defparam INST10.INITVAL_04 = "0x0AA150AA5402A5500A050AA050A8150AA550AA5502A550AA550AA450AA550AA5502A5500A050AA00";

    defparam INST10.INITVAL_05 = "0x02A400881400200020400080100004080040004400200022000A011000100084002004008050A801";

    defparam INST10.INITVAL_06 = "0x088110021002A00020150800100255000540080108A140A0040A25002241080050A80008A1108011";

    defparam INST10.INITVAL_07 = "0x00010000000A00008040002140081102A010A0040220408010088000801100840008410081100010";

    defparam INST10.INITVAL_08 = "0x0200400A01000000020000000020100800408A500A20000801020010800008000002400020000000";

    defparam INST10.INITVAL_09 = "0x020100080102A000A8440800002251000000021100001022150A0010220400000002000080008040";

    defparam INST10.INITVAL_0A = "0x00010000050020400A01008440080400014080050201002010002040001000800080010000100200";

    defparam INST10.INITVAL_0B = "0x0000500A01080500004000205028010881008055008000AA05080410001000001000140080400050";

    defparam INST10.INITVAL_0C = "0x0AA10002110000502000008400005002241080000001100001008500804000000002100800000000";

    defparam INST10.INITVAL_0D = "0x0820000011020000005100251002110000000A1000001022000A0040000008040008040001002000";

    defparam INST10.INITVAL_0E = "0x00211000000A840000050200000A44008000000108214080400001400A4400800002010020000000";

    defparam INST10.INITVAL_0F = "0x08040080440080400010022400080100A140804408A4002004002000080100045020040A20000A10";

    defparam INST10.INITVAL_10 = "0x0285500044080440A040000010220100200082000200102811000450801000044022400084008000";

    defparam INST10.INITVAL_11 = "0x0A20008840002100024400A4400844000440024400A440084400044002440AA5100A540AA5102A40";

    defparam INST10.INITVAL_12 = "0x00844088050081400240000540004408000008040221400811080100020100044080110200108800";

    defparam INST10.INITVAL_13 = "0x00205008100004000041000040024402000080040820000200080010020002A04002010024002010";

    defparam INST10.INITVAL_14 = "0x0001000800020010001102A5502811000040A00508A000A24100A15002400804508A01020400A045";

    defparam INST10.INITVAL_15 = "0x00011000100084500A41088440884000A1108A4102855022510A25002200000100200408A4100240";

    defparam INST10.INITVAL_16 = "0x022040884000010008000200002200002000000100A00000000A0000880502244008140020002000";

    defparam INST10.INITVAL_17 = "0x080010884402000022500080100200000010800102A510085400854008510004008A550801000040";

    defparam INST10.INITVAL_18 = "0x080040224008A44082550085002210002110000000200002000084008A5100050088040884002214";

    defparam INST10.INITVAL_19 = "0x00000000040080000004088110000500850002050A011080050225008A0002055000440200000044";

    defparam INST10.INITVAL_1A = "0x02800028000A045022410A8450024008851088110825008A05082500084408204002000000102801";

    defparam INST10.INITVAL_1B = "0x02201008100081100200008040A2140A0050A80402A40022450A000002100201408A110A25000A00";

    defparam INST10.INITVAL_1C = "0x08000000000A0400AA0002241020000A815080540204500A400281008A500084400A01000140A010";

    defparam INST10.INITVAL_1D = "0x002500AA4500A010AA4508255028440885408211000440800402804000010A200080050004102001";

    defparam INST10.INITVAL_1E = "0x0A81008800080150AA5000840028450881400245080110A0550025002A540A811020540024400254";

    defparam INST10.INITVAL_1F = "0x000000000000000082000200100850088000004100040008440A8040AA140021000201000150AA14";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_6_9 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1178 \mcuResourcesInst/ROMInst/rom_0_6_9_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1178 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x0021000044022140020000214020400A200008000000102205080010021000004008400004100004";

    defparam INST10.INITVAL_01 = "0x000000004000000000440800008811008100004102200008000A2010020000000000400000002040";

    defparam INST10.INITVAL_02 = "0x00001022440884000A05020000001000000000400280400244000040020408044080140880000000";

    defparam INST10.INITVAL_03 = "0x00815000000804000004002000000002841008410081008204020410020000801000000800100004";

    defparam INST10.INITVAL_04 = "0x0001508A1502A55080450224502A140A8550AA5508A540AA140AA510A2550AA5508A550805400A41";

    defparam INST10.INITVAL_05 = "0x08A55008510A200022150880002A50080050AA04002550820008A41000450A0400025000A4000254";

    defparam INST10.INITVAL_06 = "0x008110A814028550201108A51028010225108855020400AA50082450821502A4400854080550AA11";

    defparam INST10.INITVAL_07 = "0x0AA100000408A5408044002050A241080050AA51082040AA450080102A41008050A04100A4100015";

    defparam INST10.INITVAL_08 = "0x02A4408851000040020008200002400AA44000000820408A510281108A5408000020550A20000041";

    defparam INST10.INITVAL_09 = "0x02A1008A51088110A2040000002041020000081100001082450A254022040000000015088000A844";

    defparam INST10.INITVAL_0A = "0x02A10000000084400004088000004400010080040201002A1000844000450880000A51000010A200";

    defparam INST10.INITVAL_0B = "0x008050080000010000400020502A4000A100805000A4000000002110001008A510000000A4400000";

    defparam INST10.INITVAL_0C = "0x028100024100010020000804000015020000005500010000000020400040000000000408A0000040";

    defparam INST10.INITVAL_0D = "0x0820000014020000020000000000010000000810000010820008A440000102840000440001502040";

    defparam INST10.INITVAL_0E = "0x00241000000804000010020000020400800000000024008040000000200400800000110020000014";

    defparam INST10.INITVAL_0F = "0x0A8400AA0402244000450200000051000000A84000055020050A2000225100000020000020000810";

    defparam INST10.INITVAL_10 = "0x022150A8450A845088410004000200022000A200028400224102000080040A844000000005408000";

    defparam INST10.INITVAL_11 = "0x082000A04002810008040000400004000040020400A0400A0400A040080402041000500825108255";

    defparam INST10.INITVAL_12 = "0x08845008040884402800000050AA040800000A5108205088010AA100085100000080000200100800";

    defparam INST10.INITVAL_13 = "0x0AA450A2100004002211000040005102000080050220400254080440A20100044020110AA5502015";

    defparam INST10.INITVAL_14 = "0x0AA1008A55020440AA1102254022400A2100A25000A54082510A8100A8000AA04008010A85408245";

    defparam INST10.INITVAL_15 = "0x0AA10002150A0440201008A55028150A81108241028050224500A45082000000108A4400A1102A55";

    defparam INST10.INITVAL_16 = "0x02005008410004508801002550201000200000100020000000020000000102000000050A21502011";

    defparam INST10.INITVAL_17 = "0x0000102044000000800100051000000001000A510000008805088510881000005008050AA1002055";

    defparam INST10.INITVAL_18 = "0x080050821500A100A854088010820000241002010A20000000082140800008004080500805508204";

    defparam INST10.INITVAL_19 = "0x00001000050A0400085008010000010A0440AA010AA410225500A45008450A805028410000000050";

    defparam INST10.INITVAL_1A = "0x00A500AA540A054082410220508254080550805508015008540AA450A045022100A2000025100000";

    defparam INST10.INITVAL_1B = "0x022000001002241002010A24500A440821002814020510A000022550A20500841002550225508815";

    defparam INST10.INITVAL_1C = "0x0800102000080400A8140080000A540A24002A00000510AA1502A1002A050A044002510A8150AA45";

    defparam INST10.INITVAL_1D = "0x0A0050020502A51028040280402804088540AA010024502005088040AA4002055080400A84102000";

    defparam INST10.INITVAL_1E = "0x0AA10088540AA550A854020050201108A550A2510AA41022010A204080400801002000008040A814";

    defparam INST10.INITVAL_1F = "0x00000000000000008201002510081500804082040085508A1102250080440A8100020002A100A811";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_7_8 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1179 \mcuResourcesInst/ROMInst/rom_0_7_8_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1179 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x0021108A440AA14000410020000000022040020000805020000000500A1000004028400005100000";

    defparam INST10.INITVAL_01 = "0x00000000440000000041000000881000041088010005000000002010A20408240000510000000001";

    defparam INST10.INITVAL_02 = "0x00000000000020000001000440284500000002000801000810002100001000001000000880000000";

    defparam INST10.INITVAL_03 = "0x0AA5500055080410885102845022440AA540A2140A2450285108A140220400004000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000001";

    defparam INST10.INITVAL_05 = "0x02A5000814002150AA40008450800008850000040880000211000010220000044080000080000000";

    defparam INST10.INITVAL_06 = "0x008550801108A00022540A00102A550A04000A50002040A0000A24000211000050080008A1108015";

    defparam INST10.INITVAL_07 = "0x00011082510A00008A44028500000102A500A0000021100000008440000102200000450880102A10";

    defparam INST10.INITVAL_08 = "0x020040AA0102055002050AA01028010000402A5500211020010A2500800008A05088400021402A11";

    defparam INST10.INITVAL_09 = "0x0201102A0108A140280402A510AA0100A540A0100AA44002040A000020540AA01028000081408045";

    defparam INST10.INITVAL_0A = "0x020100000000A04000050080000A040AA4008A5002255080110A0040A20000851000010221100211";

    defparam INST10.INITVAL_0B = "0x00000000000000002A00000000000002000080500000400000000010001000001000000080400000";

    defparam INST10.INITVAL_0C = "0x028110AA4102A54020050A0400004002000002000201000000000000804400001008400804400215";

    defparam INST10.INITVAL_0D = "0x08A1402A54022410AA4002A4002A41028150A0110825400215000040A054000450A0040AA1002050";

    defparam INST10.INITVAL_0E = "0x0AA41028150A04500A54022410A8040A850000000000008A4500000000040A8500A80102A1402A10";

    defparam INST10.INITVAL_0F = "0x080450A0040A804000500200000A0100001000400000002250002150800102A00022500021508811";

    defparam INST10.INITVAL_10 = "0x02855080540A0540A0440AA150821508215002150804000001020000800000044000000004008A54";

    defparam INST10.INITVAL_11 = "0x082150A0450A8110AA040AA040AA040AA040A8040A0040A0040A0040A00402001020400AA4400240";

    defparam INST10.INITVAL_12 = "0x00855008550084400000000100000408A050A0000021000855000110A00102A0008A400225100854";

    defparam INST10.INITVAL_13 = "0x0A245080110AA450A80102A540AA000225508A50002110880008A1000214080040880100A4002210";

    defparam INST10.INITVAL_14 = "0x0001102A00022150001502A5002A140284008844008000A2410A810000040A844088410085408804";

    defparam INST10.INITVAL_15 = "0x000100A8500004502A5400A010881508A4102854022440820100040002140A2400000508A010A250";

    defparam INST10.INITVAL_16 = "0x02255008140A250008540A0000204400A040A244002000005002005000100000000044002150AA51";

    defparam INST10.INITVAL_17 = "0x0A05508044000000000000A010000402000020010000000800008500085100A0000A450801108840";

    defparam INST10.INITVAL_18 = "0x08A550024008A400825500854002100A801028540020002240000000800000800080000884000214";

    defparam INST10.INITVAL_19 = "0x0200102855000440AA0008A5100A54000550A0550A0010AA400AA4000A55002550004502A000A840";

    defparam INST10.INITVAL_1A = "0x0801102A000820500204028040A2000AA400AA400AA5000800020400004400210002000020102841";

    defparam INST10.INITVAL_1B = "0x022000A0140280102A55000040A2040A8450AA450AA4400854020000021402245028550225000A44";

    defparam INST10.INITVAL_1C = "0x080010000000040000000000002000080000000008A0400A000204002200000450220100A1402800";

    defparam INST10.INITVAL_1D = "0x002410824508A4102A0500A050AA050885108A010284002250008540000002800000010004102000";

    defparam INST10.INITVAL_1E = "0x0A81102A000A000000000AA1100A440285000245080010080100241000400A050022550880508010";

    defparam INST10.INITVAL_1F = "0x00000000000000408000028010224000800000000000000A11020000A244000110AA14000100A810";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_8_7 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1180 \mcuResourcesInst/ROMInst/rom_0_8_7_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1180 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x002050AA400AA0508254082140A2410AA400A810080410AA1400001082550800500A510A0140A004";

    defparam INST10.INITVAL_01 = "0x08010020540284408051002040805508055008450A01008A1408A5008A54020550881108A1108810";

    defparam INST10.INITVAL_02 = "0x0A2040881502015082150A81100254008510885100845020450204502045088140AA500881008010";

    defparam INST10.INITVAL_03 = "0x0200508205080450084102044022040AA440821008A0402045008540205502841082110084402210";

    defparam INST10.INITVAL_04 = "0x0001002A450084100041000400A2040AA040204408211008110A811080100820508244000410A841";

    defparam INST10.INITVAL_05 = "0x0885008A140221000A440884508210088550AA4408A550A2110AA0102255028440AA500A84000041";

    defparam INST10.INITVAL_06 = "0x08854000100084502210082510281502841088510881002210080400820500044088040884508811";

    defparam INST10.INITVAL_07 = "0x02210008010A05408A400A054000410A24002800082110A0010084508241022510A8450A00102A40";

    defparam INST10.INITVAL_08 = "0x082440A051020510224502A11082510004402A1000201020510001408A5408010008400820008011";

    defparam INST10.INITVAL_09 = "0x02A1102A510A8510A8440AA410825102A500AA110AA050820002A04022550A804022450885100845";

    defparam INST10.INITVAL_0A = "0x08211088400004402000088510000408000080000220400011000040220508811002510021102211";

    defparam INST10.INITVAL_0B = "0x020410204402211028440221502A4002A050800000A010A21000251028100A01102800020440A000";

    defparam INST10.INITVAL_0C = "0x00011000010200002000008450A000022540000502A5508A45000000AA5508A450004008A5408A14";

    defparam INST10.INITVAL_0D = "0x08A140A015022450024008250082410285002A1108A01082100A2040A2510884400A040804002214";

    defparam INST10.INITVAL_0E = "0x00001028540084502A0102245080440A851020440000008A4502040000440A8510000102A1408010";

    defparam INST10.INITVAL_0F = "0x080400A204028040A0510221000A5102A01080450805102245022150284102850022450021002011";

    defparam INST10.INITVAL_10 = "0x020010084508045080400A010002100021000214000500001102A500A800008450A8050005408A40";

    defparam INST10.INITVAL_11 = "0x0A2140A84502A1108A440AA040AA040AA040AA040AA040AA040AA040AA050A801022140800108A15";

    defparam INST10.INITVAL_12 = "0x0084000840008050A011080010AA440AA1408010022100084000211080010280408A000224108850";

    defparam INST10.INITVAL_13 = "0x0A00108A110A0100285102A010024502250020140221108A4008815002000A80408A410020002041";

    defparam INST10.INITVAL_14 = "0x0AA1102001022100021100210022410A214020100A8500AA510AA0102A4002800000100201000241";

    defparam INST10.INITVAL_15 = "0x008100A0540A040020510825502255082100A01100A01020510A2550A21008214020440A81100040";

    defparam INST10.INITVAL_16 = "0x02240088540A20500840080550200408A55002040A2540820102A10020400880402A040A21400801";

    defparam INST10.INITVAL_17 = "0x0220108845008440281008A5100A51022040284100A5002A45008150885002850088110081100A05";

    defparam INST10.INITVAL_18 = "0x08A0000215022000A804088000A2110801100040002050884402010082500220008014080440A214";

    defparam INST10.INITVAL_19 = "0x0A241080050285000A140825102205020440AA41028410225500851008450A811088410AA1100214";

    defparam INST10.INITVAL_1A = "0x0A8040281408844002110204408204080500005000211088550A2410204400210002040825102A05";

    defparam INST10.INITVAL_1B = "0x0225408204028110204108045088100225000205028110A2400AA550824508811082000004108800";

    defparam INST10.INITVAL_1C = "0x02A110AA5102A5100040082100000408A0108A140004500201028110AA010884502201028500A811";

    defparam INST10.INITVAL_1D = "0x020150000100A4100A040A80000A04082400024102A550A8010085500A0400801020140081508A44";

    defparam INST10.INITVAL_1E = "0x02011020000A245020040004002045000100A2450820100245022400A24008010022500084408804";

    defparam INST10.INITVAL_1F = "0x000000000000000080400A85102254008010A2450025100A550A8000AA55028110A0410821002010";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_9_6 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1181 \mcuResourcesInst/ROMInst/rom_0_9_6_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1181 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x0AA15028440AA1502A5500A100820102A50082140A05102000028510A21108A45088410A21402215";

    defparam INST10.INITVAL_01 = "0x0A8150285002040082550A24508854028540000508A540AA1000A450AA4500850002500881100A14";

    defparam INST10.INITVAL_02 = "0x0824400A100281408011080110021400041008010004002000028400284000A1000041088140A814";

    defparam INST10.INITVAL_03 = "0x00245082050885402004002000801102201008410081008204020450224502050002010880502014";

    defparam INST10.INITVAL_04 = "0x0AA110085000A11002400884500000002000A0400000008255000100280108200000450820000000";

    defparam INST10.INITVAL_05 = "0x0024008850022500800008A40002100A800000450800000250000510A0000005400010008010A810";

    defparam INST10.INITVAL_06 = "0x08A51082150AA1002A000A0510A0140AA5108A450A8540AA040A25002241088040AA000A00100814";

    defparam INST10.INITVAL_07 = "0x00014000040A0000A8500821502241022450AA11082540A84500A51080010A85100055028110A850";

    defparam INST10.INITVAL_08 = "0x008050A0010A8500220500811002110080502010022440801108A55080040A000020440824000041";

    defparam INST10.INITVAL_09 = "0x0801508011080000A0450A8440A8110AA11000150A210002440A04002A55000040080500A5400055";

    defparam INST10.INITVAL_0A = "0x0A015080450AA450025500A5002A0508A500A25402A000A81502A050085000A040A0010880400254";

    defparam INST10.INITVAL_0B = "0x0205002044022010000402810080150AA05080050AA410A0110AA410A8150A2410A8150A8450A055";

    defparam INST10.INITVAL_0C = "0x08015028010A24002805000550AA0002A550A80102A54008040A8000AA50008040A8440AA5008800";

    defparam INST10.INITVAL_0D = "0x0AA500824002A04028000A8000A8010A0410801500814002510004508204008540A04508A0102A11";

    defparam INST10.INITVAL_0E = "0x02A410A0410A0540205402A0402A0508A41020440AA400A854020450A80508A4102A510A25008A40";

    defparam INST10.INITVAL_0F = "0x0A8550A2050A8450AA5102A0002A410AA55088550AA5102A55002500A8410A25102A15002510AA15";

    defparam INST10.INITVAL_10 = "0x022150085008050080510004400250002500025500051080110A8000A25000855000040A8440AA54";

    defparam INST10.INITVAL_11 = "0x002510085408215020450800508005080050800508005080050800508004020110A814082540A201";

    defparam INST10.INITVAL_12 = "0x00A5508A5508A050200100055020050A211028100025500A540A2150AA010A2540A85502A1400A45";

    defparam INST10.INITVAL_13 = "0x0A20508815000000A8410A00000A4402A0000054002500A2540A84500245028050A2410A24502A51";

    defparam INST10.INITVAL_14 = "0x000150800102A4002814022500204508A500AA15028040AA410AA100A8000A804008010A05008005";

    defparam INST10.INITVAL_15 = "0x008140A200008440804000A04000150880108040028040024408A400025000040008050A80108841";

    defparam INST10.INITVAL_16 = "0x0284508A140285008A4102801028100224000010082400A201028100204408810080500224000014";

    defparam INST10.INITVAL_17 = "0x0221508855020400800102A5108240000110A85108240088150885400A1402250008150821502240";

    defparam INST10.INITVAL_18 = "0x0AA500020100A000881408A000824102001082100824100000088000A040080040A0000A0450A245";

    defparam INST10.INITVAL_19 = "0x0820108250020510A0140A254020500204108A000A04100A1400241008140A0050085108A1102810";

    defparam INST10.INITVAL_1A = "0x0AA4408A100AA15022540A8450A2400A20402204020140085402A510205508255002400081108A05";

    defparam INST10.INITVAL_1B = "0x02A40080000A8510A0050A044080500A05002A11008500204502A110A2450885108A410025000851";

    defparam INST10.INITVAL_1C = "0x0A81108A4102A410284008001080440880000800000150A2010281002A0002855002110A2150A850";

    defparam INST10.INITVAL_1D = "0x0A8140A21402211028040A2440284500851022010A2500280000A450000400004000400205502A04";

    defparam INST10.INITVAL_1E = "0x0A81508A000A20400A1002254028150A2140A2150A0510A0110A254008500801402A00020450AA15";

    defparam INST10.INITVAL_1F = "0x0000000000000000A201028410A85108A040820400850008010A844080550021508005082140A814";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_10_5 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1182 \mcuResourcesInst/ROMInst/rom_0_10_5_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1182 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00004020000200400200080000000002210008000001102014000010221000004088400080100000";

    defparam INST10.INITVAL_01 = "0x0801002041008040A844080440001008000080010004000014002010020102000000400020000000";

    defparam INST10.INITVAL_02 = "0x0000000001000000000100A010005008000000100000100001000010000100000008000001008010";

    defparam INST10.INITVAL_03 = "0x02000000000000002004002000801102201008410001008200020050A00400000080000000000000";

    defparam INST10.INITVAL_04 = "0x000140A01500A50082050AA400A8050884502245082500A04108A110221408A11082450820008241";

    defparam INST10.INITVAL_05 = "0x00A1100204080040024508001088400001502200002510A0000A840000540A00002A000220000244";

    defparam INST10.INITVAL_06 = "0x00001082010224000011028100080100010080410881408854022110005008A41082500200008A00";

    defparam INST10.INITVAL_07 = "0x02A00000040A21400000002140A2100224108851020040A2440801108A50008510A8010284000851";

    defparam INST10.INITVAL_08 = "0x00A0008040000040220008811000000024000A400000408050022110004400000020450000000041";

    defparam INST10.INITVAL_09 = "0x00800080500800008040080040200002001002010001000044082100020402A01080040804002804";

    defparam INST10.INITVAL_0A = "0x00800028500000002000000010000002000000000004000000000000080000004000100080002004";

    defparam INST10.INITVAL_0B = "0x0004002004002000800102015000000020002A400000000010000100000000040000000004000A00";

    defparam INST10.INITVAL_0C = "0x028000824000014000400A0000005100000002400201000A40002440804000200002040004000000";

    defparam INST10.INITVAL_0D = "0x0000408015000440024000250002400080002A0008001080000AA40020010880000A000205100040";

    defparam INST10.INITVAL_0E = "0x08250000000A800000150000000A4000000020040024400000020400284000001002500000008054";

    defparam INST10.INITVAL_0F = "0x088000A24002800000510001500A00000010A0000005100005020050285000051000450200002A00";

    defparam INST10.INITVAL_10 = "0x00214008000000000001020400000400004000000004000000020500800000004028000004400000";

    defparam INST10.INITVAL_11 = "0x02004000010000008000000000000000000000000000000000000000000000010000000024002010";

    defparam INST10.INITVAL_12 = "0x08000000000805400200020000280008000000450800000000002000000000004002000000008000";

    defparam INST10.INITVAL_13 = "0x0A244008000AA000000000A500000000055000000800002010000400000100000020000080100001";

    defparam INST10.INITVAL_14 = "0x0020008A0500045022000204400000080040A04500240000000A2110A2400AA0500A11028540A245";

    defparam INST10.INITVAL_15 = "0x02001002140A8040A01108A45000050AA110A25102A15022500A2150A000020140A2400020002211";

    defparam INST10.INITVAL_16 = "0x0020500000008540800102855000100A205002100021400000022000000008010080140A01508005";

    defparam INST10.INITVAL_17 = "0x0000108804000100880100A000081000210028500081008845080450004000055080140820002241";

    defparam INST10.INITVAL_18 = "0x0000002000008040001008000020100000000200080040800408014002100800400004000450A010";

    defparam INST10.INITVAL_19 = "0x02041000000284400010000010220002800082000805000204002010800402004008010201000010";

    defparam INST10.INITVAL_1A = "0x00810000000080000010000000800400000000000024108254022010880000000000000805002A01";

    defparam INST10.INITVAL_1B = "0x0020500240000100080002A40000010824002800020010820500054000040004100A4508A0108004";

    defparam INST10.INITVAL_1C = "0x08001028000204100040082100280402A5108214028450084500A140084508800008400205408015";

    defparam INST10.INITVAL_1D = "0x028440A2150004002201022440220000A1408840000410A0010000408A4008004020450084102004";

    defparam INST10.INITVAL_1E = "0x0880008A140204502250020010A845088450A044022500A2500A0140A81000004000540280008214";

    defparam INST10.INITVAL_1F = "0x00000000000000000201028100085508004000000085400001088000005102000008010A80408804";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_11_4 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1183 \mcuResourcesInst/ROMInst/rom_0_11_4_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1183 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x0000402000020040820100000000000A200022040200102000000010021000004008400000000000";

    defparam INST10.INITVAL_01 = "0x02805008440005000044020010001108000000010204000004002110021000000020400020008204";

    defparam INST10.INITVAL_02 = "0x000400020400A0000805020000805108000002400801400814008140081400205000100000402804";

    defparam INST10.INITVAL_03 = "0x00000080000080400000000000000000000000000000000000000040200400815000000800100004";

    defparam INST10.INITVAL_04 = "0x0AA0400810008100024000840022040280002044002000880002A100A0000820408041082000A200";

    defparam INST10.INITVAL_05 = "0x0000000000000000000008010008440000008A00000040000000240000000280000040000010A801";

    defparam INST10.INITVAL_06 = "0x0000000A040800400000000100000008000082450204000040000000801000801000100081000A05";

    defparam INST10.INITVAL_07 = "0x02000000000004400000020000AA4000814000550800000255000000021000001080000000000000";

    defparam INST10.INITVAL_08 = "0x0A84000A1000200008100000402A0008000080010800000A10088500280400000002000200000004";

    defparam INST10.INITVAL_09 = "0x0A00000A1008A5508840000000024000000028000000108040008040000408000002400000108800";

    defparam INST10.INITVAL_0A = "0x0A0000000000A40000050000000A000005000014000000280000A0000054080000A0400000500000";

    defparam INST10.INITVAL_0B = "0x0001500801000400A801008050000002A1000A4000A4400A0400250002400A010000000284000000";

    defparam INST10.INITVAL_0C = "0x028000824000814000000A0000005000000002400001100241002440004400201002440004400214";

    defparam INST10.INITVAL_0D = "0x0000000815000000824000250002400000402A0000041080040A040000110880000A000005100000";

    defparam INST10.INITVAL_0E = "0x08250000040A800002150000008A4000000028050024400000028500284000000082500000002054";

    defparam INST10.INITVAL_0F = "0x080000A20002800000500000000A5000001080000005100005000000281000051000450200002A00";

    defparam INST10.INITVAL_10 = "0x00200000140001400000000000000000000000000004000000022050880000004080010005400000";

    defparam INST10.INITVAL_11 = "0x02000008000020000040000000000000000000000000000000000000000100000000100001400010";

    defparam INST10.INITVAL_12 = "0x000000000008004080100800002A4008804000440800000000002000000000004002010004008010";

    defparam INST10.INITVAL_13 = "0x0A040000000000000000000000000000000000000800000000000000000000000000000A00100001";

    defparam INST10.INITVAL_14 = "0x0A80000011000000200500000000040884402A0000000000000A0010A84402840080500A81400A41";

    defparam INST10.INITVAL_15 = "0x002010000002801008050824408A150805008805008400A05508A000000000000020010000008801";

    defparam INST10.INITVAL_16 = "0x000000004000001080000001100000002100A80002200020500A0050081000200000000200000000";

    defparam INST10.INITVAL_17 = "0x000400080400804000400000000001080000005000000000000000000000008040000000A0000004";

    defparam INST10.INITVAL_18 = "0x00005000000204000041080140000008A10000050A00000A0000244000000085000A00002050A000";

    defparam INST10.INITVAL_19 = "0x02051028050284000A14000000080502801082510085000A05088110801402A10088010000008250";

    defparam INST10.INITVAL_1A = "0x00A450A2000221100044088010A04002A440AA440AA45082540AA1100801080050000400A1000841";

    defparam INST10.INITVAL_1B = "0x002100080002800000010A8400A24402A140025508A5502A5000814000550AA550AA100A01000251";

    defparam INST10.INITVAL_1C = "0x0000500000080400A810020000280402251080140AA550A04100A55028400800000A000A25108800";

    defparam INST10.INITVAL_1D = "0x08A44000110A84000201020000820108001020400004402250000040000100000000050800100001";

    defparam INST10.INITVAL_1E = "0x0080000A0002004000100AA140AA550A20402054020400AA40080150A0100204400000028010A004";

    defparam INST10.INITVAL_1F = "0x00000000000000000000028000005100000000000005008211088100225100800000010880000800";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_12_3 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1184 \mcuResourcesInst/ROMInst/rom_0_12_3_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1184 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x0020402040022050021400210000100A210002040201102040000010221108014088410A00402000";

    defparam INST10.INITVAL_01 = "0x020140085000000080440000508014080140A0010804000A040024100A5400010000400800108204";

    defparam INST10.INITVAL_02 = "0x0024000A000280408015080000821000000000010800002800028000280000A04000100801402014";

    defparam INST10.INITVAL_03 = "0x00000080050080408010008010004000010020040004100800080040204402050000010800500014";

    defparam INST10.INITVAL_04 = "0x000110204400000082010200500A01000400000108050002150004000A0000010000040021000000";

    defparam INST10.INITVAL_05 = "0x0A200022400001400000000400001000800000000A00100010000100280000004000140020000254";

    defparam INST10.INITVAL_06 = "0x08040008000000000205008400201402A010001000200082140020000004002000204000A5400000";

    defparam INST10.INITVAL_07 = "0x00A010A0000020000800020010001008810082000201000800080400004002000008040025002005";

    defparam INST10.INITVAL_08 = "0x00040080100021002011000100001000A00088100001000000020040084000A40000050201400000";

    defparam INST10.INITVAL_09 = "0x00001000000220400040088400A00002210002010220000004080110021402001000010004002004";

    defparam INST10.INITVAL_0A = "0x00001080400000008800000500000008000008000024000001000000800400040000000200000010";

    defparam INST10.INITVAL_0B = "0x0085002041020500004002A15000000001108000000040A0100000002A400024002A40000000AA00";

    defparam INST10.INITVAL_0C = "0x00001000000200000200000050A00400254000010225008A410000408A40080010000400A4000A40";

    defparam INST10.INITVAL_0D = "0x00810008010020408000000100000002004002010084000014008000821000005000400A00000240";

    defparam INST10.INITVAL_0E = "0x08010020040080400201002000804008040008010000400804008100004008040080100201002004";

    defparam INST10.INITVAL_0F = "0x0280000000002400A005002000000002A00028050800000240020140000002001002400201000201";

    defparam INST10.INITVAL_10 = "0x08A54082010200102204008010801108011080140A04002840020040880502004002010021000A41";

    defparam INST10.INITVAL_11 = "0x080100A0040280100A0008A0008A0008A0008A0008A0008A0008A0008A00088400225402A410A850";

    defparam INST10.INITVAL_12 = "0x000450804508004020000801500000082040280100015080400A00108A100205000A140020500041";

    defparam INST10.INITVAL_13 = "0x00204088010820002800028100024000241000140001008240008050201002840082500084400050";

    defparam INST10.INITVAL_14 = "0x0000100A140020500A000284408A5102210080550A2040284000A10002000824508A41000400A804";

    defparam INST10.INITVAL_15 = "0x0220002014000040AA54008110A05000A41028540224508200020110001002014008000A20002210";

    defparam INST10.INITVAL_16 = "0x080450200402050000400280000201002400800002200020400A0140085000200000140001008005";

    defparam INST10.INITVAL_17 = "0x0204108204080110024000A1402244088000280402244008050204402000028510A2540804100240";

    defparam INST10.INITVAL_18 = "0x00A05008550A84102A51020140880008A0402005008110221000241008440085100A000024008800";

    defparam INST10.INITVAL_19 = "0x00011020050824000A4100240008050021402855088040A0510AA100224108A540A20100A0008245";

    defparam INST10.INITVAL_1A = "0x0A015002000205102041088410085402A550AA550A8040025100010080050A0150201000A0000A41";

    defparam INST10.INITVAL_1B = "0x00240000400285002801080010A8100A8150AA410AA540AA5508A01020510AA140A0410821008004";

    defparam INST10.INITVAL_1C = "0x008150004008241080500A00002850028500000002A0400840002440A0440280000A500080400854";

    defparam INST10.INITVAL_1D = "0x00A110A255080440220008A450221000A14088400225002A00000450880108000000050200500205";

    defparam INST10.INITVAL_1E = "0x0884100A1400000008400284108A040884500005020000A8540805502A1000004002400285000A11";

    defparam INST10.INITVAL_1F = "0x00000000000000000800028000205000040008100005008044088440081100A01088010A20408844";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_13_2 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1185 \mcuResourcesInst/ROMInst/rom_0_13_2_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1185 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x0000402000020050020000000000010A240080140A04102000000010821000005008400000000000";

    defparam INST10.INITVAL_01 = "0x0A0140285000040080440000500014000010200108040000100024100250000000004000A0108A14";

    defparam INST10.INITVAL_02 = "0x0024000A100280000015080110825000000000010800002800028000280000A1400050000140A014";

    defparam INST10.INITVAL_03 = "0x00000080000080002004002000801102201008410001008200020010800402050000010800500014";

    defparam INST10.INITVAL_04 = "0x0AA150AA5500A55082050AA450AA050AA550AA55082550AA550AA510AA550AA5508A550820508A40";

    defparam INST10.INITVAL_05 = "0x0000000000000000000000000000000000000000020000000400000000000000000000000010A800";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x000000000400000000000A2000000000001000000000400000000100020000800080010000000800";

    defparam INST10.INITVAL_08 = "0x00000080000020002210008110000000000088000200408000000000000000040020000000100040";

    defparam INST10.INITVAL_09 = "0x00000080000000000040080040000002001000010001000000000000020402004000000004000004";

    defparam INST10.INITVAL_0A = "0x00000000400004000000080000000000000000000000000000000000080000004000000080000004";

    defparam INST10.INITVAL_0B = "0x0085002045022510804502A100000000210000000004400010000100000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000008000000000000000000201008805000040804108A45000040004000A40";

    defparam INST10.INITVAL_0D = "0x00000088010000408000000100000000044002000084000000000000021000000000000000000040";

    defparam INST10.INITVAL_0E = "0x0001000044008000220100004080400000102845000040000002850000400000108010000000A004";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000040000000801000000200400200";

    defparam INST10.INITVAL_10 = "0x00000008000000000001000400000400004000000004000000020000A80000004000050000000000";

    defparam INST10.INITVAL_11 = "0x02000008000020000040000000000000000000000000000000000000000000050000140000000000";

    defparam INST10.INITVAL_12 = "0x00000000000800400001080000080008014000000000000000000000000000804000010000008000";

    defparam INST10.INITVAL_13 = "0x00000000000800000000008000000000040000000000002000000400000100000020000000000000";

    defparam INST10.INITVAL_14 = "0x00000080000004000000000000000000000000000000000000000010004000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00001002000000000000000000000000000000000000000000000000000402000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000080400080000001000100001002240000100A2000A2410A0140285008A10080000001000000";

    defparam INST10.INITVAL_17 = "0x00240002040004008001000000000000010000000000008000000000000002800020000000002000";

    defparam INST10.INITVAL_18 = "0x00000008000000000000000000080108004002000000000000080000000008000000000000000800";

    defparam INST10.INITVAL_19 = "0x0A2410A00000A4000005000000280000200000000000000000000000000000000000010001108001";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000A41";

    defparam INST10.INITVAL_1B = "0x00241000000000000000000000000000000000000000000000000040000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x08015008010A041080500A00000000000010A0540000000000000000000008004000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000001400000000000004000000000000005002A00000050080500004000400004102005";

    defparam INST10.INITVAL_1E = "0x0004008000000150AA54000000000000000000000000000000020000000000000000400001000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000201000000080000004000000080000000000040000000200020000000000040";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module mcuResourcesInst_ROMInst_rom_0_14_1 ( input ADA12, ADA11, ADA10, ADA9, 
    ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, ADA2, ADA1, output DOA0, input RSTA, 
    CLKA );
  wire   VCCI, CLKA_NOTIN, GNDI, ADA12_dly, CLKA_dly, ADA11_dly, ADA10_dly, 
         ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, 
         ADA2_dly, ADA1_dly, RSTA_dly;

  DP8KC1186 \mcuResourcesInst/ROMInst/rom_0_14_1_DP8KC ( .CEA(VCCI), 
    .OCEA(VCCI), .CLKA(CLKA_NOTIN), .WEA(GNDI), .CSA0(GNDI), .CSA1(GNDI), 
    .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(VCCI), .OCEB(VCCI), .CLKB(GNDI), 
    .WEB(GNDI), .CSB0(GNDI), .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), 
    .DIA0(GNDI), .DIA1(GNDI), .DIA2(GNDI), .DIA3(GNDI), .DIA4(GNDI), 
    .DIA5(GNDI), .DIA6(GNDI), .DIA7(GNDI), .DIA8(GNDI), .ADA0(GNDI), 
    .ADA1(ADA1_dly), .ADA2(ADA2_dly), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(ADA11_dly), .ADA12(ADA12_dly), 
    .DIB0(GNDI), .DIB1(GNDI), .DIB2(GNDI), .DIB3(GNDI), .DIB4(GNDI), 
    .DIB5(GNDI), .DIB6(GNDI), .DIB7(GNDI), .DIB8(GNDI), .ADB0(GNDI), 
    .ADB1(GNDI), .ADB2(GNDI), .ADB3(GNDI), .ADB4(GNDI), .ADB5(GNDI), 
    .ADB6(GNDI), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(), .DOA2(), .DOA3(), 
    .DOA4(), .DOA5(), .DOA6(), .DOA7(), .DOA8(), .DOB0(), .DOB1(), .DOB2(), 
    .DOB3(), .DOB4(), .DOB5(), .DOB6(), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLKA_INVERTERIN( .I(CLKA_dly), .Z(CLKA_NOTIN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $setuphold (negedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (negedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (negedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (negedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (negedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (negedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (negedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (negedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (negedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (negedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (negedge CLKA, ADA2, 0:0:0, 0:0:0,,,, CLKA_dly, ADA2_dly);
    $setuphold (negedge CLKA, ADA1, 0:0:0, 0:0:0,,,, CLKA_dly, ADA1_dly);
    $setuphold (negedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
  endspecify

endmodule

module DP8KC1186 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b111";
  defparam INST10.DATA_WIDTH_A = 1;
  defparam INST10.DATA_WIDTH_B = 1;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x0AA140A244022140AA150AA14020500A21402A04028150AA550A85502A5508A540AA550A2040A000";

    defparam INST10.INITVAL_01 = "0x02805008450081402A440A041088110A8150A84102A4402A040821502A150A8150AA410820008205";

    defparam INST10.INITVAL_02 = "0x020400820500A050AA0502A000A051088100825008815008550081500815082050A8150880402804";

    defparam INST10.INITVAL_03 = "0x0AA500005500001088510284502244088540A2140A2450285108A1000254008150A0100804100204";

    defparam INST10.INITVAL_04 = "0x000150AA5500A51080450AA450AA050AA450A245082510AA550A2510AA1508A1508245080510A241";

    defparam INST10.INITVAL_05 = "0x00001080000A015088050804400A5400A410AA40088150A01100A50022050A804082540024000255";

    defparam INST10.INITVAL_06 = "0x0804400A00000550024000A5002A5400001080000000000254000010A00000A40000540000000A00";

    defparam INST10.INITVAL_07 = "0x02A0108A510025400A04028410AA5000000002550A01100A55080440085002201028040825002205";

    defparam INST10.INITVAL_08 = "0x00A40080500021100851022040825000A4008A5400011020500000000A5400A15088050A0140AA10";

    defparam INST10.INITVAL_09 = "0x00A0102050000000000008A510A810022540820102A440000000255002140AA41028050804402804";

    defparam INST10.INITVAL_0A = "0x00A010A8150A0000AA50000550A0400AA0000A4000245082010A0000A20508051002500221002011";

    defparam INST10.INITVAL_0B = "0x0081500801000500AA4100A050AA55080110AA550A0040AA050A80002A550025002A55080400AA55";

    defparam INST10.INITVAL_0C = "0x080010A80002A4000255000050AA05002550A80502251082410A80008A45082410A80000A4400255";

    defparam INST10.INITVAL_0D = "0x0081402A40002410A80002800028000281508001082540001500A400A054008050A0400AA0100245";

    defparam INST10.INITVAL_0E = "0x0A800028150000500A40002410A0000A050008010A80400A0500815080000A0500A8000281402A00";

    defparam INST10.INITVAL_0F = "0x0280500240082400AA05002550A05002A54028050AA0100250020150805002A00002500001508001";

    defparam INST10.INITVAL_10 = "0x000000000000000000040AA1400014000140001500045080500225508A50028040AA410A81400A54";

    defparam INST10.INITVAL_11 = "0x0001500005080010A0000A0000A0000A0000A0000A0000A0000A0000A00000040028040000000015";

    defparam INST10.INITVAL_12 = "0x0805008050000540AA500AA410A24008A05080550A01008055002010A01002A0000A400025000054";

    defparam INST10.INITVAL_13 = "0x0000000A010AA150805002A510A8050025502A400A0110881400A100201408040088100000500201";

    defparam INST10.INITVAL_14 = "0x0AA01020150021002A00000000000000000000000005400010000000AA0000000000000000000000";

    defparam INST10.INITVAL_15 = "0x02A01028400A80000000000000000000000000000000000000000050A0140A2400AA400001000001";

    defparam INST10.INITVAL_16 = "0x00250000440A20508054080450024508A150AA4402A14020500A205008140024502A400A01508A50";

    defparam INST10.INITVAL_17 = "0x0A054008040A81502A140A05002A5502A450805002A5502250080010804100A050800000A0108805";

    defparam INST10.INITVAL_18 = "0x00A50020000000400000080400A0100A010028500A0150A8550281400A550220400014008050A010";

    defparam INST10.INITVAL_19 = "0x0205502A500A0450A05000A4100A50028000000000050000000000108000000000280502A000A814";

    defparam INST10.INITVAL_1A = "0x00000000140000002000000400001400000000000000108000000010A80402010020150A05002841";

    defparam INST10.INITVAL_1B = "0x0021502A45080500285402A400000000000000000000000000002510A00000000000000000108000";

    defparam INST10.INITVAL_1C = "0x08A05028500A2500A81402A55080540000000A000000000005000000000502804020500000000055";

    defparam INST10.INITVAL_1D = "0x000000000000000000000000000000000000000002A450A2550A0540AA4108A510AA100A8450A241";

    defparam INST10.INITVAL_1E = "0x00001020140024502A540000000000000010A0000025000000000000000000000002550804000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000854080500220508051028510A205080000005000000028010A85402A0000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "NORMAL";
  defparam INST10.WRITEMODE_B = "NORMAL";
endmodule

module coreInst_registerFileInst_regs_registers_0_0_1 ( input DIA7, DIA6, DIA5, 
    DIA4, DIA3, DIA2, DIA1, DIA0, ADA6, ADA5, ADA4, ADA3, output DOA7, DOA6, 
    DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input WEA, CEA, OCEA, RSTA, CLKA, CLKB, 
    RSTB, OCEB, CEB, WEB, output DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, 
    DOB7, input ADB3, ADB4, ADB5, ADB6, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, 
    DIB6, DIB7 );
  wire   GNDI, VCCI, DIA7_dly, CLKA_dly, DIA6_dly, DIA5_dly, DIA4_dly, 
         DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA6_dly, ADA5_dly, ADA4_dly, 
         ADA3_dly, WEA_dly, CEA_dly, OCEA_dly, RSTA_dly, RSTB_dly, CLKB_dly, 
         OCEB_dly, CEB_dly, WEB_dly, ADB3_dly, ADB4_dly, ADB5_dly, ADB6_dly, 
         DIB0_dly, DIB1_dly, DIB2_dly, DIB3_dly, DIB4_dly, DIB5_dly, DIB6_dly, 
         DIB7_dly;

  DP8KC1187 \coreInst/registerFileInst/regs/registers_0_0_1_DP8KC ( 
    .CEA(CEA_dly), .OCEA(OCEA_dly), .CLKA(CLKA_dly), .WEA(WEA_dly), 
    .CSA0(GNDI), .CSA1(GNDI), .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(CEB_dly), 
    .OCEB(OCEB_dly), .CLKB(CLKB_dly), .WEB(WEB_dly), .CSB0(GNDI), .CSB1(GNDI), 
    .CSB2(GNDI), .RSTB(RSTB_dly), .DIA0(DIA0_dly), .DIA1(DIA1_dly), 
    .DIA2(DIA2_dly), .DIA3(DIA3_dly), .DIA4(DIA4_dly), .DIA5(DIA5_dly), 
    .DIA6(DIA6_dly), .DIA7(DIA7_dly), .DIA8(GNDI), .ADA0(VCCI), .ADA1(GNDI), 
    .ADA2(GNDI), .ADA3(ADA3_dly), .ADA4(ADA4_dly), .ADA5(ADA5_dly), 
    .ADA6(ADA6_dly), .ADA7(GNDI), .ADA8(GNDI), .ADA9(GNDI), .ADA10(GNDI), 
    .ADA11(GNDI), .ADA12(GNDI), .DIB0(DIB0_dly), .DIB1(DIB1_dly), 
    .DIB2(DIB2_dly), .DIB3(DIB3_dly), .DIB4(DIB4_dly), .DIB5(DIB5_dly), 
    .DIB6(DIB6_dly), .DIB7(DIB7_dly), .DIB8(GNDI), .ADB0(VCCI), .ADB1(GNDI), 
    .ADB2(GNDI), .ADB3(ADB3_dly), .ADB4(ADB4_dly), .ADB5(ADB5_dly), 
    .ADB6(ADB6_dly), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), 
    .DOA3(DOA3), .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (RSTA => DOA7) = (0:0:0,0:0:0);
    (RSTA => DOA6) = (0:0:0,0:0:0);
    (RSTA => DOA5) = (0:0:0,0:0:0);
    (RSTA => DOA4) = (0:0:0,0:0:0);
    (RSTA => DOA3) = (0:0:0,0:0:0);
    (RSTA => DOA2) = (0:0:0,0:0:0);
    (RSTA => DOA1) = (0:0:0,0:0:0);
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA7) = (0:0:0,0:0:0);
    (CLKA => DOA6) = (0:0:0,0:0:0);
    (CLKA => DOA5) = (0:0:0,0:0:0);
    (CLKA => DOA4) = (0:0:0,0:0:0);
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    (CLKB => DOB7) = (0:0:0,0:0:0);
    (RSTB => DOB0) = (0:0:0,0:0:0);
    (RSTB => DOB1) = (0:0:0,0:0:0);
    (RSTB => DOB2) = (0:0:0,0:0:0);
    (RSTB => DOB3) = (0:0:0,0:0:0);
    (RSTB => DOB4) = (0:0:0,0:0:0);
    (RSTB => DOB5) = (0:0:0,0:0:0);
    (RSTB => DOB6) = (0:0:0,0:0:0);
    (RSTB => DOB7) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (posedge CLKA, WEA, 0:0:0, 0:0:0,,,, CLKA_dly, WEA_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKB, RSTB, 0:0:0, 0:0:0,,,, CLKB_dly, RSTB_dly);
    $setuphold (posedge CLKB, OCEB, 0:0:0, 0:0:0,,,, CLKB_dly, OCEB_dly);
    $setuphold (posedge CLKB, CEB, 0:0:0, 0:0:0,,,, CLKB_dly, CEB_dly);
    $setuphold (posedge CLKB, WEB, 0:0:0, 0:0:0,,,, CLKB_dly, WEB_dly);
    $setuphold (posedge CLKB, ADB3, 0:0:0, 0:0:0,,,, CLKB_dly, ADB3_dly);
    $setuphold (posedge CLKB, ADB4, 0:0:0, 0:0:0,,,, CLKB_dly, ADB4_dly);
    $setuphold (posedge CLKB, ADB5, 0:0:0, 0:0:0,,,, CLKB_dly, ADB5_dly);
    $setuphold (posedge CLKB, ADB6, 0:0:0, 0:0:0,,,, CLKB_dly, ADB6_dly);
    $setuphold (posedge CLKB, DIB0, 0:0:0, 0:0:0,,,, CLKB_dly, DIB0_dly);
    $setuphold (posedge CLKB, DIB1, 0:0:0, 0:0:0,,,, CLKB_dly, DIB1_dly);
    $setuphold (posedge CLKB, DIB2, 0:0:0, 0:0:0,,,, CLKB_dly, DIB2_dly);
    $setuphold (posedge CLKB, DIB3, 0:0:0, 0:0:0,,,, CLKB_dly, DIB3_dly);
    $setuphold (posedge CLKB, DIB4, 0:0:0, 0:0:0,,,, CLKB_dly, DIB4_dly);
    $setuphold (posedge CLKB, DIB5, 0:0:0, 0:0:0,,,, CLKB_dly, DIB5_dly);
    $setuphold (posedge CLKB, DIB6, 0:0:0, 0:0:0,,,, CLKB_dly, DIB6_dly);
    $setuphold (posedge CLKB, DIB7, 0:0:0, 0:0:0,,,, CLKB_dly, DIB7_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module DP8KC1187 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b000";
  defparam INST10.DATA_WIDTH_A = 9;
  defparam INST10.DATA_WIDTH_B = 9;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "WRITETHROUGH";
  defparam INST10.WRITEMODE_B = "WRITETHROUGH";
endmodule

module coreInst_registerFileInst_regs_registers_0_1_0 ( input DIA7, DIA6, DIA5, 
    DIA4, DIA3, DIA2, DIA1, DIA0, ADA6, ADA5, ADA4, ADA3, output DOA7, DOA6, 
    DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input WEA, CEA, OCEA, RSTA, CLKA, CLKB, 
    RSTB, OCEB, CEB, WEB, output DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, 
    DOB7, input ADB3, ADB4, ADB5, ADB6, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, 
    DIB6, DIB7 );
  wire   GNDI, VCCI, DIA7_dly, CLKA_dly, DIA6_dly, DIA5_dly, DIA4_dly, 
         DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA6_dly, ADA5_dly, ADA4_dly, 
         ADA3_dly, WEA_dly, CEA_dly, OCEA_dly, RSTA_dly, RSTB_dly, CLKB_dly, 
         OCEB_dly, CEB_dly, WEB_dly, ADB3_dly, ADB4_dly, ADB5_dly, ADB6_dly, 
         DIB0_dly, DIB1_dly, DIB2_dly, DIB3_dly, DIB4_dly, DIB5_dly, DIB6_dly, 
         DIB7_dly;

  DP8KC1188 \coreInst/registerFileInst/regs/registers_0_1_0_DP8KC ( 
    .CEA(CEA_dly), .OCEA(OCEA_dly), .CLKA(CLKA_dly), .WEA(WEA_dly), 
    .CSA0(GNDI), .CSA1(GNDI), .CSA2(GNDI), .RSTA(RSTA_dly), .CEB(CEB_dly), 
    .OCEB(OCEB_dly), .CLKB(CLKB_dly), .WEB(WEB_dly), .CSB0(GNDI), .CSB1(GNDI), 
    .CSB2(GNDI), .RSTB(RSTB_dly), .DIA0(DIA0_dly), .DIA1(DIA1_dly), 
    .DIA2(DIA2_dly), .DIA3(DIA3_dly), .DIA4(DIA4_dly), .DIA5(DIA5_dly), 
    .DIA6(DIA6_dly), .DIA7(DIA7_dly), .DIA8(GNDI), .ADA0(VCCI), .ADA1(GNDI), 
    .ADA2(GNDI), .ADA3(ADA3_dly), .ADA4(ADA4_dly), .ADA5(ADA5_dly), 
    .ADA6(ADA6_dly), .ADA7(GNDI), .ADA8(GNDI), .ADA9(GNDI), .ADA10(GNDI), 
    .ADA11(GNDI), .ADA12(GNDI), .DIB0(DIB0_dly), .DIB1(DIB1_dly), 
    .DIB2(DIB2_dly), .DIB3(DIB3_dly), .DIB4(DIB4_dly), .DIB5(DIB5_dly), 
    .DIB6(DIB6_dly), .DIB7(DIB7_dly), .DIB8(GNDI), .ADB0(VCCI), .ADB1(GNDI), 
    .ADB2(GNDI), .ADB3(ADB3_dly), .ADB4(ADB4_dly), .ADB5(ADB5_dly), 
    .ADB6(ADB6_dly), .ADB7(GNDI), .ADB8(GNDI), .ADB9(GNDI), .ADB10(GNDI), 
    .ADB11(GNDI), .ADB12(GNDI), .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), 
    .DOA3(DOA3), .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (RSTA => DOA7) = (0:0:0,0:0:0);
    (RSTA => DOA6) = (0:0:0,0:0:0);
    (RSTA => DOA5) = (0:0:0,0:0:0);
    (RSTA => DOA4) = (0:0:0,0:0:0);
    (RSTA => DOA3) = (0:0:0,0:0:0);
    (RSTA => DOA2) = (0:0:0,0:0:0);
    (RSTA => DOA1) = (0:0:0,0:0:0);
    (RSTA => DOA0) = (0:0:0,0:0:0);
    (CLKA => DOA7) = (0:0:0,0:0:0);
    (CLKA => DOA6) = (0:0:0,0:0:0);
    (CLKA => DOA5) = (0:0:0,0:0:0);
    (CLKA => DOA4) = (0:0:0,0:0:0);
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    (CLKB => DOB7) = (0:0:0,0:0:0);
    (RSTB => DOB0) = (0:0:0,0:0:0);
    (RSTB => DOB1) = (0:0:0,0:0:0);
    (RSTB => DOB2) = (0:0:0,0:0:0);
    (RSTB => DOB3) = (0:0:0,0:0:0);
    (RSTB => DOB4) = (0:0:0,0:0:0);
    (RSTB => DOB5) = (0:0:0,0:0:0);
    (RSTB => DOB6) = (0:0:0,0:0:0);
    (RSTB => DOB7) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (posedge CLKA, WEA, 0:0:0, 0:0:0,,,, CLKA_dly, WEA_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKA, OCEA, 0:0:0, 0:0:0,,,, CLKA_dly, OCEA_dly);
    $setuphold (posedge CLKA, RSTA, 0:0:0, 0:0:0,,,, CLKA_dly, RSTA_dly);
    $setuphold (posedge CLKB, RSTB, 0:0:0, 0:0:0,,,, CLKB_dly, RSTB_dly);
    $setuphold (posedge CLKB, OCEB, 0:0:0, 0:0:0,,,, CLKB_dly, OCEB_dly);
    $setuphold (posedge CLKB, CEB, 0:0:0, 0:0:0,,,, CLKB_dly, CEB_dly);
    $setuphold (posedge CLKB, WEB, 0:0:0, 0:0:0,,,, CLKB_dly, WEB_dly);
    $setuphold (posedge CLKB, ADB3, 0:0:0, 0:0:0,,,, CLKB_dly, ADB3_dly);
    $setuphold (posedge CLKB, ADB4, 0:0:0, 0:0:0,,,, CLKB_dly, ADB4_dly);
    $setuphold (posedge CLKB, ADB5, 0:0:0, 0:0:0,,,, CLKB_dly, ADB5_dly);
    $setuphold (posedge CLKB, ADB6, 0:0:0, 0:0:0,,,, CLKB_dly, ADB6_dly);
    $setuphold (posedge CLKB, DIB0, 0:0:0, 0:0:0,,,, CLKB_dly, DIB0_dly);
    $setuphold (posedge CLKB, DIB1, 0:0:0, 0:0:0,,,, CLKB_dly, DIB1_dly);
    $setuphold (posedge CLKB, DIB2, 0:0:0, 0:0:0,,,, CLKB_dly, DIB2_dly);
    $setuphold (posedge CLKB, DIB3, 0:0:0, 0:0:0,,,, CLKB_dly, DIB3_dly);
    $setuphold (posedge CLKB, DIB4, 0:0:0, 0:0:0,,,, CLKB_dly, DIB4_dly);
    $setuphold (posedge CLKB, DIB5, 0:0:0, 0:0:0,,,, CLKB_dly, DIB5_dly);
    $setuphold (posedge CLKB, DIB6, 0:0:0, 0:0:0,,,, CLKB_dly, DIB6_dly);
    $setuphold (posedge CLKB, DIB7, 0:0:0, 0:0:0,,,, CLKB_dly, DIB7_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module DP8KC1188 ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, 
    OCEB, CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, 
    DIA5, DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, 
    ADA8, ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, 
    DIB7, DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, 
    ADB10, ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, 
    DOA8, DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(DOB7), .DOB8(DOB8), .DIA0(DIA0), 
    .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), .DIA4(DIA4), .DIA5(DIA5), 
    .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), .DIB0(DIB0), .DIB1(DIB1), 
    .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), .DIB5(DIB5), .DIB6(DIB6), 
    .DIB7(DIB7), .DIB8(DIB8), .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), 
    .ADA3(ADA3), .ADA4(ADA4), .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), 
    .ADA8(ADA8), .ADA9(ADA9), .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), 
    .ADB0(ADB0), .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), 
    .ADB5(ADB5), .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), 
    .ADB10(ADB10), .ADB11(ADB11), .ADB12(ADB12), .WEA(WEA), .WEB(WEB), 
    .RSTA(RSTA), .RSTB(RSTB), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), 
    .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .CLKA(CLKA), .CLKB(CLKB), .CEA(CEA), 
    .CEB(CEB), .OCEA(OCEA), .OCEB(OCEB));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b000";
  defparam INST10.DATA_WIDTH_A = 9;
  defparam INST10.DATA_WIDTH_B = 9;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "ASYNC";
  defparam INST10.WRITEMODE_A = "WRITETHROUGH";
  defparam INST10.WRITEMODE_B = "WRITETHROUGH";
endmodule

module GSR_INST ( input GSRNET );

  GSR5MODE GSR_INST_GSRMODE( .GSR(GSRNET));

  specify
  endspecify

endmodule

module GSR5MODE ( input GSR );
  wire   GSRMODE;

  INV INST10( .A(GSR), .Z(GSRMODE));
  GSR INST20( .GSR(GSRMODE));
endmodule
